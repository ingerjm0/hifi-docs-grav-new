      {% extends 'partials/base_noGit.html.twig' %}
      {% set tags = page.taxonomy.tag %}
      {% if tags %}
          {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs', 'tag': tags}},'order': {'by': 'default', 'dir': 'asc'}}) %}
      {% else %}
          {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs'}},'order': {'by': 'default', 'dir': 'asc'}}) %}
      {% endif %}
      
      {% block navigation %}
          <div id="navigation">
          {% if not progress.isFirst(page.path) %}
              <a class="nav nav-prev" href="{{ progress.nextSibling(page.path).url }}"> <img src="{{ url('theme://images/left-arrow.png') }}"></a>
          {% endif %}
      
          {% if not progress.isLast(page.path) %}
              <a class="nav nav-next" href="{{ progress.prevSibling(page.path).url }}"><img src="{{ url('theme://images/right-arrow.png') }}"></a>
          {% endif %}
          </div>
      {% endblock %}
      
      {% block content %}
          <div id="api-specific">
              <div id="body-inner">
                  <h1>{{ page.title }}</h1>
                  <section>
<article>
  <div class="container-overview">
    <div class="description">
      <table>
        <tbody>
          <tr>
            <th>Available in:</th>
            <td>Interface Scripts</td>
            <td>Client Entity Scripts</td>
          </tr>
        </tbody>
      </table><br>The Overlays API provides facilities to create and interact with overlays. Overlays are 2D and 3D objects visible only to yourself and that aren&apos;t persisted to the domain. They are used for UI.
    </div>
    <div>
      <h5>Methods</h5>
    </div>
    <div><a href="#.addOverlay">addOverlay</a></div>
    <div><a href="#.cloneOverlay">cloneOverlay</a></div>
    <div><a href="#.deleteOverlay">deleteOverlay</a></div>
    <div><a href="#.editOverlay">editOverlay</a></div>
    <div><a href="#.editOverlays">editOverlays</a></div>
    <div><a href="#.findOverlays">findOverlays</a></div>
    <div><a href="#.findRayIntersection">findRayIntersection</a></div>
    <div><a href="#.getKeyboardFocusOverlay">getKeyboardFocusOverlay</a></div>
    <div><a href="#.getOverlayAtPoint">getOverlayAtPoint</a></div>
    <div><a href="#.getOverlayObject">getOverlayObject</a></div>
    <div><a href="#.getOverlaysProperties">getOverlaysProperties</a></div>
    <div><a href="#.getOverlayType">getOverlayType</a></div>
    <div><a href="#.getProperties">getProperties</a></div>
    <div><a href="#.getProperty">getProperty</a></div>
    <div><a href="#.height">height</a></div>
    <div><a href="#.isAddedOverlay">isAddedOverlay</a></div>
    <div><a href="#.isLoaded">isLoaded</a></div>
    <div><a href="#.sendHoverEnterOverlay">sendHoverEnterOverlay</a></div>
    <div><a href="#.sendHoverLeaveOverlay">sendHoverLeaveOverlay</a></div>
    <div><a href="#.sendHoverOverOverlay">sendHoverOverOverlay</a></div>
    <div><a href="#.sendMouseMoveOnOverlay">sendMouseMoveOnOverlay</a></div>
    <div><a href="#.sendMousePressOnOverlay">sendMousePressOnOverlay</a></div>
    <div><a href="#.sendMouseReleaseOnOverlay">sendMouseReleaseOnOverlay</a></div>
    <div><a href="#.setKeyboardFocusOverlay">setKeyboardFocusOverlay</a></div>
    <div><a href="#.textSize">textSize</a></div>
    <div><a href="#.width">width</a></div><br>
    <div>
      <h5>Signals</h5>
    </div>
    <div><a href="#.hoverEnterOverlay">hoverEnterOverlay</a></div>
    <div><a href="#.hoverLeaveOverlay">hoverLeaveOverlay</a></div>
    <div><a href="#.hoverOverOverlay">hoverOverOverlay</a></div>
    <div><a href="#.mouseDoublePressOffOverlay">mouseDoublePressOffOverlay</a></div>
    <div><a href="#.mouseDoublePressOnOverlay">mouseDoublePressOnOverlay</a></div>
    <div><a href="#.mouseMoveOnOverlay">mouseMoveOnOverlay</a></div>
    <div><a href="#.mousePressOffOverlay">mousePressOffOverlay</a></div>
    <div><a href="#.mousePressOnOverlay">mousePressOnOverlay</a></div>
    <div><a href="#.mouseReleaseOnOverlay">mouseReleaseOnOverlay</a></div>
    <div><a href="#.overlayDeleted">overlayDeleted</a></div><br>
    <div>
      <h5>Type Definitions</h5>
    </div>
    <div><a href="#.Circle3DProperties">Circle3DProperties</a></div>
    <div><a href="#.CubeProperties">CubeProperties</a></div>
    <div><a href="#.GridProperties">GridProperties</a></div>
    <div><a href="#.Image3DProperties">Image3DProperties</a></div>
    <div><a href="#.ImageProperties">ImageProperties</a></div>
    <div><a href="#.Line3DProperties">Line3DProperties</a></div>
    <div><a href="#.ModelProperties">ModelProperties</a></div>
    <div><a href="#.OverlayProperties">OverlayProperties</a></div>
    <div><a href="#.OverlayType">OverlayType</a></div>
    <div><a href="#.RayToOverlayIntersectionResult">RayToOverlayIntersectionResult</a></div>
    <div><a href="#.Rectangle3DProperties">Rectangle3DProperties</a></div>
    <div><a href="#.RectangleProperties">RectangleProperties</a></div>
    <div><a href="#.Shape">Shape</a></div>
    <div><a href="#.ShapeProperties">ShapeProperties</a></div>
    <div><a href="#.SphereProperties">SphereProperties</a></div>
    <div><a href="#.Text3DProperties">Text3DProperties</a></div>
    <div><a href="#.TextProperties">TextProperties</a></div>
    <div><a href="#.Web3DProperties">Web3DProperties</a></div><br>
    <h5 class="subsection-title">Properties:</h5>
    <table class="props">
      <thead>
        <tr>
          <th>Name</th>
          <th>Type</th>
          <th class="last">Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td class="name"><code>keyboardFocusOverlay</code></td>
          <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
          <td class="description last">Get or set the <a href="/api-reference/namespaces/overlays#.OverlayType">web3d</a> overlay that has keyboard focus. If no overlay has keyboard focus, get returns <code>null</code>; set to <code>null</code> or <a href="/api-reference/namespaces/uuid">Uuid.NULL</a> to clear keyboard focus.</td>
        </tr>
      </tbody>
    </table>
  </div>
  <h4 class="subsection-title">Methods</h4>
  <h5 class="name" id=".addOverlay"> addOverlay<span class="signature">(type, properties)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/uuid">Uuid</a>}</span></h5>
  <div class="description"> Add an overlay to the scene.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/overlays#.OverlayType">Overlays.OverlayType</a></span></td>
        <td class="description last">The type of the overlay to add.</td>
      </tr>
      <tr>
        <td class="name"><code>properties</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/overlays#.OverlayProperties">Overlays.OverlayProperties</a></span></td>
        <td class="description last">The properties of the overlay to add.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The ID of the newly created overlay if successful, otherwise <a href="/api-reference/namespaces/uuid">Uuid.NULL</a>.</div>
  <dl><dt> Type: <a href="/api-reference/namespaces/uuid">Uuid</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Add a cube overlay in front of your avatar.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});</code></pre>
  <h5 class="name" id=".cloneOverlay"> cloneOverlay<span class="signature">(overlayID)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/uuid">Uuid</a>}</span></h5>
  <div class="description"> Create a clone of an existing overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to clone.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The ID of the new overlay if successful, otherwise <a href="/api-reference/namespaces/uuid">Uuid.NULL</a>.</div>
  <dl><dt> Type: <a href="/api-reference/namespaces/uuid">Uuid</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Add an overlay in front of your avatar, clone it, and move the clone to be above the original.</p><pre><code>var position = Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 }));
var original = Overlays.addOverlay(&quot;cube&quot;, {
  position: position,
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});

var clone = Overlays.cloneOverlay(original);
Overlays.editOverlay(clone, {
  position: Vec3.sum({ x: 0, y: 0.5, z: 0}, position)
});</code></pre>
  <h5 class="name" id=".deleteOverlay"> deleteOverlay<span class="signature">(overlayID)</span><span class="type-signature"></span></h5>
  <div class="description"> Delete an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to delete.</td>
      </tr>
    </tbody>
  </table>
  <h5>Example</h5>
  <p class="code-caption">Create an overlay in front of your avatar then delete it.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
print(&quot;Overlay: &quot; + overlay);
Overlays.deleteOverlay(overlay);</code></pre>
  <h5 class="name" id=".editOverlay"> editOverlay<span class="signature">(overlayID, properties)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
  <div class="description"> Edit an overlay&apos;s properties.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to edit.</td>
      </tr>
      <tr>
        <td class="name"><code>properties</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/overlays#.OverlayProperties">Overlays.OverlayProperties</a></span></td>
        <td class="description last">The properties changes to make.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> <code>true</code> if the overlay was found and edited, otherwise <code>false</code>.</div>
  <dl><dt> Type: boolean</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Add an overlay in front of your avatar then change its color.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});

var success = Overlays.editOverlay(overlay, {
  color: { red: 255, green: 0, blue: 0 }
});
print(&quot;Success: &quot; + success);</code></pre>
  <h5 class="name" id=".editOverlays"> editOverlays<span class="signature">(propertiesById)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
  <div class="description"> Edit multiple overlays&apos; properties.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>propertiesById</code></td>
        <td class="type"> <span class="param-type">object.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>, <a href="/api-reference/namespaces/overlays#.OverlayProperties">Overlays.OverlayProperties</a>&gt;</span></td>
        <td class="description last">An object with overlay IDs as keys and <a href="/api-reference/namespaces/overlays#.OverlayProperties">OverlayProperties</a> edits to make as values.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> <code>true</code> if all overlays were found and edited, otherwise <code>false</code> (some may have been found and edited).</div>
  <dl><dt> Type: boolean</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create two overlays in front of your avatar then change their colors.</p><pre><code>var overlayA = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: -0.3, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
var overlayB = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0.3, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});

var overlayEdits = {};
overlayEdits[overlayA] = { color: { red: 255, green: 0, blue: 0 } };
overlayEdits[overlayB] = { color: { red: 0, green: 255, blue: 0 } };
var success = Overlays.editOverlays(overlayEdits);
print(&quot;Success: &quot; + success);</code></pre>
  <h5 class="name" id=".findOverlays"> findOverlays<span class="signature">(center, radius)</span> <span class="type-signature">&#x2192; {Array.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>&gt;}</span></h5>
  <div class="description"> Return a list of 3D overlays with bounding boxes that touch a search sphere.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>center</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="description last">The center of the search sphere.</td>
      </tr>
      <tr>
        <td class="name"><code>radius</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The radius of the search sphere.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> An array of overlay IDs with bounding boxes that touch a search sphere.</div>
  <dl><dt> Type: Array.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>&gt;</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create two cube overlays in front of your avatar then search for overlays near your avatar.</p><pre><code>var overlayA = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: -0.3, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
print(&quot;Overlay A: &quot; + overlayA);
var overlayB = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0.3, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
print(&quot;Overlay B: &quot; + overlayB);

var overlaysFound = Overlays.findOverlays(MyAvatar.position, 5.0);
print(&quot;Overlays found: &quot; + JSON.stringify(overlaysFound));</code></pre>
  <h5 class="name" id=".findRayIntersection"> findRayIntersection<span class="signature">(pickRay, precisionPicking<span class="signature-attributes">opt</span>, overlayIDsToInclude<span class="signature-attributes">opt</span>, overlayIDsToExclude<span class="signature-attributes">opt</span>, visibleOnly<span class="signature-attributes">opt</span>, collidableOnly<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/overlays#.RayToOverlayIntersectionResult">Overlays.RayToOverlayIntersectionResult</a>}</span></h5>
  <div class="description"> Find the closest 3D overlay intersected by a <a href="/api-reference/globals#PickRay">PickRay</a>. Overlays with their <code>drawInFront</code> property set to <code>true</code> have priority over overlays that don&apos;t, except that tablet overlays have priority over any <code>drawInFront</code> overlays behind them. I.e., if a <code>drawInFront</code> overlay is behind one that isn&apos;t <code>drawInFront</code>, the <code>drawInFront</code> overlay is returned, but if a tablet overlay is in front of a <code>drawInFront</code> overlay, the tablet overlay is returned.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Attributes</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>pickRay</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PickRay">PickRay</a></span></td>
        <td class="attributes"></td>
        <td class="default"></td>
        <td class="description last">The PickRay to use for finding overlays.</td>
      </tr>
      <tr>
        <td class="name"><code>precisionPicking</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="attributes"> &lt;optional&gt;<br></td>
        <td class="default"> false</td>
        <td class="description last"><em>Unused</em>; exists to match Entity API.</td>
      </tr>
      <tr>
        <td class="name"><code>overlayIDsToInclude</code></td>
        <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>&gt;</span></td>
        <td class="attributes"> &lt;optional&gt;<br></td>
        <td class="default"> []</td>
        <td class="description last">If not empty then the search is restricted to these overlays.</td>
      </tr>
      <tr>
        <td class="name"><code>overlayIDsToExclude</code></td>
        <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>&gt;</span></td>
        <td class="attributes"> &lt;optional&gt;<br></td>
        <td class="default"> []</td>
        <td class="description last">Overlays to ignore during the search.</td>
      </tr>
      <tr>
        <td class="name"><code>visibleOnly</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="attributes"> &lt;optional&gt;<br></td>
        <td class="default"> false</td>
        <td class="description last"><em>Unused</em>; exists to match Entity API.</td>
      </tr>
      <tr>
        <td class="name"><code>collidableOnly</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="attributes"> &lt;optional&gt;<br></td>
        <td class="default"> false</td>
        <td class="description last"><em>Unused</em>; exists to match Entity API.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The closest 3D overlay intersected by <code>pickRay</code>, taking into account <code>overlayIDsToInclude</code> and <code>overlayIDsToExclude</code> if they&apos;re not empty.</div>
  <dl><dt> Type: <a href="/api-reference/namespaces/overlays#.RayToOverlayIntersectionResult">Overlays.RayToOverlayIntersectionResult</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create a cube overlay in front of your avatar. Report 3D overlay intersection details for mouse clicks.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});

Controller.mousePressEvent.connect(function (event) {
  var pickRay = Camera.computePickRay(event.x, event.y);
  var intersection = Overlays.findRayIntersection(pickRay);
  print(&quot;Intersection: &quot; + JSON.stringify(intersection));
});</code></pre>
  <h5 class="name" id=".getKeyboardFocusOverlay"> getKeyboardFocusOverlay<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/uuid">Uuid</a>}</span></h5>
  <div class="description"> Get the ID of the Web3D overlay that has keyboard focus.</div>
  <h6>Returns:</h6>
  <div class="param-desc"> The ID of the <a href="/api-reference/namespaces/overlays#.OverlayType">web3d</a> overlay that has focus, if any, otherwise <code>null</code>.</div>
  <dl><dt> Type: <a href="/api-reference/namespaces/uuid">Uuid</a></dt></dl>
  <h5 class="name" id=".getOverlayAtPoint"> getOverlayAtPoint<span class="signature">(point)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/uuid">Uuid</a>}</span></h5>
  <div class="description"> Get the ID of the 2D overlay at a particular point on the screen or HUD.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>point</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="description last">The point to check for an overlay.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The ID of the 2D overlay at the specified point if found, otherwise <code>null</code>.</div>
  <dl><dt> Type: <a href="/api-reference/namespaces/uuid">Uuid</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create a 2D overlay and add an event function that reports the overlay clicked on, if any.</p><pre><code>var overlay = Overlays.addOverlay(&quot;rectangle&quot;, {
  bounds: { x: 100, y: 100, width: 200, height: 100 },
  color: { red: 255, green: 255, blue: 255 }
});
print(&quot;Created: &quot; + overlay);

Controller.mousePressEvent.connect(function (event) {
  var overlay = Overlays.getOverlayAtPoint({ x: event.x, y: event.y });
  print(&quot;Clicked: &quot; + overlay);
});</code></pre>
  <h5 class="name" id=".getOverlayObject"> getOverlayObject<span class="signature">(overlayID)</span> <span class="type-signature">&#x2192; {object}</span></h5>
  <div class="description"> Get the overlay script object. In particular, this is useful for accessing the event bridge for a <code>web3d</code> overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to get the script object of.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The script object for the overlay if found.</div>
  <dl><dt> Type: object</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Receive &quot;hello&quot; messages from a <code>web3d</code> overlay.</p><pre><code>// HTML file: name &quot;web3d.html&quot;.
&lt;!DOCTYPE html&gt;
&lt;html&gt;
&lt;head&gt;
  &lt;title&gt;HELLO&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
  &lt;h1&gt;HELLO&lt;/h1&gt;&lt;/h1&gt;
  &lt;script&gt;
      setInterval(function () {
          EventBridge.emitWebEvent(&quot;hello&quot;);
      }, 2000);
  &lt;/script&gt;
&lt;/body&gt;
&lt;/html&gt;

// Script file.
var web3dOverlay = Overlays.addOverlay(&quot;web3d&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, {x: 0, y: 0.5, z: -3 })),
  rotation: MyAvatar.orientation,
  url: Script.resolvePath(&quot;web3d.html&quot;),
  alpha: 1.0
});

function onWebEventReceived(event) {
  print(&quot;onWebEventReceived() : &quot; + JSON.stringify(event));
}

overlayObject = Overlays.getOverlayObject(web3dOverlay);
overlayObject.webEventReceived.connect(onWebEventReceived);

Script.scriptEnding.connect(function () {
  Overlays.deleteOverlay(web3dOverlay);
});</code></pre>
  <h5 class="name" id=".getOverlaysProperties"> getOverlaysProperties<span class="signature">(propertiesById)</span> <span class="type-signature">&#x2192; {object.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>, <a href="/api-reference/namespaces/overlays#.OverlayProperties">Overlays.OverlayProperties</a>&gt;}</span></h5>
  <div class="description"> Get the values of multiple overlays&apos; properties.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>propertiesById</code></td>
        <td class="type"> <span class="param-type">object.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>, Array.&lt;string&gt;&gt;</span></td>
        <td class="description last">An object with overlay IDs as keys and arrays of the names of properties to get for each as values.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> An object with overlay IDs as keys and <a href="/api-reference/namespaces/overlays#.OverlayProperties">OverlayProperties</a> as values.</div>
  <dl><dt> Type: object.&lt;<a href="/api-reference/namespaces/uuid">Uuid</a>, <a href="/api-reference/namespaces/overlays#.OverlayProperties">Overlays.OverlayProperties</a>&gt;</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create two cube overlays in front of your avatar then get some of their properties.</p><pre><code>var overlayA = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: -0.3, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
var overlayB = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0.3, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
var propertiesToGet = {};
propertiesToGet[overlayA] = [&quot;color&quot;, &quot;alpha&quot;];
propertiesToGet[overlayB] = [&quot;dimensions&quot;];
var properties = Overlays.getOverlaysProperties(propertiesToGet);
print(&quot;Overlays properties: &quot; + JSON.stringify(properties));</code></pre>
  <h5 class="name" id=".getOverlayType"> getOverlayType<span class="signature">(overlayID)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/overlays#.OverlayType">Overlays.OverlayType</a>}</span></h5>
  <div class="description"> Get the type of an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to get the type of.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The type of the overlay if found, otherwise an empty string.</div>
  <dl><dt> Type: <a href="/api-reference/namespaces/overlays#.OverlayType">Overlays.OverlayType</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create an overlay in front of your avatar then get and report its type.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
var type = Overlays.getOverlayType(overlay);
print(&quot;Type: &quot; + type);</code></pre>
  <h5 class="name" id=".getProperties"> getProperties<span class="signature">(overlayID, properties)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/overlays#.OverlayProperties">Overlays.OverlayProperties</a>}</span></h5>
  <div class="description"> Get the values of an overlay&apos;s properties.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>properties</code></td>
        <td class="type"> <span class="param-type">Array.&lt;string&gt;</span></td>
        <td class="description last">An array of names of properties to get the values of.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The values of valid properties if the overlay can be found, otherwise <code>undefined</code>.</div>
  <dl><dt> Type: <a href="/api-reference/namespaces/overlays#.OverlayProperties">Overlays.OverlayProperties</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create an overlay in front of your avatar then report some of its properties.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
var properties = Overlays.getProperties(overlay, [&quot;color&quot;, &quot;alpha&quot;, &quot;grabbable&quot;]);
print(&quot;Overlay properties: &quot; + JSON.stringify(properties));</code></pre>
  <h5 class="name" id=".getProperty"> getProperty<span class="signature">(overlayID, property)</span> <span class="type-signature">&#x2192; {object}</span></h5>
  <div class="description"> Get the value of a 3D overlay&apos;s property.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay. <em>Must be for a 3D <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</em></td>
      </tr>
      <tr>
        <td class="name"><code>property</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="description last">The name of the property value to get.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The value of the property if the 3D overlay and property can be found, otherwise <code>undefined</code>.</div>
  <dl><dt> Type: object</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create an overlay in front of your avatar then report its alpha property value.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
var alpha = Overlays.getProperty(overlay, &quot;alpha&quot;);
print(&quot;Overlay alpha: &quot; + alpha);</code></pre>
  <h5 class="name" id=".height"> height<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
  <div class="description"> Get the height of the window or HUD.</div>
  <h6>Returns:</h6>
  <div class="param-desc"> The height, in pixels, of the Interface window if in desktop mode or the HUD if in HMD mode.</div>
  <dl><dt> Type: number</dt></dl>
  <h5 class="name" id=".isAddedOverlay"> isAddedOverlay<span class="signature">(overlayID)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
  <div class="description"> Check if there is an overlay of a given ID.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID to check.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> <code>true</code> if an overlay with the given ID exists, <code>false</code> otherwise.</div>
  <dl><dt> Type: boolean</dt></dl>
  <h5 class="name" id=".isLoaded"> isLoaded<span class="signature">(overlayID)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
  <div class="description"> Check whether an overlay&apos;s assets have been loaded. For example, for an <code>image</code> overlay the result indicates whether its image has been loaded.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to check.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> <code>true</code> if the overlay&apos;s assets have been loaded, otherwise <code>false</code>.</div>
  <dl><dt> Type: boolean</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create an image overlay and report whether its image is loaded after 1s.</p><pre><code>var overlay = Overlays.addOverlay(&quot;image&quot;, {
  bounds: { x: 100, y: 100, width: 200, height: 200 },
  imageURL: &quot;https://content.highfidelity.com/DomainContent/production/Particles/wispy-smoke.png&quot;
});
Script.setTimeout(function () {
  var isLoaded = Overlays.isLoaded(overlay);
  print(&quot;Image loaded: &quot; + isLoaded);
}, 1000);</code></pre>
  <h5 class="name" id=".sendHoverEnterOverlay"> sendHoverEnterOverlay<span class="signature">(id, event)</span><span class="type-signature"></span></h5>
  <div class="description"> Generate a hover enter event on an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>id</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to generate a hover enter event on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The hover enter event details.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".sendHoverLeaveOverlay"> sendHoverLeaveOverlay<span class="signature">(overlayID, event)</span><span class="type-signature"></span></h5>
  <div class="description"> Generate a hover leave event on an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to generate a hover leave event on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The hover leave event details.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".sendHoverOverOverlay"> sendHoverOverOverlay<span class="signature">(overlayID, event)</span><span class="type-signature"></span></h5>
  <div class="description"> Generate a hover over event on an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to generate a hover over event on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The hover over event details.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".sendMouseMoveOnOverlay"> sendMouseMoveOnOverlay<span class="signature">(overlayID, event)</span><span class="type-signature"></span></h5>
  <div class="description"> Generate a mouse move event on an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to generate a mouse move event on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse move event details.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".sendMousePressOnOverlay"> sendMousePressOnOverlay<span class="signature">(overlayID, event)</span><span class="type-signature"></span></h5>
  <div class="description"> Generate a mouse press event on an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to generate a mouse press event on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse press event details.</td>
      </tr>
    </tbody>
  </table>
  <h5>Example</h5>
  <p class="code-caption">Create a 2D rectangle overlay plus a 3D cube overlay and generate mousePressOnOverlay events for the 2D overlay.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
print(&quot;3D overlay: &quot; + overlay);

var overlay = Overlays.addOverlay(&quot;rectangle&quot;, {
  bounds: { x: 100, y: 100, width: 200, height: 100 },
  color: { red: 255, green: 255, blue: 255 }
});
print(&quot;2D overlay: &quot; + overlay);

// Overlays.mousePressOnOverlay by default applies only to 3D overlays.
Overlays.mousePressOnOverlay.connect(function(overlayID, event) {
  print(&quot;Clicked: &quot; + overlayID);
});

Controller.mousePressEvent.connect(function (event) {
  // Overlays.getOverlayAtPoint applies only to 2D overlays.
  var overlay = Overlays.getOverlayAtPoint({ x: event.x, y: event.y });
  if (overlay) {
      Overlays.sendMousePressOnOverlay(overlay, {
          type: &quot;press&quot;,
          id: 0,
          pos2D: event
      });
  }
});</code></pre>
  <h5 class="name" id=".sendMouseReleaseOnOverlay"> sendMouseReleaseOnOverlay<span class="signature">(overlayID, event)</span><span class="type-signature"></span></h5>
  <div class="description"> Generate a mouse release event on an overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to generate a mouse release event on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse release event details.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".setKeyboardFocusOverlay"> setKeyboardFocusOverlay<span class="signature">(overlayID)</span><span class="type-signature"></span></h5>
  <div class="description"> Set the Web3D overlay that has keyboard focus.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the <a href="/api-reference/namespaces/overlays#.OverlayType">web3d</a> overlay to set keyboard focus to. Use <code>null</code> or <a href="/api-reference/namespaces/uuid">Uuid.NULL</a> to unset keyboard focus from an overlay.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".textSize"> textSize<span class="signature">(overlayID, text)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Size">Size</a>}</span></h5>
  <div class="description"> Calculates the size of the given text in the specified overlay if it is a text overlay.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay to use for calculation.</td>
      </tr>
      <tr>
        <td class="name"><code>text</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="description last">The string to calculate the size of.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The size of the <code>text</code> if the overlay is a text overlay, otherwise <code>{ height: 0, width : 0 }</code>. If the overlay is a 2D overlay, the size is in pixels; if the overlay is a 3D overlay, the size is in meters.</div>
  <dl><dt> Type: <a href="/api-reference/globals#Size">Size</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Calculate the size of &quot;hello&quot; in a 3D text overlay.</p><pre><code>var overlay = Overlays.addOverlay(&quot;text3d&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -2 })),
  rotation: MyAvatar.orientation,
  text: &quot;hello&quot;,
  lineHeight: 0.2
});
var textSize = Overlays.textSize(overlay, &quot;hello&quot;);
print(&quot;Size of \&quot;hello\&quot;: &quot; + JSON.stringify(textSize));</code></pre>
  <h5 class="name" id=".width"> width<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
  <div class="description"> Get the width of the window or HUD.</div>
  <h6>Returns:</h6>
  <div class="param-desc"> The width, in pixels, of the Interface window if in desktop mode or the HUD if in HMD mode.</div>
  <dl><dt> Type: number</dt></dl>
  <h4 class="subsection-title">Signals</h4>
  <h5 class="name" id=".hoverEnterOverlay"> hoverEnterOverlay<span class="signature">(overlayID, event)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse cursor starts hovering over an overlay. Only occurs for 3D overlays (unless you use <a href="/api-reference/namespaces/overlays#.sendHoverEnterOverlay">sendHoverEnterOverlay</a> for a 2D overlay).</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay the mouse moved event occurred on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse move event details.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create a cube overlay in front of your avatar and report when you start hovering your mouse over it.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
print(&quot;Overlay: &quot; + overlay);
Overlays.hoverEnterOverlay.connect(function(overlayID, event) {
  print(&quot;Hover enter: &quot; + overlayID);
});</code></pre>
  <h5 class="name" id=".hoverLeaveOverlay"> hoverLeaveOverlay<span class="signature">(overlayID, event)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse cursor finishes hovering over an overlay. Only occurs for 3D overlays (unless you use <a href="/api-reference/namespaces/overlays#.sendHoverLeaveOverlay">sendHoverLeaveOverlay</a> for a 2D overlay).</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay the hover leave event occurred on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The hover leave event details.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5 class="name" id=".hoverOverOverlay"> hoverOverOverlay<span class="signature">(overlayID, event)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse cursor continues hovering over an overlay. Only occurs for 3D overlays (unless you use <a href="/api-reference/namespaces/overlays#.sendHoverOverOverlay">sendHoverOverOverlay</a> for a 2D overlay).</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay the hover over event occurred on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The hover over event details.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5 class="name" id=".mouseDoublePressOffOverlay"> mouseDoublePressOffOverlay<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse double press event occurs on something other than a 3D overlay.</div>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5 class="name" id=".mouseDoublePressOnOverlay"> mouseDoublePressOnOverlay<span class="signature">(overlayID, event)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse double press event occurs on an overlay. Only occurs for 3D overlays.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay the mouse double press event occurred on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse double press event details.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5 class="name" id=".mouseMoveOnOverlay"> mouseMoveOnOverlay<span class="signature">(overlayID, event)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse move event occurs on an overlay. Only occurs for 3D overlays (unless you use <a href="/api-reference/namespaces/overlays#.sendMouseMoveOnOverlay">sendMouseMoveOnOverlay</a> for a 2D overlay).</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay the mouse moved event occurred on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse move event details.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5 class="name" id=".mousePressOffOverlay"> mousePressOffOverlay<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse press event occurs on something other than a 3D overlay.</div>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5 class="name" id=".mousePressOnOverlay"> mousePressOnOverlay<span class="signature">(overlayID, event)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse press event occurs on an overlay. Only occurs for 3D overlays (unless you use <a href="/api-reference/namespaces/overlays#.sendMousePressOnOverlay">sendMousePressOnOverlay</a> for a 2D overlay).</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay the mouse press event occurred on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse press event details.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create a cube overlay in front of your avatar and report mouse clicks on it.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
print(&quot;My overlay: &quot; + overlay);

Overlays.mousePressOnOverlay.connect(function(overlayID, event) {
  if (overlayID === overlay) {
      print(&quot;Clicked on my overlay&quot;);
  }
});</code></pre>
  <h5 class="name" id=".mouseReleaseOnOverlay"> mouseReleaseOnOverlay<span class="signature">(overlayID, event)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when a mouse release event occurs on an overlay. Only occurs for 3D overlays (unless you use <a href="/api-reference/namespaces/overlays#.sendMouseReleaseOnOverlay">sendMouseReleaseOnOverlay</a> for a 2D overlay).</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay the mouse release event occurred on.</td>
      </tr>
      <tr>
        <td class="name"><code>event</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#PointerEvent">PointerEvent</a></span></td>
        <td class="description last">The mouse release event details.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5 class="name" id=".overlayDeleted"> overlayDeleted<span class="signature">(overlayID)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
  <div class="description"> Triggered when an overlay is deleted.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The ID of the overlay that was deleted.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <dl><dt> Type: Signal</dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Create an overlay then delete it after 1s.</p><pre><code>var overlay = Overlays.addOverlay(&quot;cube&quot;, {
  position: Vec3.sum(MyAvatar.position, Vec3.multiplyQbyV(MyAvatar.orientation, { x: 0, y: 0, z: -3 })),
  rotation: MyAvatar.orientation,
  dimensions: { x: 0.3, y: 0.3, z: 0.3 },
  solid: true
});
print(&quot;Overlay: &quot; + overlay);

Overlays.overlayDeleted.connect(function(overlayID) {
  print(&quot;Deleted: &quot; + overlayID);
});
Script.setTimeout(function () {
  Overlays.deleteOverlay(overlay);
}, 1000);</code></pre>
  <h4 class="subsection-title">Type Definitions</h4>
  <h5 class="name" id=".Circle3DProperties">Circle3DProperties</h5>
  <div class="description"> These are the properties of a <code>circle3d</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> circle3d</td>
        <td class="description last">Has the value <code>&quot;circle3d&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code> Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="default"> 1,1</td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>. <em>Not used.</em></td>
      </tr>
      <tr>
        <td class="name"><code>startAt</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The counter-clockwise angle from the overlay&apos;s x-axis that drawing starts at, in degrees.</td>
      </tr>
      <tr>
        <td class="name"><code>endAt</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 360</td>
        <td class="description last">The counter-clockwise angle from the overlay&apos;s x-axis that drawing ends at, in degrees.</td>
      </tr>
      <tr>
        <td class="name"><code>outerRadius</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The outer radius of the overlay, in meters. Synonym: <code>radius</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>innerRadius</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The inner radius of the overlay, in meters.</td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay. Setting this value also sets the values of <code>innerStartColor</code>, <code>innerEndColor</code>, <code>outerStartColor</code>, and <code>outerEndColor</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>startColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>innerStartColor</code> and <code>outerStartColor</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>endColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>innerEndColor</code> and <code>outerEndColor</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>innerColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>innerStartColor</code> and <code>innerEndColor</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>outerColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>outerStartColor</code> and <code>outerEndColor</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>innerStartcolor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">The color at the inner start point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>innerEndColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">The color at the inner end point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>outerStartColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">The color at the outer start point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>outerEndColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"></td>
        <td class="description last">The color at the outer end point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.5</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>. Setting this value also sets the values of <code>innerStartAlpha</code>, <code>innerEndAlpha</code>, <code>outerStartAlpha</code>, and <code>outerEndAlpha</code>. Synonym: <code>Alpha</code>; <em>write-only</em>.</td>
      </tr>
      <tr>
        <td class="name"><code>startAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>innerStartAlpha</code> and <code>outerStartAlpha</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>endAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>innerEndAlpha</code> and <code>outerEndAlpha</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>innerAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>innerStartAlpha</code> and <code>innerEndAlpha</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>outerAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Sets the values of <code>outerStartAlpha</code> and <code>outerEndAlpha</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>innerStartAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The alpha at the inner start point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>innerEndAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The alpha at the inner end point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>outerStartAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The alpha at the outer start point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>outerEndAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The alpha at the outer end point of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>hasTickMarks</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, tick marks are drawn.</td>
      </tr>
      <tr>
        <td class="name"><code>majorTickMarksAngle</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The angle between major tick marks, in degrees.</td>
      </tr>
      <tr>
        <td class="name"><code>minorTickMarksAngle</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The angle between minor tick marks, in degrees.</td>
      </tr>
      <tr>
        <td class="name"><code>majorTickMarksLength</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The length of the major tick marks, in meters. A positive value draws tick marks outwards from the inner radius; a negative value draws tick marks inwards from the outer radius.</td>
      </tr>
      <tr>
        <td class="name"><code>minorTickMarksLength</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The length of the minor tick marks, in meters. A positive value draws tick marks outwards from the inner radius; a negative value draws tick marks inwards from the outer radius.</td>
      </tr>
      <tr>
        <td class="name"><code>majorTickMarksColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 0,0,0</td>
        <td class="description last">The color of the major tick marks.</td>
      </tr>
      <tr>
        <td class="name"><code>minorTickMarksColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 0,0,0</td>
        <td class="description last">The color of the minor tick marks.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".CubeProperties">CubeProperties</h5>
  <div class="description"> These are the properties of a <code>cube</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> cube</td>
        <td class="description last">Has the value <code>&quot;cube&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".GridProperties">GridProperties</h5>
  <div class="description"> These are the properties of a <code>grid</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> grid</td>
        <td class="description last">Has the value <code>&quot;grid&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="default"> 1,1</td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>followCamera</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the grid is always visible even as the camera moves to another position.</td>
      </tr>
      <tr>
        <td class="name"><code>majorGridEvery</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 5</td>
        <td class="description last">Integer number of <code>minorGridEvery</code> intervals at which to draw a thick grid line. Minimum value = <code>1</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>minorGridEvery</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">Real number of meters at which to draw thin grid lines. Minimum value = <code>0.001</code>.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".Image3DProperties">Image3DProperties</h5>
  <div class="description"> These are the properties of an <code>image3d</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> image3d</td>
        <td class="description last">Has the value <code>&quot;image3d&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="default"> 1,1</td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>keepAspectRatio</code></td>
        <td class="type"> <span class="param-type">bool</span></td>
        <td class="default"> true</td>
        <td class="description last">overlays will maintain the aspect ratio when the subImage is applied.</td>
      </tr>
      <tr>
        <td class="name"><code>isFacingAvatar</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"></td>
        <td class="description last">If <code>true</code>, the overlay is rotated to face the user&apos;s camera about an axis parallel to the user&apos;s avatar&apos;s &quot;up&quot; direction.</td>
      </tr>
      <tr>
        <td class="name"><code>url</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"></td>
        <td class="description last">The URL of the PNG or JPG image to display.</td>
      </tr>
      <tr>
        <td class="name"><code>subImage</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Rect">Rect</a></span></td>
        <td class="default"></td>
        <td class="description last">The portion of the image to display. Defaults to the full image.</td>
      </tr>
      <tr>
        <td class="name"><code>emissive</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"></td>
        <td class="description last">If <code>true</code>, the overlay is displayed at full brightness, otherwise it is rendered with scene lighting.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".ImageProperties">ImageProperties</h5>
  <div class="description"> These are the properties of an <code>image</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>bounds</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Rect">Rect</a></span></td>
        <td class="default"></td>
        <td class="description last">The position and size of the image display area, in pixels. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>x</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer left, x-coordinate value of the image display area = <code>bounds.x</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>y</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer top, y-coordinate value of the image display area = <code>bounds.y</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>width</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer width of the image display area = <code>bounds.width</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>height</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer height of the image display area = <code>bounds.height</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>imageURL</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"></td>
        <td class="description last">The URL of the image file to display. The image is scaled to fit to the <code>bounds</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>subImage</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="default"> 0,0</td>
        <td class="description last">Integer coordinates of the top left pixel to start using image content from. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 0,0,0</td>
        <td class="description last">The color to apply over the top of the image to colorize it. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.0</td>
        <td class="description last">The opacity of the color applied over the top of the image, <code>0.0</code> - <code>1.0</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered. <em>Write-only.</em></td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".Line3DProperties">Line3DProperties</h5>
  <div class="description"> These are the properties of a <code>line3d</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> line3d</td>
        <td class="description last">Has the value <code>&quot;line3d&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>endParentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the end point of the line is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>endParentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the end point of the line is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>start</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The start point of the line. Synonyms: <code>startPoint</code>, <code>p1</code>, and <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>end</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The end point of the line. Synonyms: <code>endPoint</code> and <code>p2</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localStart</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>start</code>. Synonym: <code>localPosition</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localEnd</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>endParentID</code> set, otherwise the same value as <code>end</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>length</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">The length of the line, in meters. This can be set after creating a line with start and end points.</td>
      </tr>
      <tr>
        <td class="name"><code>glow</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If <code>glow &gt; 0</code>, the line is rendered with a glow.</td>
      </tr>
      <tr>
        <td class="name"><code>lineWidth</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.02</td>
        <td class="description last">If <code>glow &gt; 0</code>, this is the width of the glow, in meters.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".ModelProperties">ModelProperties</h5>
  <div class="description"> These are the properties of a <code>model</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> sphere</td>
        <td class="description last">Has the value <code>&quot;model&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>isGroupCulled</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the mesh parts of the model are LOD culled as a group. If <code>false</code>, separate mesh parts will be LOD culled individually.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>url</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"></td>
        <td class="description last">The URL of the FBX or OBJ model used for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>loadPriority</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.0</td>
        <td class="description last">The priority for loading and displaying the overlay. Overlays with higher values load first.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The dimensions of the overlay. Synonym: <code>size</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>scale</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The scale factor applied to the model&apos;s dimensions.</td>
      </tr>
      <tr>
        <td class="name"><code>textures</code></td>
        <td class="type"> <span class="param-type">object.&lt;name, url&gt;</span></td>
        <td class="default"></td>
        <td class="description last">Maps the named textures in the model to the JPG or PNG images in the urls.</td>
      </tr>
      <tr>
        <td class="name"><code>jointNames</code></td>
        <td class="type"> <span class="param-type">Array.&lt;string&gt;</span></td>
        <td class="default"></td>
        <td class="description last">The names of the joints - if any - in the model. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>jointRotations</code></td>
        <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#Quat">Quat</a>&gt;</span></td>
        <td class="default"></td>
        <td class="description last">The relative rotations of the model&apos;s joints. <em>Not copied if overlay is cloned.</em></td>
      </tr>
      <tr>
        <td class="name"><code>jointTranslations</code></td>
        <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#Vec3">Vec3</a>&gt;</span></td>
        <td class="default"></td>
        <td class="description last">The relative translations of the model&apos;s joints. <em>Not copied if overlay is cloned.</em></td>
      </tr>
      <tr>
        <td class="name"><code>jointOrientations</code></td>
        <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#Quat">Quat</a>&gt;</span></td>
        <td class="default"></td>
        <td class="description last">The absolute orientations of the model&apos;s joints, in world coordinates. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>jointPositions</code></td>
        <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#Vec3">Vec3</a>&gt;</span></td>
        <td class="default"></td>
        <td class="description last">The absolute positions of the model&apos;s joints, in world coordinates. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.url</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">The URL of an FBX file containing an animation to play.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.fps</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The frame rate (frames/sec) to play the animation at.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.firstFrame</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The frame to start playing at.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.lastFrame</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The frame to finish playing at.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.currentFrame</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The current frame being played.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.running</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Whether or not the animation is playing.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.loop</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Whether or not the animation should repeat in a loop.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.hold</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Whether or not when the animation finishes, the rotations and translations of the last frame played should be maintained.</td>
      </tr>
      <tr>
        <td class="name"><code>animationSettings.allowTranslation</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Whether or not translations contained in the animation should be played.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".OverlayProperties">OverlayProperties</h5>
  <div class="description">
    <p>Different overlay types have different properties:</p>
    <table>
      <thead>
        <tr>
          <th><a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a></th>
          <th>Overlay Properties</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code>circle3d</code></td>
          <td><a href="/api-reference/namespaces/overlays#.Circle3DProperties">Circle3DProperties</a></td>
        </tr>
        <tr>
          <td><code>cube</code></td>
          <td><a href="/api-reference/namespaces/overlays#.CubeProperties">CubeProperties</a></td>
        </tr>
        <tr>
          <td><code>grid</code></td>
          <td><a href="/api-reference/namespaces/overlays#.GridProperties">GridProperties</a></td>
        </tr>
        <tr>
          <td><code>image</code></td>
          <td><a href="/api-reference/namespaces/overlays#.ImageProperties">ImageProperties</a></td>
        </tr>
        <tr>
          <td><code>image3d</code></td>
          <td><a href="/api-reference/namespaces/overlays#.Image3DProperties">Image3DProperties</a></td>
        </tr>
        <tr>
          <td><code>line3d</code></td>
          <td><a href="/api-reference/namespaces/overlays#.Line3DProperties">Line3DProperties</a></td>
        </tr>
        <tr>
          <td><code>model</code></td>
          <td><a href="/api-reference/namespaces/overlays#.ModelProperties">ModelProperties</a></td>
        </tr>
        <tr>
          <td><code>rectangle</code></td>
          <td><a href="/api-reference/namespaces/overlays#.RectangleProperties">RectangleProperties</a></td>
        </tr>
        <tr>
          <td><code>rectangle3d</code></td>
          <td><a href="/api-reference/namespaces/overlays#.Rectangle3DProperties">Rectangle3DProperties</a></td>
        </tr>
        <tr>
          <td><code>shape</code></td>
          <td><a href="/api-reference/namespaces/overlays#.ShapeProperties">ShapeProperties</a></td>
        </tr>
        <tr>
          <td><code>sphere</code></td>
          <td><a href="/api-reference/namespaces/overlays#.SphereProperties">SphereProperties</a></td>
        </tr>
        <tr>
          <td><code>text</code></td>
          <td><a href="/api-reference/namespaces/overlays#.TextProperties">TextProperties</a></td>
        </tr>
        <tr>
          <td><code>text3d</code></td>
          <td><a href="/api-reference/namespaces/overlays#.Text3DProperties">Text3DProperties</a></td>
        </tr>
        <tr>
          <td><code>web3d</code></td>
          <td><a href="/api-reference/namespaces/overlays#.Web3DProperties">Web3DProperties</a></td>
        </tr>
      </tbody>
    </table>
  </div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="name" id=".OverlayType">OverlayType</h5>
  <div class="description">
    <p>An overlay may be one of the following types:</p>
    <table>
      <thead>
        <tr>
          <th>Value</th>
          <th>2D/3D</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code>circle3d</code></td>
          <td>3D</td>
          <td>A circle.</td>
        </tr>
        <tr>
          <td><code>cube</code></td>
          <td>3D</td>
          <td>A cube. Can also use a <code>shape</code> overlay to create a cube.</td>
        </tr>
        <tr>
          <td><code>grid</code></td>
          <td>3D</td>
          <td>A grid of lines in a plane.</td>
        </tr>
        <tr>
          <td><code>image</code></td>
          <td>2D</td>
          <td>An image. Synonym: <code>billboard</code>.</td>
        </tr>
        <tr>
          <td><code>image3d</code></td>
          <td>3D</td>
          <td>An image.</td>
        </tr>
        <tr>
          <td><code>line3d</code></td>
          <td>3D</td>
          <td>A line.</td>
        </tr>
        <tr>
          <td><code>model</code></td>
          <td>3D</td>
          <td>A model.</td>
        </tr>
        <tr>
          <td><code>rectangle</code></td>
          <td>2D</td>
          <td>A rectangle.</td>
        </tr>
        <tr>
          <td><code>rectangle3d</code></td>
          <td>3D</td>
          <td>A rectangle.</td>
        </tr>
        <tr>
          <td><code>shape</code></td>
          <td>3D</td>
          <td>A geometric shape, such as a cube, sphere, or cylinder.</td>
        </tr>
        <tr>
          <td><code>sphere</code></td>
          <td>3D</td>
          <td>A sphere. Can also use a <code>shape</code> overlay to create a sphere.</td>
        </tr>
        <tr>
          <td><code>text</code></td>
          <td>2D</td>
          <td>Text.</td>
        </tr>
        <tr>
          <td><code>text3d</code></td>
          <td>3D</td>
          <td>Text.</td>
        </tr>
        <tr>
          <td><code>web3d</code></td>
          <td>3D</td>
          <td>Web content.</td>
        </tr>
      </tbody>
    </table>
    <p>2D overlays are rendered on the display surface in desktop mode and on the HUD surface in HMD mode. 3D overlays are rendered at a position and orientation in-world.</p>
    <p></p>
    <p>Each overlay type has different <a href="/api-reference/namespaces/overlays#.OverlayProperties">OverlayProperties</a>.</p>
  </div>
  <dl><dt>Type: <span class="param-type">string</span></dl></dt>
  <h5 class="name" id=".RayToOverlayIntersectionResult">RayToOverlayIntersectionResult</h5>
  <div class="description"> The result of a <a href="/api-reference/globals#PickRay">PickRay</a> search using <a href="/api-reference/namespaces/overlays#.findRayIntersection">findRayIntersection</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>intersects</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="description last"><code>true</code> if the <a href="/api-reference/globals#PickRay">PickRay</a> intersected with a 3D overlay, otherwise <code>false</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>overlayID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="description last">The UUID of the overlay that was intersected.</td>
      </tr>
      <tr>
        <td class="name"><code>distance</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The distance from the <a href="/api-reference/globals#PickRay">PickRay</a> origin to the intersection point.</td>
      </tr>
      <tr>
        <td class="name"><code>surfaceNormal</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="description last">The normal of the overlay surface at the intersection point.</td>
      </tr>
      <tr>
        <td class="name"><code>intersection</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="description last">The position of the intersection point.</td>
      </tr>
      <tr>
        <td class="name"><code>extraInfo</code></td>
        <td class="type"> <span class="param-type">object</span></td>
        <td class="description last">Additional intersection details, if available.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".Rectangle3DProperties">Rectangle3DProperties</h5>
  <div class="description"> These are the properties of a <code>rectangle3d</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> rectangle3d</td>
        <td class="description last">Has the value <code>&quot;rectangle3d&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="default"> 1,1</td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".RectangleProperties">RectangleProperties</h5>
  <div class="description"> These are the properties of a <code>rectangle</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>bounds</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Rect">Rect</a></span></td>
        <td class="default"></td>
        <td class="description last">The position and size of the rectangle, in pixels. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>x</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer left, x-coordinate value = <code>bounds.x</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>y</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer top, y-coordinate value = <code>bounds.y</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>width</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer width of the rectangle = <code>bounds.width</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>height</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer height of the rectangle = <code>bounds.height</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 0,0,0</td>
        <td class="description last">The color of the overlay. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1.0</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>borderWidth</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">Integer width of the border, in pixels. The border is drawn within the rectangle&apos;s bounds. It is not drawn unless either <code>borderColor</code> or <code>borderAlpha</code> are specified. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>radius</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">Integer corner radius, in pixels. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>borderColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 0,0,0</td>
        <td class="description last">The color of the border. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>borderAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1.0</td>
        <td class="description last">The opacity of the border, <code>0.0</code> - <code>1.0</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered. <em>Write-only.</em></td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".Shape">Shape</h5>
  <div class="description">
    <p>A <code>shape</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a> may display as one of the following geometrical shapes:</p>
    <table>
      <thead>
        <tr>
          <th>Value</th>
          <th>Dimensions</th>
          <th>Description</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td><code>&quot;Circle&quot;</code></td>
          <td>2D</td>
          <td>A circle oriented in 3D.</td>
        </tr>
        <tr>
          <td><code>&quot;Cone&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Cube&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Cylinder&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Dodecahedron&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Hexagon&quot;</code></td>
          <td>3D</td>
          <td>A hexagonal prism.</td>
        </tr>
        <tr>
          <td><code>&quot;Icosahedron&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Line&quot;</code></td>
          <td>1D</td>
          <td>A line oriented in 3D.</td>
        </tr>
        <tr>
          <td><code>&quot;Octagon&quot;</code></td>
          <td>3D</td>
          <td>An octagonal prism.</td>
        </tr>
        <tr>
          <td><code>&quot;Octahedron&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Quad&quot;</code></td>
          <td>2D</td>
          <td>A square oriented in 3D.</td>
        </tr>
        <tr>
          <td><code>&quot;Sphere&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Tetrahedron&quot;</code></td>
          <td>3D</td>
          <td></td>
        </tr>
        <tr>
          <td><code>&quot;Torus&quot;</code></td>
          <td>3D</td>
          <td><em>Not implemented.</em></td>
        </tr>
        <tr>
          <td><code>&quot;Triangle&quot;</code></td>
          <td>3D</td>
          <td>A triangular prism.</td>
        </tr>
      </tbody>
    </table>
  </div>
  <dl><dt>Type: <span class="param-type">string</span></dl></dt>
  <h5 class="name" id=".ShapeProperties">ShapeProperties</h5>
  <div class="description"> These are the properties of a <code>shape</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> shape</td>
        <td class="description last">Has the value <code>&quot;shape&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>shape</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/overlays#.Shape">Overlays.Shape</a></span></td>
        <td class="default"> Hexagon</td>
        <td class="description last">The geometrical shape of the overlay.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".SphereProperties">SphereProperties</h5>
  <div class="description"> These are the properties of a <code>sphere</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> sphere</td>
        <td class="description last">Has the value <code>&quot;sphere&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".Text3DProperties">Text3DProperties</h5>
  <div class="description"> These are the properties of a <code>text3d</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> text3d</td>
        <td class="description last">Has the value <code>&quot;text3d&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="default"> 1,1</td>
        <td class="description last">The dimensions of the overlay. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isFacingAvatar</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"></td>
        <td class="description last">If <code>true</code>, the overlay is rotated to face the user&apos;s camera about an axis parallel to the user&apos;s avatar&apos;s &quot;up&quot; direction.</td>
      </tr>
      <tr>
        <td class="name"><code>text</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">The text to display. Text does not automatically wrap; use <code>\n</code> for a line break.</td>
      </tr>
      <tr>
        <td class="name"><code>textAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The text alpha value.</td>
      </tr>
      <tr>
        <td class="name"><code>backgroundColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 0,0,0</td>
        <td class="description last">The background color.</td>
      </tr>
      <tr>
        <td class="name"><code>backgroundAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The background alpha value.</td>
      </tr>
      <tr>
        <td class="name"><code>lineHeight</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The height of a line of text in meters.</td>
      </tr>
      <tr>
        <td class="name"><code>leftMargin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.1</td>
        <td class="description last">The left margin, in meters.</td>
      </tr>
      <tr>
        <td class="name"><code>topMargin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.1</td>
        <td class="description last">The top margin, in meters.</td>
      </tr>
      <tr>
        <td class="name"><code>rightMargin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.1</td>
        <td class="description last">The right margin, in meters.</td>
      </tr>
      <tr>
        <td class="name"><code>bottomMargin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.1</td>
        <td class="description last">The bottom margin, in meters.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".TextProperties">TextProperties</h5>
  <div class="description"> These are the properties of a <code>text</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>bounds</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Rect">Rect</a></span></td>
        <td class="default"></td>
        <td class="description last">The position and size of the rectangle, in pixels. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>x</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer left, x-coordinate value = <code>bounds.x</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>y</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer top, y-coordinate value = <code>bounds.y</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>width</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer width of the rectangle = <code>bounds.width</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>height</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"></td>
        <td class="description last">Integer height of the rectangle = <code>bounds.height</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>margin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">Sets the <code>leftMargin</code> and <code>topMargin</code> values, in pixels. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>leftMargin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The left margin&apos;s size, in pixels. This value is also used for the right margin. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>topMargin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The top margin&apos;s size, in pixels. This value is also used for the bottom margin. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>text</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">The text to display. Text does not automatically wrap; use <code>\n</code> for a line break. Text is clipped to the <code>bounds</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>font.size</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 18</td>
        <td class="description last">The size of the text, in pixels. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>lineHeight</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 18</td>
        <td class="description last">The height of a line of text, in pixels. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the text. Synonym: <code>textColor</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1.0</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>backgroundColor</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 0,0,0</td>
        <td class="description last">The color of the background rectangle. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>backgroundAlpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the background rectangle. <em>Write-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered. <em>Write-only.</em></td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id=".Web3DProperties">Web3DProperties</h5>
  <div class="description"> These are the properties of a <code>web3d</code> <a href="/api-reference/namespaces/overlays#.OverlayType">OverlayType</a>.</div>
  <dl><dt>Type: <span class="param-type">object</span></dl></dt>
  <h5 class="subsection-title">Properties:</h5>
  <table class="props">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>type</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> web3d</td>
        <td class="description last">Has the value <code>&quot;web3d&quot;</code>. <em>Read-only.</em></td>
      </tr>
      <tr>
        <td class="name"><code>color</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span></td>
        <td class="default"> 255,255,255</td>
        <td class="description last">The color of the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>alpha</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0.7</td>
        <td class="description last">The opacity of the overlay, <code>0.0</code> - <code>1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMax</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The maximum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulseMin</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">The minimum value of the pulse multiplier.</td>
      </tr>
      <tr>
        <td class="name"><code>pulsePeriod</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 1</td>
        <td class="description last">The duration of the color and alpha pulse, in seconds. A pulse multiplier value goes from <code>pulseMin</code> to <code>pulseMax</code>, then <code>pulseMax</code> to <code>pulseMin</code> in one period.</td>
      </tr>
      <tr>
        <td class="name"><code>alphaPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the alpha of the overlay is pulsed: the alpha value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>colorPulse</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 0</td>
        <td class="description last">If non-zero, the color of the overlay is pulsed: the color value is multiplied by the current pulse multiplier value each frame. If &gt; 0 the pulse multiplier is applied in phase with the pulse period; if&lt;0 the pulse multiplier is applied out of phase with the pulse period. (The magnitude of the property isn&apos;t otherwise used.)</td>
      </tr>
      <tr>
        <td class="name"><code>visible</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the overlay is rendered, otherwise it is not rendered.</td>
      </tr>
      <tr>
        <td class="name"><code>name</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">A friendly name for the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>position</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The position of the overlay center. Synonyms: <code>p1</code>, <code>point</code>, and <code>start</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localPosition</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="default"></td>
        <td class="description last">The local position of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>position</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay. Synonym: <code>orientation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>localRotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="default"></td>
        <td class="description last">The orientation of the overlay relative to its parent if the overlay has a <code>parentID</code> set, otherwise the same value as <code>rotation</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>isSolid</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Synonyms:<ode>solid, <code>isFilled</code>, and <code>filled</code>. Antonyms: <code>isWire</code> and <code>wire</code>.</ode>
        </td>
      </tr>
      <tr>
        <td class="name"><code>isDashedLine</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, a dashed line is drawn on the overlay&apos;s edges. Synonym: <code>dashed</code>. Deprecated.</td>
      </tr>
      <tr>
        <td class="name"><code>ignorePickIntersection</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, picks ignore the overlay. <code>ignoreRayIntersection</code> is a synonym.</td>
      </tr>
      <tr>
        <td class="name"><code>drawInFront</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">If <code>true</code>, the overlay is rendered in front of other overlays that don&apos;t have <code>drawInFront</code> set to <code>true</code>, and in front of entities.</td>
      </tr>
      <tr>
        <td class="name"><code>grabbable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> false</td>
        <td class="description last">Signal to grabbing scripts whether or not this overlay can be grabbed.</td>
      </tr>
      <tr>
        <td class="name"><code>parentID</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
        <td class="default"> null</td>
        <td class="description last">The avatar, entity, or overlay that the overlay is parented to.</td>
      </tr>
      <tr>
        <td class="name"><code>parentJointIndex</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 65535</td>
        <td class="description last">Integer value specifying the skeleton joint that the overlay is attached to if <code>parentID</code> is an avatar skeleton. A value of <code>65535</code> means &quot;no joint&quot;.</td>
      </tr>
      <tr>
        <td class="name"><code>isFacingAvatar</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"></td>
        <td class="description last">If <code>true</code>, the overlay is rotated to face the user&apos;s camera about an axis parallel to the user&apos;s avatar&apos;s &quot;up&quot; direction.</td>
      </tr>
      <tr>
        <td class="name"><code>url</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"></td>
        <td class="description last">The URL of the Web page to display.</td>
      </tr>
      <tr>
        <td class="name"><code>scriptURL</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> &quot;&quot;</td>
        <td class="description last">The URL of a JavaScript file to inject into the Web page.</td>
      </tr>
      <tr>
        <td class="name"><code>dpi</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 30</td>
        <td class="description last">The dots per inch to display the Web page at, on the overlay.</td>
      </tr>
      <tr>
        <td class="name"><code>dimensions</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
        <td class="default"> 1,1</td>
        <td class="description last">The size of the overlay to display the Web page on, in meters. Synonyms: <code>scale</code>, <code>size</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>maxFPS</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="default"> 10</td>
        <td class="description last">The maximum update rate for the Web overlay content, in frames/second.</td>
      </tr>
      <tr>
        <td class="name"><code>showKeyboardFocusHighlight</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code>, the Web overlay is highlighted when it has keyboard focus.</td>
      </tr>
      <tr>
        <td class="name"><code>inputMode</code></td>
        <td class="type"> <span class="param-type">string</span></td>
        <td class="default"> Touch</td>
        <td class="description last">The user input mode to use - either <code>&quot;Touch&quot;</code> or <code>&quot;Mouse&quot;</code>.</td>
      </tr>
    </tbody>
  </table>
</article>
</section>
              </div>
          </div>
      {% endblock %}