       {% extends 'partials/base_noGit.html.twig' %}
       {% set tags = page.taxonomy.tag %}
       {% if tags %}
           {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs', 'tag': tags}},'order': {'by': 'default', 'dir': 'asc'}}) %}
       {% else %}
           {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs'}},'order': {'by': 'default', 'dir': 'asc'}}) %}
       {% endif %}
       
       {% block navigation %}
           <div id="navigation">
           {% if not progress.isFirst(page.path) %}
               <a class="nav nav-prev" href="{{ progress.nextSibling(page.path).url }}"> <img src="{{ url('theme://images/left-arrow.png') }}"></a>
           {% endif %}
       
           {% if not progress.isLast(page.path) %}
               <a class="nav nav-next" href="{{ progress.prevSibling(page.path).url }}"><img src="{{ url('theme://images/right-arrow.png') }}"></a>
           {% endif %}
           </div>
       {% endblock %}
       
       {% block content %}
           <div id="api-specific">
               <div id="body-inner">
                   <h1>{{ page.title }}</h1>
                   <div>
 <h5>Type Definitions</h5>
</div>
<div><a href="#AACube">AACube</a></div>
<div><a href="#AttachmentData">AttachmentData</a></div>
<div><a href="#BillboardMode">BillboardMode</a></div>
<div><a href="#BoxFace">BoxFace</a></div>
<div><a href="#Collision">Collision</a></div>
<div><a href="#CollisionContact">CollisionContact</a></div>
<div><a href="#CollisionPickResult">CollisionPickResult</a></div>
<div><a href="#CollisionRegion">CollisionRegion</a></div>
<div><a href="#Color">Color</a></div>
<div><a href="#ColorFloat">ColorFloat</a></div>
<div><a href="#ContactEventType">ContactEventType</a></div>
<div><a href="#EntityHostType">EntityHostType</a></div>
<div><a href="#IntersectingObject">IntersectingObject</a></div>
<div><a href="#KeyboardModifiers">KeyboardModifiers</a></div>
<div><a href="#KeyEvent">KeyEvent</a></div>
<div><a href="#Material">Material</a></div>
<div><a href="#MaterialResource">MaterialResource</a></div>
<div><a href="#MouseEvent">MouseEvent</a></div>
<div><a href="#ParabolaPickResult">ParabolaPickResult</a></div>
<div><a href="#PickParabola">PickParabola</a></div>
<div><a href="#PickRay">PickRay</a></div>
<div><a href="#PickType">PickType</a></div>
<div><a href="#PointerEvent">PointerEvent</a></div>
<div><a href="#Pose">Pose</a></div>
<div><a href="#Quat">Quat</a></div>
<div><a href="#RayPickResult">RayPickResult</a></div>
<div><a href="#Rect">Rect</a></div>
<div><a href="#RGBS">RGBS</a></div>
<div><a href="#Shape">Shape</a></div>
<div><a href="#ShapeType">ShapeType</a></div>
<div><a href="#Size">Size</a></div>
<div><a href="#StylusPickResult">StylusPickResult</a></div>
<div><a href="#StylusTip">StylusTip</a></div>
<div><a href="#TouchEvent">TouchEvent</a></div>
<div><a href="#Vec2">Vec2</a></div>
<div><a href="#Vec3">Vec3</a></div>
<div><a href="#Vec4">Vec4</a></div>
<div><a href="#ViewFrustum">ViewFrustum</a></div>
<div><a href="#WheelEvent">WheelEvent</a></div><br>
<section>
 <article>
   <div class="container-overview"></div>
   <h4 class="subsection-title">Type Definitions</h4>
   <h5 class="name" id="AACube">AACube</h5>
   <div class="description"> An axis-aligned cube, defined as the bottom right near (minimum axes values) corner of the cube plus the dimension of its sides.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">X coordinate of the brn corner of the cube.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Y coordinate of the brn corner of the cube.</td>
       </tr>
       <tr>
         <td class="name"><code>z</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Z coordinate of the brn corner of the cube.</td>
       </tr>
       <tr>
         <td class="name"><code>scale</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The dimensions of each side of the cube.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="AttachmentData">AttachmentData</h5>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>modelUrl</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>jointName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>scale</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>soft</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="BillboardMode">BillboardMode</h5>
   <div class="description">
     <p>How an entity is billboarded.</p>
     <table>
       <thead>
         <tr>
           <th>Value</th>
           <th>Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td><code>none</code></td>
           <td>The entity will not be billboarded.</td>
         </tr>
         <tr>
           <td><code>yaw</code></td>
           <td>The entity will yaw, but not pitch, to face the camera. Its actual rotation will be ignored.</td>
         </tr>
         <tr>
           <td><code>full</code></td>
           <td>The entity will be billboarded to face the camera. Its actual rotation will be ignored.</td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">string</span></dl></dt>
   <h5 class="name" id="BoxFace">BoxFace</h5>
   <div class="description">
     <p>A <code>BoxFace</code> specifies the face of an axis-aligned (AA) box.</p>
     <table>
       <thead>
         <tr>
           <th>Value</th>
           <th>Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td><code>&quot;MIN_X_FACE&quot;</code></td>
           <td>The minimum x-axis face.</td>
         </tr>
         <tr>
           <td><code>&quot;MAX_X_FACE&quot;</code></td>
           <td>The maximum x-axis face.</td>
         </tr>
         <tr>
           <td><code>&quot;MIN_Y_FACE&quot;</code></td>
           <td>The minimum y-axis face.</td>
         </tr>
         <tr>
           <td><code>&quot;MAX_Y_FACE&quot;</code></td>
           <td>The maximum y-axis face.</td>
         </tr>
         <tr>
           <td><code>&quot;MIN_Z_FACE&quot;</code></td>
           <td>The minimum z-axis face.</td>
         </tr>
         <tr>
           <td><code>&quot;MAX_Z_FACE&quot;</code></td>
           <td>The maximum z-axis face.</td>
         </tr>
         <tr>
           <td><code>&quot;UNKNOWN_FACE&quot;</code></td>
           <td>Unknown value.</td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">string</span></dl></dt>
   <h5 class="name" id="Collision">Collision</h5>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>type</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#ContactEventType">ContactEventType</a></span></td>
         <td class="description last">The contact type of the collision event.</td>
       </tr>
       <tr>
         <td class="name"><code>idA</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">The ID of one of the entities in the collision.</td>
       </tr>
       <tr>
         <td class="name"><code>idB</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">The ID of the other of the entities in the collision.</td>
       </tr>
       <tr>
         <td class="name"><code>penetration</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The amount of penetration between the two entities.</td>
       </tr>
       <tr>
         <td class="name"><code>contactPoint</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The point of contact.</td>
       </tr>
       <tr>
         <td class="name"><code>velocityChange</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The change in relative velocity of the two entities, in m/s.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="CollisionContact">CollisionContact</h5>
   <div class="description"> A pair of points that represents part of an overlap between a Collision Pick and an object in the physics engine. Points which are further apart represent deeper overlap</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>pointOnPick</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">A point representing a penetration of the object&apos;s surface into the volume of the pick, in world space.</td>
       </tr>
       <tr>
         <td class="name"><code>pointOnObject</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">A point representing a penetration of the pick&apos;s surface into the volume of the found object, in world space.</td>
       </tr>
       <tr>
         <td class="name"><code>normalOnPick</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The normalized vector pointing away from the pick, representing the direction of collision.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="CollisionPickResult">CollisionPickResult</h5>
   <div class="description"> An intersection result for a Collision Pick.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>intersects</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">If there was at least one valid intersection (intersectingObjects.length &gt; 0)</td>
       </tr>
       <tr>
         <td class="name"><code>intersectingObjects</code></td>
         <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#IntersectingObject">IntersectingObject</a>&gt;</span></td>
         <td class="description last">The collision information of each object which intersect with the CollisionRegion.</td>
       </tr>
       <tr>
         <td class="name"><code>collisionRegion</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#CollisionRegion">CollisionRegion</a></span></td>
         <td class="description last">The CollisionRegion that was used. Valid even if there was no intersection.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="CollisionRegion">CollisionRegion</h5>
   <div class="description"> A CollisionRegion defines a volume for checking collisions in the physics simulation.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>shape</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Shape">Shape</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The information about the collision region&apos;s size and shape. Dimensions are in world space, but will scale with the parent if defined.</td>
       </tr>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The position of the collision region, relative to a parent if defined.</td>
       </tr>
       <tr>
         <td class="name"><code>orientation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The orientation of the collision region, relative to a parent if defined.</td>
       </tr>
       <tr>
         <td class="name"><code>threshold</code></td>
         <td class="type"> <span class="param-type">float</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The approximate minimum penetration depth for a test object to be considered in contact with the collision region. The depth is measured in world space, but will scale with the parent if defined.</td>
       </tr>
       <tr>
         <td class="name"><code>collisionGroup</code></td>
         <td class="type"> <span class="param-type">CollisionMask</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> 8</td>
         <td class="description last">The type of object this collision pick collides as. Objects whose collision masks overlap with the pick&apos;s collision group will be considered colliding with the pick.</td>
       </tr>
       <tr>
         <td class="name"><code>parentID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The ID of the parent, either an avatar, an entity, or an overlay.</td>
       </tr>
       <tr>
         <td class="name"><code>parentJointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The joint of the parent to parent to, for example, the joints on the model of an avatar. (default = 0, no joint)</td>
       </tr>
       <tr>
         <td class="name"><code>joint</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">If &quot;Mouse,&quot; parents the pick to the mouse. If &quot;Avatar,&quot; parents the pick to MyAvatar&apos;s head. Otherwise, parents to the joint of the given name on MyAvatar.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="Color">Color</h5>
   <div class="description"> A color vector. See also the <a href="/api-reference/namespaces/vec3">Vec3</a> object.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>red</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Red component value. Integer in the range <code>0</code> - <code>255</code>. Synonyms: <code>r</code>, <code>x</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>green</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Green component value. Integer in the range <code>0</code> - <code>255</code>. Synonyms: <code>g</code>, <code>y</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>blue</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Blue component value. Integer in the range <code>0</code> - <code>255</code>. Synonyms: <code>b</code>, <code>z</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Colors can be set in multiple ways and modified with their aliases, but still stringify in the same way</p><pre><code>Entities.editEntity(&lt;id&gt;, { color: { x: 1, y: 2, z: 3 }});                 // { red: 1, green: 2, blue: 3 }
Entities.editEntity(&lt;id&gt;, { color: { r: 4, g: 5, b: 6 }});                 // { red: 4, green: 5, blue: 6 }
Entities.editEntity(&lt;id&gt;, { color: { red: 7, green: 8, blue: 9 }});        // { red: 7, green: 8, blue: 9 }
Entities.editEntity(&lt;id&gt;, { color: [10, 11, 12] });                        // { red: 10, green: 11, blue: 12 }
Entities.editEntity(&lt;id&gt;, { color: 13 });                                  // { red: 13, green: 13, blue: 13 }
var color = Entities.getEntityProperties(&lt;id&gt;).color;                      // { red: 13, green: 13, blue: 13 }
color.g = 14;                                                              // { red: 13, green: 14, blue: 13 }
color.blue = 15;                                                           // { red: 13, green: 14, blue: 15 }
Entities.editEntity(&lt;id&gt;, { color: &quot;red&quot;});                                // { red: 255, green: 0, blue: 0 }
Entities.editEntity(&lt;id&gt;, { color: &quot;#00FF00&quot;});                            // { red: 0, green: 255, blue: 0 }</code></pre>
   <h5 class="name" id="ColorFloat">ColorFloat</h5>
   <div class="description"> A color vector. See also the <a href="/api-reference/namespaces/vec3">Vec3</a> object.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>red</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Red component value. Real in the range <code>0</code> - <code>255</code>. Synonyms: <code>r</code>, <code>x</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>green</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Green component value. Real in the range <code>0</code> - <code>255</code>. Synonyms: <code>g</code>, <code>y</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>blue</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Blue component value. Real in the range <code>0</code> - <code>255</code>. Synonyms: <code>b</code>, <code>z</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">ColorFloats can be set in multiple ways and modified with their aliases, but still stringify in the same way</p><pre><code>Entities.editEntity(&lt;id&gt;, { color: { x: 1, y: 2, z: 3 }});                 // { red: 1, green: 2, blue: 3 }
Entities.editEntity(&lt;id&gt;, { color: { r: 4, g: 5, b: 6 }});                 // { red: 4, green: 5, blue: 6 }
Entities.editEntity(&lt;id&gt;, { color: { red: 7, green: 8, blue: 9 }});        // { red: 7, green: 8, blue: 9 }
Entities.editEntity(&lt;id&gt;, { color: [10, 11, 12] });                        // { red: 10, green: 11, blue: 12 }
Entities.editEntity(&lt;id&gt;, { color: 13 });                                  // { red: 13, green: 13, blue: 13 }
var color = Entities.getEntityProperties(&lt;id&gt;).color;                      // { red: 13, green: 13, blue: 13 }
color.g = 14;                                                              // { red: 13, green: 14, blue: 13 }
color.blue = 15;                                                           // { red: 13, green: 14, blue: 15 }
Entities.editEntity(&lt;id&gt;, { color: &quot;red&quot;});                                // { red: 255, green: 0, blue: 0 }
Entities.editEntity(&lt;id&gt;, { color: &quot;#00FF00&quot;});                            // { red: 0, green: 255, blue: 0 }</code></pre>
   <h5 class="name" id="ContactEventType">ContactEventType</h5>
   <div class="description">
     <p>The type of a collision contact event.</p>
     <table>
       <thead>
         <tr>
           <th>Value</th>
           <th>Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td><code>0</code></td>
           <td>Start of the collision.</td>
         </tr>
         <tr>
           <td><code>1</code></td>
           <td>Continuation of the collision.</td>
         </tr>
         <tr>
           <td><code>2</code></td>
           <td>End of the collision.</td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">number</span></dl></dt>
   <h5 class="name" id="EntityHostType">EntityHostType</h5>
   <div class="description">
     <p>How an entity is sent over the wire.</p>
     <table>
       <thead>
         <tr>
           <th>Value</th>
           <th>Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td><code>domain</code></td>
           <td>Domain entities are sent over the entity server to everyone else</td>
         </tr>
         <tr>
           <td><code>avatar</code></td>
           <td>Avatar entities are sent over the avatar entity and are associated with one avatar</td>
         </tr>
         <tr>
           <td><code>local</code></td>
           <td>Local entities are not sent over the wire and will only render for you, locally</td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">string</span></dl></dt>
   <h5 class="name" id="IntersectingObject">IntersectingObject</h5>
   <div class="description"> Information about the Collision Pick&apos;s intersection with an object</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>id</code></td>
         <td class="type"> <span class="param-type">QUuid</span></td>
         <td class="description last">The ID of the object.</td>
       </tr>
       <tr>
         <td class="name"><code>type</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The type of the object, either Picks.INTERSECTED_ENTITY() or Picks.INTERSECTED_AVATAR()</td>
       </tr>
       <tr>
         <td class="name"><code>collisionContacts</code></td>
         <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#CollisionContact">CollisionContact</a>&gt;</span></td>
         <td class="description last">Pairs of points representing penetration information between the pick and the object</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="KeyboardModifiers">KeyboardModifiers</h5>
   <div class="description">
     <p>A KeyboardModifiers value is used to specify which modifier keys on the keyboard are pressed. The value is the sum (bitwise OR) of the relevant combination of values from the following table:</p>
     <table>
       <thead>
         <tr>
           <th>Key</th>
           <th>Hexadecimal value</th>
           <th>Decimal value</th>
           <th>Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td>Shift</td>
           <td><code>0x02000000</code></td>
           <td><code>33554432</code></td>
           <td>A Shift key on the keyboard is pressed.</td>
         </tr>
         <tr>
           <td>Control</td>
           <td><code>0x04000000</code></td>
           <td><code>67108864</code></td>
           <td>A control key on the keyboard is pressed. On Windows the &quot;control&quot; key is the Ctrl key; on OSX it is the Command key.</td>
         </tr>
         <tr>
           <td>Alt</td>
           <td><code>0x08000000</code></td>
           <td><code>134217728</code></td>
           <td>An Alt key on the keyboard is pressed.</td>
         </tr>
         <tr>
           <td>Meta</td>
           <td><code>0x10000000</code></td>
           <td><code>268435456</code></td>
           <td>A meta key on the keyboard is pressed. On Windows the &quot;meta&quot; key is the Windows key; on OSX it is the Control (Splat) key.</td>
         </tr>
         <tr>
           <td>Keypad</td>
           <td><code>0x20000000</code></td>
           <td><code>536870912</code></td>
           <td>A keypad button is pressed.</td>
         </tr>
         <tr>
           <td>Group</td>
           <td><code>0x40000000</code></td>
           <td><code>1073741824</code></td>
           <td>X11 operating system only: An AltGr / Mode_switch key on the keyboard is pressed.</td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">number</span></dl></dt>
   <h5 class="name" id="KeyEvent">KeyEvent</h5>
   <div class="description"> A keyboard key event.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>key</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The Qt keyboard code of the key pressed. For a list of keyboard codes, see <a href="http://doc.qt.io/qt-5/qt.html#Key-enum">http://doc.qt.io/qt-5/qt.html#Key-enum</a>.</td>
       </tr>
       <tr>
         <td class="name"><code>text</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">A string describing the key. For example, <code>&quot;a&quot;</code> for the &quot;A&quot; key if the Shift is not pressed, <code>&quot;F1&quot;</code> for the F1 key, <code>&quot;SPACE&quot;</code> for the space bar.</td>
       </tr>
       <tr>
         <td class="name"><code>isShifted</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if a Shift key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isMeta</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if a meta key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;meta&quot; key is the Windows key; on OSX it is the Control (Splat) key.</td>
       </tr>
       <tr>
         <td class="name"><code>isControl</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if a control key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;control&quot; key is the Ctrl key; on OSX it is the Command key.</td>
       </tr>
       <tr>
         <td class="name"><code>isAlt</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if an Alt key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isKeypad</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the key is on the numeric keypad, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isAutoRepeat</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the event is a repeat for key that is being held down, otherwise <code>false</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Report the KeyEvent details for each key press.</p><pre><code>Controller.keyPressEvent.connect(function (event) {
   print(JSON.stringify(event));
});
</code></pre>
   <h5 class="name" id="Material">Material</h5>
   <div class="description"> A material such as may be used by a <a href="/api-reference/namespaces/entities#.EntityType">Material</a> entity.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last">A name for the material.</td>
       </tr>
       <tr>
         <td class="name"><code>model</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"> &quot;hifi_pbr&quot;</td>
         <td class="description last"><em>Currently not used.</em></td>
       </tr>
       <tr>
         <td class="name"><code>emissive</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span> | <span class="param-type"><a href="/api-reference/globals#RGBS">RGBS</a></span></td>
         <td class="default"></td>
         <td class="description last">The emissive color, i.e., the color that the material emits. A <a href="/api-reference/globals#Color">Color</a> value is treated as sRGB. A <a href="/api-reference/globals#RGBS">RGBS</a> value can be either RGB or sRGB.</td>
       </tr>
       <tr>
         <td class="name"><code>opacity</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="default"> 1.0</td>
         <td class="description last">The opacity, <code>0.0</code> &#x2013; <code>1.0</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>unlit</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="default"> false</td>
         <td class="description last">If <code>true</code>, the material is not lit.</td>
       </tr>
       <tr>
         <td class="name"><code>albedo</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Color">Color</a></span> | <span class="param-type"><a href="/api-reference/globals#RGBS">RGBS</a></span></td>
         <td class="default"></td>
         <td class="description last">The albedo color. A <a href="/api-reference/globals#Color">Color</a> value is treated as sRGB. A <a href="/api-reference/globals#RGBS">RGBS</a> value can be either RGB or sRGB.</td>
       </tr>
       <tr>
         <td class="name"><code>roughness</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="default"></td>
         <td class="description last">The roughness, <code>0.0</code> &#x2013; <code>1.0</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>metallic</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="default"></td>
         <td class="description last">The metallicness, <code>0.0</code> &#x2013; <code>1.0</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>scattering</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="default"></td>
         <td class="description last">The scattering, <code>0.0</code> &#x2013; <code>1.0</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>emissiveMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of emissive texture image.</td>
       </tr>
       <tr>
         <td class="name"><code>albedoMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of albedo texture image.</td>
       </tr>
       <tr>
         <td class="name"><code>opacityMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of opacity texture image. Set value the same as the <code>albedoMap</code> value for transparency.</td>
       </tr>
       <tr>
         <td class="name"><code>roughnessMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of roughness texture image. Can use this or <code>glossMap</code>, but not both.</td>
       </tr>
       <tr>
         <td class="name"><code>glossMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of gloss texture image. Can use this or <code>roughnessMap</code>, but not both.</td>
       </tr>
       <tr>
         <td class="name"><code>metallicMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of metallic texture image. Can use this or <code>specularMap</code>, but not both.</td>
       </tr>
       <tr>
         <td class="name"><code>specularMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of specular texture image. Can use this or <code>metallicMap</code>, but not both.</td>
       </tr>
       <tr>
         <td class="name"><code>normalMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of normal texture image. Can use this or <code>bumpMap</code>, but not both.</td>
       </tr>
       <tr>
         <td class="name"><code>bumpMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of bump texture image. Can use this or <code>normalMap</code>, but not both.</td>
       </tr>
       <tr>
         <td class="name"><code>occlusionMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of occlusion texture image.</td>
       </tr>
       <tr>
         <td class="name"><code>scatteringMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of scattering texture image. Only used if <code>normalMap</code> or <code>bumpMap</code> is specified.</td>
       </tr>
       <tr>
         <td class="name"><code>lightMap</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="default"></td>
         <td class="description last">URL of light map texture image. <em>Currently not used.</em></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="MaterialResource">MaterialResource</h5>
   <div class="description"> A material or set of materials such as may be used by a <a href="/api-reference/namespaces/entities#.EntityType">Material</a> entity.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>materialVersion</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="default"> 1</td>
         <td class="description last">The version of the material. <em>Currently not used.</em></td>
       </tr>
       <tr>
         <td class="name"><code>materials</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Material">Material</a></span> | <span class="param-type">Array.&lt;<a href="/api-reference/globals#Material">Material</a>&gt;</span></td>
         <td class="default"></td>
         <td class="description last">The details of the material or materials.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="MouseEvent">MouseEvent</h5>
   <div class="description"> A controller mouse movement or button event.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer x-coordinate of the event on the Interface window or HMD HUD.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer y-coordinate of the event on the Interface window or HMD HUD.</td>
       </tr>
       <tr>
         <td class="name"><code>button</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"><code>&quot;LEFT&quot;</code>, <code>&quot;MIDDLE&quot;</code>, or <code>&quot;RIGHT&quot;</code> if a button press or release caused the event, otherwise <code>&quot;NONE&quot;</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isLeftButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the left button was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isMiddleButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the middle button was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isRightButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the right button was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isShifted</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the Shift key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isMeta</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the &quot;meta&quot; key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;meta&quot; key is the Windows key; on OSX it is the Control (Splat) key.</td>
       </tr>
       <tr>
         <td class="name"><code>isControl</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the &quot;control&quot; key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;control&quot; key is the Ctrl key; on OSX it is the Command key.</td>
       </tr>
       <tr>
         <td class="name"><code>isAlt</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the Alt key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Report the MouseEvent details for each mouse move.</p><pre><code>Controller.mouseMoveEvent.connect(function (event) {
   print(JSON.stringify(event));
});
</code></pre>
   <h5 class="name" id="ParabolaPickResult">ParabolaPickResult</h5>
   <div class="description"> An intersection result for a Parabola Pick.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>type</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The intersection type.</td>
       </tr>
       <tr>
         <td class="name"><code>intersects</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">If there was a valid intersection (type != INTERSECTED_NONE)</td>
       </tr>
       <tr>
         <td class="name"><code>objectID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">The ID of the intersected object. Uuid.NULL for the HUD or invalid intersections.</td>
       </tr>
       <tr>
         <td class="name"><code>distance</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The distance to the intersection point from the origin of the parabola, not along the parabola.</td>
       </tr>
       <tr>
         <td class="name"><code>parabolicDistance</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The distance to the intersection point from the origin of the parabola, along the parabola.</td>
       </tr>
       <tr>
         <td class="name"><code>intersection</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The intersection point in world-space.</td>
       </tr>
       <tr>
         <td class="name"><code>surfaceNormal</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The surface normal at the intersected point. All NANs if type == INTERSECTED_HUD.</td>
       </tr>
       <tr>
         <td class="name"><code>extraInfo</code></td>
         <td class="type"> <span class="param-type">Variant</span></td>
         <td class="description last">Additional intersection details when available for Model objects.</td>
       </tr>
       <tr>
         <td class="name"><code>parabola</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#PickParabola">PickParabola</a></span></td>
         <td class="description last">The PickParabola that was used. Valid even if there was no intersection.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="PickParabola">PickParabola</h5>
   <div class="description"> A PickParabola defines a parabola with a starting point, intitial velocity, and acceleration.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>origin</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The starting position of the PickParabola.</td>
       </tr>
       <tr>
         <td class="name"><code>velocity</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The starting velocity of the parabola.</td>
       </tr>
       <tr>
         <td class="name"><code>acceleration</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The acceleration that the parabola experiences.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="PickRay">PickRay</h5>
   <div class="description"> A PickRay defines a vector with a starting point. It is used, for example, when finding entities or overlays that lie under a mouse click or intersect a laser beam.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>origin</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The starting position of the PickRay.</td>
       </tr>
       <tr>
         <td class="name"><code>direction</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The direction that the PickRay travels.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="PickType">PickType</h5>
   <div class="description">
     <table>
       <thead>
         <tr>
           <th>Value</th>
           <th>Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td><code><a href="/api-reference/namespaces/picktype">PickType.Ray</a></code></td>
           <td></td>
         </tr>
         <tr>
           <td><code><a href="/api-reference/namespaces/picktype">PickType.Stylus</a></code></td>
           <td></td>
         </tr>
         <tr>
           <td><code><a href="/api-reference/namespaces/picktype">PickType.Parabola</a></code></td>
           <td></td>
         </tr>
         <tr>
           <td><code><a href="/api-reference/namespaces/picktype">PickType.Collision</a></code></td>
           <td></td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">number</span></dl></dt>
   <h5 class="name" id="PointerEvent">PointerEvent</h5>
   <div class="description"> A PointerEvent defines a 2D or 3D mouse or similar pointer event.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>type</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The type of event: <code>&quot;Press&quot;</code>, <code>&quot;DoublePress&quot;</code>, <code>&quot;Release&quot;</code>, or <code>&quot;Move&quot;</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>id</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer number used to identify the pointer: <code>0</code> = hardware mouse, <code>1</code> = left controller, <code>2</code> = right controller.</td>
       </tr>
       <tr>
         <td class="name"><code>pos2D</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec2">Vec2</a></span></td>
         <td class="description last">The 2D position of the event on the intersected overlay or entity XY plane, where applicable.</td>
       </tr>
       <tr>
         <td class="name"><code>pos3D</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The 3D position of the event on the intersected overlay or entity, where applicable.</td>
       </tr>
       <tr>
         <td class="name"><code>normal</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The surface normal at the intersection point.</td>
       </tr>
       <tr>
         <td class="name"><code>direction</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The direction of the intersection ray.</td>
       </tr>
       <tr>
         <td class="name"><code>button</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the button pressed: <code>None</code>, <code>Primary</code>, <code>Secondary</code>, or <code>Tertiary</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isPrimaryButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the button pressed was the primary button, otherwise <code>undefined</code>;</td>
       </tr>
       <tr>
         <td class="name"><code>isLeftButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the button pressed was the primary button, otherwise <code>undefined</code>;</td>
       </tr>
       <tr>
         <td class="name"><code>isSecondaryButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the button pressed was the secondary button, otherwise <code>undefined</code>;</td>
       </tr>
       <tr>
         <td class="name"><code>isRightButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the button pressed was the secondary button, otherwise <code>undefined</code>;</td>
       </tr>
       <tr>
         <td class="name"><code>isTertiaryButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the button pressed was the tertiary button, otherwise <code>undefined</code>;</td>
       </tr>
       <tr>
         <td class="name"><code>isMiddleButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the button pressed was the tertiary button, otherwise <code>undefined</code>;</td>
       </tr>
       <tr>
         <td class="name"><code>isPrimaryHeld</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the primary button is currently being pressed, otherwise <code>false</code></td>
       </tr>
       <tr>
         <td class="name"><code>isSecondaryHeld</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the secondary button is currently being pressed, otherwise <code>false</code></td>
       </tr>
       <tr>
         <td class="name"><code>isTertiaryHeld</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the tertiary button is currently being pressed, otherwise <code>false</code></td>
       </tr>
       <tr>
         <td class="name"><code>keyboardModifiers</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#KeyboardModifiers">KeyboardModifiers</a></span></td>
         <td class="description last">Integer value with bits set according to which keyboard modifier keys were pressed when the event was generated.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="Pose">Pose</h5>
   <div class="description"> The pose of a joint or other item relative to the world or a parent.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">Translation.</td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">Rotation.</td>
       </tr>
       <tr>
         <td class="name"><code>velocity</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">Velocity in m/s.</td>
       </tr>
       <tr>
         <td class="name"><code>angularVelocity</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">Angular velocity in rad/s.</td>
       </tr>
       <tr>
         <td class="name"><code>valid</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the pose is valid, otherwise <code>false</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="Quat">Quat</h5>
   <div class="description"> A quaternion value. See also the <a href="/api-reference/namespaces/quat">Quat</a> object.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Imaginary component i.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Imaginary component j.</td>
       </tr>
       <tr>
         <td class="name"><code>z</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Imaginary component k.</td>
       </tr>
       <tr>
         <td class="name"><code>w</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Real component.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="RayPickResult">RayPickResult</h5>
   <div class="description"> An intersection result for a Ray Pick.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>type</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The intersection type.</td>
       </tr>
       <tr>
         <td class="name"><code>intersects</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">If there was a valid intersection (type != INTERSECTED_NONE)</td>
       </tr>
       <tr>
         <td class="name"><code>objectID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">The ID of the intersected object. Uuid.NULL for the HUD or invalid intersections.</td>
       </tr>
       <tr>
         <td class="name"><code>distance</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The distance to the intersection point from the origin of the ray.</td>
       </tr>
       <tr>
         <td class="name"><code>intersection</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The intersection point in world-space.</td>
       </tr>
       <tr>
         <td class="name"><code>surfaceNormal</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The surface normal at the intersected point. All NANs if type == INTERSECTED_HUD.</td>
       </tr>
       <tr>
         <td class="name"><code>extraInfo</code></td>
         <td class="type"> <span class="param-type">Variant</span></td>
         <td class="description last">Additional intersection details when available for Model objects.</td>
       </tr>
       <tr>
         <td class="name"><code>searchRay</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#PickRay">PickRay</a></span></td>
         <td class="description last">The PickRay that was used. Valid even if there was no intersection.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="Rect">Rect</h5>
   <div class="description"> Defines a rectangular portion of an image or screen, or similar.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Left, x-coordinate value.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Top, y-coordinate value.</td>
       </tr>
       <tr>
         <td class="name"><code>width</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Width of the rectangle.</td>
       </tr>
       <tr>
         <td class="name"><code>height</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Height of the rectangle.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="RGBS">RGBS</h5>
   <div class="description">
     <p>An RGB or SRGB color value.</p>
     <table>
       <thead>
         <tr>
           <th>Index</th>
           <th>Type</th>
           <th>Attributes</th>
           <th>Default</th>
           <th>Value</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td><code>0</code></td>
           <td>number</td>
           <td></td>
           <td></td>
           <td>Red component value. Number in the range <code>0.0</code> &#x2013; <code>1.0</code>.</td>
         </tr>
         <tr>
           <td><code>1</code></td>
           <td>number</td>
           <td></td>
           <td></td>
           <td>Green component value. Number in the range <code>0.0</code> &#x2013; <code>1.0</code>.</td>
         </tr>
         <tr>
           <td><code>2</code></td>
           <td>number</td>
           <td></td>
           <td></td>
           <td>Blue component value. Number in the range <code>0.0</code> &#x2013; <code>1.0</code>.</td>
         </tr>
         <tr>
           <td><code>3</code></td>
           <td>boolean</td>
           <td>&lt;optional&gt;</td>
           <td>false</td>
           <td>If <code>true</code> then the color is an SRGB color.</td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">array</span></dl></dt>
   <h5 class="name" id="Shape">Shape</h5>
   <div class="description"> A Shape defines a physical volume.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>shapeType</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The type of shape to use. Can be one of the following: &quot;box&quot;, &quot;sphere&quot;, &quot;capsule-x&quot;, &quot;capsule-y&quot;, &quot;capsule-z&quot;, &quot;cylinder-x&quot;, &quot;cylinder-y&quot;, &quot;cylinder-z&quot;</td>
       </tr>
       <tr>
         <td class="name"><code>dimensions</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The size to scale the shape to.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="ShapeType">ShapeType</h5>
   <div class="description">
     <p>A ShapeType defines the shape used for collisions or zones.</p>
     <table>
       <thead>
         <tr>
           <th>Value</th>
           <th>Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td><code>&quot;none&quot;</code></td>
           <td>No shape.</td>
         </tr>
         <tr>
           <td><code>&quot;box&quot;</code></td>
           <td>A cube.</td>
         </tr>
         <tr>
           <td><code>&quot;sphere&quot;</code></td>
           <td>A sphere.</td>
         </tr>
         <tr>
           <td><code>&quot;capsule-x&quot;</code></td>
           <td>A capsule (cylinder with spherical ends) oriented on the x-axis.</td>
         </tr>
         <tr>
           <td><code>&quot;capsule-y&quot;</code></td>
           <td>A capsule (cylinder with spherical ends) oriented on the y-axis.</td>
         </tr>
         <tr>
           <td><code>&quot;capsule-z&quot;</code></td>
           <td>A capsule (cylinder with spherical ends) oriented on the z-axis.</td>
         </tr>
         <tr>
           <td><code>&quot;cylinder-x&quot;</code></td>
           <td>A cylinder oriented on the x-axis.</td>
         </tr>
         <tr>
           <td><code>&quot;cylinder-y&quot;</code></td>
           <td>A cylinder oriented on the y-axis.</td>
         </tr>
         <tr>
           <td><code>&quot;cylinder-z&quot;</code></td>
           <td>A cylinder oriented on the z-axis.</td>
         </tr>
         <tr>
           <td><code>&quot;hull&quot;</code></td>
           <td><em>Not used.</em></td>
         </tr>
         <tr>
           <td><code>&quot;compound&quot;</code></td>
           <td>A compound convex hull specified in an OBJ file.</td>
         </tr>
         <tr>
           <td><code>&quot;simple-hull&quot;</code></td>
           <td>A convex hull automatically generated from the model.</td>
         </tr>
         <tr>
           <td><code>&quot;simple-compound&quot;</code></td>
           <td>A compound convex hull automatically generated from the model, using sub-meshes.</td>
         </tr>
         <tr>
           <td><code>&quot;static-mesh&quot;</code></td>
           <td>The exact shape of the model.</td>
         </tr>
         <tr>
           <td><code>&quot;plane&quot;</code></td>
           <td>A plane.</td>
         </tr>
       </tbody>
     </table>
   </div>
   <dl><dt>Type: <span class="param-type">string</span></dl></dt>
   <h5 class="name" id="Size">Size</h5>
   <div class="description"> A 2D size value.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>height</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The height value.</td>
       </tr>
       <tr>
         <td class="name"><code>width</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The width value.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="StylusPickResult">StylusPickResult</h5>
   <div class="description"> An intersection result for a Stylus Pick.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>type</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The intersection type.</td>
       </tr>
       <tr>
         <td class="name"><code>intersects</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">If there was a valid intersection (type != INTERSECTED_NONE)</td>
       </tr>
       <tr>
         <td class="name"><code>objectID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">The ID of the intersected object. Uuid.NULL for the HUD or invalid intersections.</td>
       </tr>
       <tr>
         <td class="name"><code>distance</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The distance to the intersection point from the origin of the ray.</td>
       </tr>
       <tr>
         <td class="name"><code>intersection</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The intersection point in world-space.</td>
       </tr>
       <tr>
         <td class="name"><code>surfaceNormal</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The surface normal at the intersected point. All NANs if type == INTERSECTED_HUD.</td>
       </tr>
       <tr>
         <td class="name"><code>extraInfo</code></td>
         <td class="type"> <span class="param-type">Variant</span></td>
         <td class="description last">Additional intersection details when available for Model objects.</td>
       </tr>
       <tr>
         <td class="name"><code>stylusTip</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#StylusTip">StylusTip</a></span></td>
         <td class="description last">The StylusTip that was used. Valid even if there was no intersection.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="StylusTip">StylusTip</h5>
   <div class="description"> A StylusTip defines the tip of a stylus.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>side</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The hand the tip is attached to: <code>0</code> for left, <code>1</code> for right.</td>
       </tr>
       <tr>
         <td class="name"><code>tipOffset</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">the position offset of the stylus tip.</td>
       </tr>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The position of the stylus tip.</td>
       </tr>
       <tr>
         <td class="name"><code>orientation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">The orientation of the stylus tip.</td>
       </tr>
       <tr>
         <td class="name"><code>velocity</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The velocity of the stylus tip.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="TouchEvent">TouchEvent</h5>
   <div class="description"> A display or device touch event.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer x-coordinate of the average position of the touch events.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer y-coordinate of the average position of the touch events.</td>
       </tr>
       <tr>
         <td class="name"><code>isPressed</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the touch point has just been pressed, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isMoved</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the touch point has moved, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isStationary</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the touch point has not moved, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isReleased</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the touch point has just been released, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isShifted</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the Shift key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isMeta</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the &quot;meta&quot; key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;meta&quot; key is the Windows key; on OSX it is the Control (Splat) key.</td>
       </tr>
       <tr>
         <td class="name"><code>isControl</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the &quot;control&quot; key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;control&quot; key is the Ctrl key; on OSX it is the Command key.</td>
       </tr>
       <tr>
         <td class="name"><code>isAlt</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the Alt key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>touchPoints</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer number of touch points.</td>
       </tr>
       <tr>
         <td class="name"><code>points</code></td>
         <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#Vec2">Vec2</a>&gt;</span></td>
         <td class="description last">The coordinates of the touch points.</td>
       </tr>
       <tr>
         <td class="name"><code>radius</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The radius of a circle centered on their average position that encompasses the touch points.</td>
       </tr>
       <tr>
         <td class="name"><code>isPinching</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the <code>radius</code> has reduced since the most recent touch event with a different <code>radius</code> value, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isPinchOpening</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the <code>radius</code> has increased since the most recent touch event with a different <code>radius</code> value, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>angle</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">An angle calculated from the touch points, in degrees.</td>
       </tr>
       <tr>
         <td class="name"><code>deltaAngle</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The change in the <code>angle</code> value since the previous touch event, in degrees, if the number of touch points is the same, otherwise <code>0.0</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>angles</code></td>
         <td class="type"> <span class="param-type">Array.&lt;number&gt;</span></td>
         <td class="description last">The angles of each touch point about the center of all the touch points, in degrees.</td>
       </tr>
       <tr>
         <td class="name"><code>isRotating</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the <code>angle</code> of the touch event has changed since the previous touch event and the number of touch points is the same, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>rotating</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"><code>&quot;clockwise&quot;</code> or <code>&quot;counterClockwise&quot;</code> if the <code>angle</code> of the touch event has changed since the previous touch event and the number of touch points is the same, otherwise <code>&quot;none&quot;</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Report the TouchEvent details when a touch event starts.</p><pre><code>Controller.touchBeginEvent.connect(function (event) {
   print(JSON.stringify(event));
});
</code></pre>
   <h5 class="name" id="Vec2">Vec2</h5>
   <div class="description"> A 2-dimensional vector.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">X-coordinate of the vector. Synonyms: <code>u</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Y-coordinate of the vector. Synonyms: <code>v</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Vec2s can be set in multiple ways and modified with their aliases, but still stringify in the same way</p><pre><code>Entities.editEntity(&lt;id&gt;, { materialMappingPos: { x: 0.1, y: 0.2 }});          // { x: 0.1, y: 0.2 }
Entities.editEntity(&lt;id&gt;, { materialMappingPos: { u: 0.3, v: 0.4 }});          // { x: 0.3, y: 0.4 }
Entities.editEntity(&lt;id&gt;, { materialMappingPos: [0.5, 0.6] });                 // { x: 0.5, y: 0.6 }
Entities.editEntity(&lt;id&gt;, { materialMappingPos: 0.7 });                        // { x: 0.7, y: 0.7 }
var color = Entities.getEntityProperties(&lt;id&gt;).materialMappingPos;             // { x: 0.7, y: 0.7 }
color.v = 0.8;                                                                 // { x: 0.7, y: 0.8 }</code></pre>
   <h5 class="name" id="Vec3">Vec3</h5>
   <div class="description"> A 3-dimensional vector. See also the <a href="/api-reference/namespaces/vec3">Vec3</a> object.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">X-coordinate of the vector. Synonyms: <code>r</code>, <code>red</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Y-coordinate of the vector. Synonyms: <code>g</code>, <code>green</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>z</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Z-coordinate of the vector. Synonyms: <code>b</code>, <code>blue</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Vec3s can be set in multiple ways and modified with their aliases, but still stringify in the same way</p><pre><code>Entities.editEntity(&lt;id&gt;, { position: { x: 1, y: 2, z: 3 }});                 // { x: 1, y: 2, z: 3 }
Entities.editEntity(&lt;id&gt;, { position: { r: 4, g: 5, b: 6 }});                 // { x: 4, y: 5, z: 6 }
Entities.editEntity(&lt;id&gt;, { position: { red: 7, green: 8, blue: 9 }});        // { x: 7, y: 8, z: 9 }
Entities.editEntity(&lt;id&gt;, { position: [10, 11, 12] });                        // { x: 10, y: 11, z: 12 }
Entities.editEntity(&lt;id&gt;, { position: 13 });                                  // { x: 13, y: 13, z: 13 }
var position = Entities.getEntityProperties(&lt;id&gt;).position;                   // { x: 13, y: 13, z: 13 }
position.g = 14;                                                              // { x: 13, y: 14, z: 13 }
position.blue = 15;                                                           // { x: 13, y: 14, z: 15 }
Entities.editEntity(&lt;id&gt;, { position: &quot;red&quot;});                                // { x: 255, y: 0, z: 0 }
Entities.editEntity(&lt;id&gt;, { position: &quot;#00FF00&quot;});                            // { x: 0, y: 255, z: 0 }</code></pre>
   <h5 class="name" id="Vec4">Vec4</h5>
   <div class="description"> A 4-dimensional vector.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">X-coordinate of the vector.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Y-coordinate of the vector.</td>
       </tr>
       <tr>
         <td class="name"><code>z</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Z-coordinate of the vector.</td>
       </tr>
       <tr>
         <td class="name"><code>w</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">W-coordinate of the vector.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="ViewFrustum">ViewFrustum</h5>
   <div class="description"> A ViewFrustum has a &quot;keyhole&quot; shape: a regular frustum for stuff that is visible plus a central sphere for stuff that is nearby (for physics simulation).</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The location of the frustum&apos;s apex.</td>
       </tr>
       <tr>
         <td class="name"><code>orientation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">The direction that the frustum is looking at.</td>
       </tr>
       <tr>
         <td class="name"><code>centerRadius</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Center radius of the keyhole in meters.</td>
       </tr>
       <tr>
         <td class="name"><code>fieldOfView</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Horizontal field of view in degrees.</td>
       </tr>
       <tr>
         <td class="name"><code>aspectRatio</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Aspect ratio of the frustum.</td>
       </tr>
       <tr>
         <td class="name"><code>projection</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/mat4">Mat4</a></span></td>
         <td class="description last">The projection matrix for the view defined by the frustum.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id="WheelEvent">WheelEvent</h5>
   <div class="description"> A mouse wheel event.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>x</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer x-coordinate of the event on the Interface window or HMD HUD.</td>
       </tr>
       <tr>
         <td class="name"><code>y</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer y-coordinate of the event on the Interface window or HMD HUD.</td>
       </tr>
       <tr>
         <td class="name"><code>delta</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Integer number indicating the direction and speed to scroll: positive numbers to scroll up, and negative numers to scroll down.</td>
       </tr>
       <tr>
         <td class="name"><code>orientation</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The orientation of the wheel: <code>&quot;VERTICAL&quot;</code> for a typical mouse; <code>&quot;HORIZONTAL&quot;</code> for a &quot;horizontal&quot; wheel.</td>
       </tr>
       <tr>
         <td class="name"><code>isLeftButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the left button was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isMiddleButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the middle button was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isRightButton</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the right button was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isShifted</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the Shift key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
       <tr>
         <td class="name"><code>isMeta</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the &quot;meta&quot; key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;meta&quot; key is the Windows key; on OSX it is the Control (Splat) key.</td>
       </tr>
       <tr>
         <td class="name"><code>isControl</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the &quot;control&quot; key was pressed when the event was generated, otherwise <code>false</code>. On Windows the &quot;control&quot; key is the Ctrl key; on OSX it is the Command key.</td>
       </tr>
       <tr>
         <td class="name"><code>isAlt</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> if the Alt key was pressed when the event was generated, otherwise <code>false</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Report the WheelEvent details for each wheel rotation.</p><pre><code>Controller.wheelEvent.connect(function (event) {
   print(JSON.stringify(event));
});
</code></pre>
 </article>
</section>
               </div>
           </div>
       {% endblock %}