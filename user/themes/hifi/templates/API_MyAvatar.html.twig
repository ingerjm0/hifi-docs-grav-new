       {% extends 'partials/base_noGit.html.twig' %}
       {% set tags = page.taxonomy.tag %}
       {% if tags %}
           {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs', 'tag': tags}},'order': {'by': 'default', 'dir': 'asc'}}) %}
       {% else %}
           {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs'}},'order': {'by': 'default', 'dir': 'asc'}}) %}
       {% endif %}
       
       {% block navigation %}
           <div id="navigation">
           {% if not progress.isFirst(page.path) %}
               <a class="nav nav-prev" href="{{ progress.nextSibling(page.path).url }}"> <img src="{{ url('theme://images/left-arrow.png') }}"></a>
           {% endif %}
       
           {% if not progress.isLast(page.path) %}
               <a class="nav nav-next" href="{{ progress.prevSibling(page.path).url }}"><img src="{{ url('theme://images/right-arrow.png') }}"></a>
           {% endif %}
           </div>
       {% endblock %}
       
       {% block content %}
           <div id="api-specific">
               <div id="body-inner">
                   <h1>{{ page.title }}</h1>
                   <section>
 <article>
   <div class="container-overview">
     <div class="description">
       <table>
         <tbody>
           <tr>
             <th>Available in:</th>
             <td>Interface Scripts</td>
             <td>Client Entity Scripts</td>
           </tr>
         </tbody>
       </table><br>Your avatar is your in-world representation of you. The <code>MyAvatar</code> API is used to manipulate the avatar. For example, you can customize the avatar&apos;s appearance, run custom avatar animations, change the avatar&apos;s position within the domain, or manage the avatar&apos;s collisions with other objects.
     </div>
     <div>
       <h5>Methods</h5>
     </div>
     <div><a href="#.addThrust">addThrust</a></div>
     <div><a href="#.animGraphLoaded">animGraphLoaded</a></div>
     <div><a href="#.attach">attach</a></div>
     <div><a href="#.centerBody">centerBody</a></div>
     <div><a href="#.clearAvatarEntity">clearAvatarEntity</a></div>
     <div><a href="#.clearIKJointLimitHistory">clearIKJointLimitHistory</a></div>
     <div><a href="#.clearJointData">clearJointData</a></div>
     <div><a href="#.clearJointData">clearJointData</a></div>
     <div><a href="#.clearJointsData">clearJointsData</a></div>
     <div><a href="#.clearPinOnJoint">clearPinOnJoint</a></div>
     <div><a href="#.clearScaleRestriction">clearScaleRestriction</a></div>
     <div><a href="#.decreaseSize">decreaseSize</a></div>
     <div><a href="#.detachAll">detachAll</a></div>
     <div><a href="#.detachOne">detachOne</a></div>
     <div><a href="#.disableDriveKey">disableDriveKey</a></div>
     <div><a href="#.disableHandTouchForID">disableHandTouchForID</a></div>
     <div><a href="#.enableDriveKey">enableDriveKey</a></div>
     <div><a href="#.enableHandTouchForID">enableHandTouchForID</a></div>
     <div><a href="#.getAbsoluteDefaultJointRotationInObjectFrame">getAbsoluteDefaultJointRotationInObjectFrame</a></div>
     <div><a href="#.getAbsoluteDefaultJointTranslationInObjectFrame">getAbsoluteDefaultJointTranslationInObjectFrame</a></div>
     <div><a href="#.getAbsoluteJointRotationInObjectFrame">getAbsoluteJointRotationInObjectFrame</a></div>
     <div><a href="#.getAbsoluteJointTranslationInObjectFrame">getAbsoluteJointTranslationInObjectFrame</a></div>
     <div><a href="#.getAcceleration">getAcceleration</a></div>
     <div><a href="#.getAnimationRoles">getAnimationRoles</a></div>
     <div><a href="#.getAnimGraphOverrideUrl">getAnimGraphOverrideUrl</a></div>
     <div><a href="#.getAnimGraphUrl">getAnimGraphUrl</a></div>
     <div><a href="#.getAttachmentData">getAttachmentData</a></div>
     <div><a href="#.getAttachmentsVariant">getAttachmentsVariant</a></div>
     <div><a href="#.getAvatarEntitiesVariant()">getAvatarEntitiesVariant()</a></div>
     <div><a href="#.getAvatarEntityData">getAvatarEntityData</a></div>
     <div><a href="#.getAvatarScale">getAvatarScale</a></div>
     <div><a href="#.getCenterOfGravityModelEnabled">getCenterOfGravityModelEnabled</a></div>
     <div><a href="#.getCharacterControllerEnabled">getCharacterControllerEnabled</a></div>
     <div><a href="#.getCollisionCapsule">getCollisionCapsule</a></div>
     <div><a href="#.getCollisionsEnabled">getCollisionsEnabled</a></div>
     <div><a href="#.getControllerLeftHandMatrix">getControllerLeftHandMatrix</a></div>
     <div><a href="#.getControllerRightHandMatrix">getControllerRightHandMatrix</a></div>
     <div><a href="#.getDataRate">getDataRate</a></div>
     <div><a href="#.getDefaultEyePosition">getDefaultEyePosition</a></div>
     <div><a href="#.getDefaultJointRotation">getDefaultJointRotation</a></div>
     <div><a href="#.getDefaultJointTranslation">getDefaultJointTranslation</a></div>
     <div><a href="#.getDomainMaxScale">getDomainMaxScale</a></div>
     <div><a href="#.getDomainMinScale">getDomainMinScale</a></div>
     <div><a href="#.getDominantHand">getDominantHand</a></div>
     <div><a href="#.getEnableMeshVisible">getEnableMeshVisible</a></div>
     <div><a href="#.getEyeHeight">getEyeHeight</a></div>
     <div><a href="#.getEyePosition">getEyePosition</a></div>
     <div><a href="#.getFlyingDesktopPref">getFlyingDesktopPref</a></div>
     <div><a href="#.getFlyingEnabled">getFlyingEnabled</a></div>
     <div><a href="#.getFlyingHMDPref">getFlyingHMDPref</a></div>
     <div><a href="#.getFullAvatarModelName">getFullAvatarModelName</a></div>
     <div><a href="#.getFullAvatarURLFromPreferences">getFullAvatarURLFromPreferences</a></div>
     <div><a href="#.getGravity">getGravity</a></div>
     <div><a href="#.getHandState">getHandState</a></div>
     <div><a href="#.getHeadDeltaPitch">getHeadDeltaPitch</a></div>
     <div><a href="#.getHeadFinalPitch">getHeadFinalPitch</a></div>
     <div><a href="#.getHeadFinalRoll">getHeadFinalRoll</a></div>
     <div><a href="#.getHeadFinalYaw">getHeadFinalYaw</a></div>
     <div><a href="#.getHeadPosition">getHeadPosition</a></div>
     <div><a href="#.getHeight">getHeight</a></div>
     <div><a href="#.getHMDLeanRecenterEnabled">getHMDLeanRecenterEnabled</a></div>
     <div><a href="#.getIKErrorOnLastSolve">getIKErrorOnLastSolve</a></div>
     <div><a href="#.getJointIndex">getJointIndex</a></div>
     <div><a href="#.getJointIndex">getJointIndex</a></div>
     <div><a href="#.getJointNames">getJointNames</a></div>
     <div><a href="#.getJointNames">getJointNames</a></div>
     <div><a href="#.getJointPosition">getJointPosition</a></div>
     <div><a href="#.getJointPosition">getJointPosition</a></div>
     <div><a href="#.getJointRotation">getJointRotation</a></div>
     <div><a href="#.getJointRotation">getJointRotation</a></div>
     <div><a href="#.getJointRotations">getJointRotations</a></div>
     <div><a href="#.getJointTranslation">getJointTranslation</a></div>
     <div><a href="#.getJointTranslation">getJointTranslation</a></div>
     <div><a href="#.getJointTranslations">getJointTranslations</a></div>
     <div><a href="#.getLeftHandPose">getLeftHandPose</a></div>
     <div><a href="#.getLeftHandPosition">getLeftHandPosition</a></div>
     <div><a href="#.getLeftHandTipPose">getLeftHandTipPose</a></div>
     <div><a href="#.getLeftHandTipPosition">getLeftHandTipPosition</a></div>
     <div><a href="#.getLeftPalmPosition">getLeftPalmPosition</a></div>
     <div><a href="#.getLeftPalmRotation">getLeftPalmRotation</a></div>
     <div><a href="#.getNeckPosition">getNeckPosition</a></div>
     <div><a href="#.getOrientationForAudio">getOrientationForAudio</a></div>
     <div><a href="#.getOrientationVar">getOrientationVar</a></div>
     <div><a href="#.getOtherAvatarsCollisionsEnabled">getOtherAvatarsCollisionsEnabled</a></div>
     <div><a href="#.getParentID">getParentID</a></div>
     <div><a href="#.getParentJointIndex">getParentJointIndex</a></div>
     <div><a href="#.getPositionForAudio">getPositionForAudio</a></div>
     <div><a href="#.getRawDriveKey">getRawDriveKey</a></div>
     <div><a href="#.getRightHandPose">getRightHandPose</a></div>
     <div><a href="#.getRightHandPosition">getRightHandPosition</a></div>
     <div><a href="#.getRightHandTipPose">getRightHandTipPose</a></div>
     <div><a href="#.getRightHandTipPosition">getRightHandTipPosition</a></div>
     <div><a href="#.getRightPalmPosition">getRightPalmPosition</a></div>
     <div><a href="#.getRightPalmRotation">getRightPalmRotation</a></div>
     <div><a href="#.getSensorToWorldMatrix">getSensorToWorldMatrix</a></div>
     <div><a href="#.getSensorToWorldScale">getSensorToWorldScale</a></div>
     <div><a href="#.getSimulationRate">getSimulationRate</a></div>
     <div><a href="#.getSkeleton">getSkeleton</a></div>
     <div><a href="#.getSkeletonOffset">getSkeletonOffset</a></div>
     <div><a href="#.getSnapTurn">getSnapTurn</a></div>
     <div><a href="#.getTargetAvatar">getTargetAvatar</a></div>
     <div><a href="#.getTargetAvatarPosition">getTargetAvatarPosition</a></div>
     <div><a href="#.getTargetScale">getTargetScale</a></div>
     <div><a href="#.getThrust">getThrust</a></div>
     <div><a href="#.getUpdateRate">getUpdateRate</a></div>
     <div><a href="#.getWorldFeetPosition">getWorldFeetPosition</a></div>
     <div><a href="#.goToFeetLocation">goToFeetLocation</a></div>
     <div><a href="#.goToLocation">goToLocation</a></div>
     <div><a href="#.goToLocation">goToLocation</a></div>
     <div><a href="#.goToLocationAndEnableCollisions">goToLocationAndEnableCollisions</a></div>
     <div><a href="#.grab">grab</a></div>
     <div><a href="#.increaseSize">increaseSize</a></div>
     <div><a href="#.isDown">isDown</a></div>
     <div><a href="#.isDriveKeyDisabled">isDriveKeyDisabled</a></div>
     <div><a href="#.isFlying">isFlying</a></div>
     <div><a href="#.isInAir">isInAir</a></div>
     <div><a href="#.isJointDataValid">isJointDataValid</a></div>
     <div><a href="#.isJointDataValid">isJointDataValid</a></div>
     <div><a href="#.isRecenteringHorizontally">isRecenteringHorizontally</a></div>
     <div><a href="#.isUp">isUp</a></div>
     <div><a href="#.jointToWorldDirection">jointToWorldDirection</a></div>
     <div><a href="#.jointToWorldPoint">jointToWorldPoint</a></div>
     <div><a href="#.jointToWorldRotation">jointToWorldRotation</a></div>
     <div><a href="#.overrideAnimation">overrideAnimation</a></div>
     <div><a href="#.overrideRoleAnimation">overrideRoleAnimation</a></div>
     <div><a href="#.pinJoint">pinJoint</a></div>
     <div><a href="#.releaseGrab">releaseGrab</a></div>
     <div><a href="#.removeAnimationStateHandler">removeAnimationStateHandler</a></div>
     <div><a href="#.requestDisableHandTouch">requestDisableHandTouch</a></div>
     <div><a href="#.requestEnableHandTouch">requestEnableHandTouch</a></div>
     <div><a href="#.resetLastSent">resetLastSent</a></div>
     <div><a href="#.resetSensorsAndBody">resetSensorsAndBody</a></div>
     <div><a href="#.resetSize">resetSize</a></div>
     <div><a href="#.restoreAnimation">restoreAnimation</a></div>
     <div><a href="#.restoreRoleAnimation">restoreRoleAnimation</a></div>
     <div><a href="#.restrictScaleFromDomainSettings">restrictScaleFromDomainSettings</a></div>
     <div><a href="#.safeLanding">safeLanding</a></div>
     <div><a href="#.sendAvatarDataPacket">sendAvatarDataPacket</a></div>
     <div><a href="#.sendIdentityPacket">sendIdentityPacket</a></div>
     <div><a href="#.setAbsoluteJointRotationInObjectFrame">setAbsoluteJointRotationInObjectFrame</a></div>
     <div><a href="#.setAbsoluteJointTranslationInObjectFrame">setAbsoluteJointTranslationInObjectFrame</a></div>
     <div><a href="#.setAnimGraphOverrideUrl">setAnimGraphOverrideUrl</a></div>
     <div><a href="#.setAnimGraphUrl">setAnimGraphUrl</a></div>
     <div><a href="#.setAttachmentData">setAttachmentData</a></div>
     <div><a href="#.setAttachmentsVariant">setAttachmentsVariant</a></div>
     <div><a href="#.setAvatarEntityData">setAvatarEntityData</a></div>
     <div><a href="#.setAvatarEntityData">setAvatarEntityData</a></div>
     <div><a href="#.setAvatarScale">setAvatarScale</a></div>
     <div><a href="#.setBlendshape">setBlendshape</a></div>
     <div><a href="#.setCenterOfGravityModelEnabled">setCenterOfGravityModelEnabled</a></div>
     <div><a href="#.setCharacterControllerEnabled">setCharacterControllerEnabled</a></div>
     <div><a href="#.setCollisionsEnabled">setCollisionsEnabled</a></div>
     <div><a href="#.setDominantHand">setDominantHand</a></div>
     <div><a href="#.setEnableDebugDrawAnimPose">setEnableDebugDrawAnimPose</a></div>
     <div><a href="#.setEnableDebugDrawBaseOfSupport">setEnableDebugDrawBaseOfSupport</a></div>
     <div><a href="#.setEnableDebugDrawDefaultPose">setEnableDebugDrawDefaultPose</a></div>
     <div><a href="#.setEnableDebugDrawDetailedCollision">setEnableDebugDrawDetailedCollision</a></div>
     <div><a href="#.setEnableDebugDrawHandControllers">setEnableDebugDrawHandControllers</a></div>
     <div><a href="#.setEnableDebugDrawIKChains">setEnableDebugDrawIKChains</a></div>
     <div><a href="#.setEnableDebugDrawIKConstraints">setEnableDebugDrawIKConstraints</a></div>
     <div><a href="#.setEnableDebugDrawIKTargets">setEnableDebugDrawIKTargets</a></div>
     <div><a href="#.setEnableDebugDrawPosition">setEnableDebugDrawPosition</a></div>
     <div><a href="#.setEnableDebugDrawSensorToWorldMatrix">setEnableDebugDrawSensorToWorldMatrix</a></div>
     <div><a href="#.setEnableInverseKinematics">setEnableInverseKinematics</a></div>
     <div><a href="#.setEnableMeshVisible">setEnableMeshVisible</a></div>
     <div><a href="#.setFlyingDesktopPref">setFlyingDesktopPref</a></div>
     <div><a href="#.setFlyingEnabled">setFlyingEnabled</a></div>
     <div><a href="#.setFlyingHMDPref">setFlyingHMDPref</a></div>
     <div><a href="#.setForceFaceTrackerConnected">setForceFaceTrackerConnected</a></div>
     <div><a href="#.setGravity">setGravity</a></div>
     <div><a href="#.setHandState">setHandState</a></div>
     <div><a href="#.setHMDLeanRecenterEnabled">setHMDLeanRecenterEnabled</a></div>
     <div><a href="#.setJointData">setJointData</a></div>
     <div><a href="#.setJointData">setJointData</a></div>
     <div><a href="#.setJointMappingsFromNetworkReply">setJointMappingsFromNetworkReply</a></div>
     <div><a href="#.setJointRotation">setJointRotation</a></div>
     <div><a href="#.setJointRotation">setJointRotation</a></div>
     <div><a href="#.setJointRotations">setJointRotations</a></div>
     <div><a href="#.setJointTranslation">setJointTranslation</a></div>
     <div><a href="#.setJointTranslation">setJointTranslation</a></div>
     <div><a href="#.setJointTranslations">setJointTranslations</a></div>
     <div><a href="#.setModelScale">setModelScale</a></div>
     <div><a href="#.setOrientationVar">setOrientationVar</a></div>
     <div><a href="#.setOtherAvatarsCollisionsEnabled">setOtherAvatarsCollisionsEnabled</a></div>
     <div><a href="#.setParentID">setParentID</a></div>
     <div><a href="#.setParentJointIndex">setParentJointIndex</a></div>
     <div><a href="#.setRawJointData">setRawJointData</a></div>
     <div><a href="#.setSessionUUID">setSessionUUID</a></div>
     <div><a href="#.setSkeletonOffset">setSkeletonOffset</a></div>
     <div><a href="#.setSnapTurn">setSnapTurn</a></div>
     <div><a href="#.setThrust">setThrust</a></div>
     <div><a href="#.setToggleHips">setToggleHips</a></div>
     <div><a href="#.triggerRotationRecenter">triggerRotationRecenter</a></div>
     <div><a href="#.triggerVerticalRecenter">triggerVerticalRecenter</a></div>
     <div><a href="#.updateAvatarEntity">updateAvatarEntity</a></div>
     <div><a href="#.updateAvatarEntity">updateAvatarEntity</a></div>
     <div><a href="#.updateMotionBehaviorFromMenu">updateMotionBehaviorFromMenu</a></div>
     <div><a href="#.useFullAvatarURL">useFullAvatarURL</a></div>
     <div><a href="#.worldToJointDirection">worldToJointDirection</a></div>
     <div><a href="#.worldToJointPoint">worldToJointPoint</a></div>
     <div><a href="#.worldToJointRotation">worldToJointRotation</a></div><br>
     <div>
       <h5>Signals</h5>
     </div>
     <div><a href="#.animGraphUrlChanged">animGraphUrlChanged</a></div>
     <div><a href="#.attachmentsChanged">attachmentsChanged</a></div>
     <div><a href="#.audioListenerModeChanged">audioListenerModeChanged</a></div>
     <div><a href="#.collisionsEnabledChanged">collisionsEnabledChanged</a></div>
     <div><a href="#.collisionWithEntity">collisionWithEntity</a></div>
     <div><a href="#.disableHandTouchForIDChanged">disableHandTouchForIDChanged</a></div>
     <div><a href="#.displayNameChanged">displayNameChanged</a></div>
     <div><a href="#.dominantHandChanged">dominantHandChanged</a></div>
     <div><a href="#.energyChanged">energyChanged</a></div>
     <div><a href="#.lookAtSnappingChanged">lookAtSnappingChanged</a></div>
     <div><a href="#.newCollisionSoundURL">newCollisionSoundURL</a></div>
     <div><a href="#.onLoadComplete">onLoadComplete</a></div>
     <div><a href="#.otherAvatarsCollisionsEnabledChanged">otherAvatarsCollisionsEnabledChanged</a></div>
     <div><a href="#.positionGoneTo">positionGoneTo</a></div>
     <div><a href="#.rigReady">rigReady</a></div>
     <div><a href="#.rigReset">rigReset</a></div>
     <div><a href="#.scaleChanged">scaleChanged</a></div>
     <div><a href="#.sensorToWorldScaleChanged">sensorToWorldScaleChanged</a></div>
     <div><a href="#.sessionDisplayNameChanged">sessionDisplayNameChanged</a></div>
     <div><a href="#.sessionUUIDChanged">sessionUUIDChanged</a></div>
     <div><a href="#.shouldDisableHandTouchChanged">shouldDisableHandTouchChanged</a></div>
     <div><a href="#.skeletonChanged">skeletonChanged</a></div>
     <div><a href="#.skeletonModelURLChanged">skeletonModelURLChanged</a></div>
     <div><a href="#.transformChanged">transformChanged</a></div>
     <div><a href="#.wentActive">wentActive</a></div>
     <div><a href="#.wentAway">wentAway</a></div><br>
     <div>
       <h5>Type Definitions</h5>
     </div>
     <div><a href="#.SkeletonJoint">SkeletonJoint</a></div><br>
     <h5 class="subsection-title">Properties:</h5>
     <table class="props">
       <thead>
         <tr>
           <th>Name</th>
           <th>Type</th>
           <th>Default</th>
           <th class="last">Description</th>
         </tr>
       </thead>
       <tbody>
         <tr>
           <td class="name"><code>qmlPosition</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last">A synonym for <code>position</code> for use by QML.</td>
         </tr>
         <tr>
           <td class="name"><code>shouldRenderLocally</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> true</td>
           <td class="description last">If <code>true</code> then your avatar is rendered for you in Interface, otherwise it is not rendered for you (but it is still rendered for other users).</td>
         </tr>
         <tr>
           <td class="name"><code>motorVelocity</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"> Vec3.ZERO</td>
           <td class="description last">The target velocity of your avatar to be achieved by a scripted motor.</td>
         </tr>
         <tr>
           <td class="name"><code>motorTimescale</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 1000000</td>
           <td class="description last">The timescale for the scripted motor to achieve the target <code>motorVelocity</code> avatar velocity. Smaller values result in higher acceleration.</td>
         </tr>
         <tr>
           <td class="name"><code>motorReferenceFrame</code></td>
           <td class="type"> <span class="param-type">string</span></td>
           <td class="default"> &quot;camera&quot;</td>
           <td class="description last">Reference frame of the <code>motorVelocity</code>. Must be one of the following: <code>&quot;camera&quot;</code>, <code>&quot;avatar&quot;</code>, and <code>&quot;world&quot;</code>.</td>
         </tr>
         <tr>
           <td class="name"><code>motorMode</code></td>
           <td class="type"> <span class="param-type">string</span></td>
           <td class="default"> &quot;simple&quot;</td>
           <td class="description last">The Type of scripted motor behavior: <code>&quot;simple&quot;</code> to use the <code>motorTimescale</code> time scale; <code>&quot;dynamic&quot;</code> to use character controller timescales.</td>
         </tr>
         <tr>
           <td class="name"><code>collisionSoundURL</code></td>
           <td class="type"> <span class="param-type">string</span></td>
           <td class="default"> &quot;Body_Hits_Impact.wav&quot;</td>
           <td class="description last">The sound that&apos;s played when the avatar experiences a collision. It can be a mono or stereo 16-bit WAV file running at either 24kHz or 48kHz. The latter is down-sampled by the audio mixer, so all audio effectively plays back at a 24khz. 48kHz RAW files are also supported.</td>
         </tr>
         <tr>
           <td class="name"><code>audioListenerMode</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 0</td>
           <td class="description last">Specifies the listening position when hearing spatialized audio. Must be one of the following property values:<br> <code>audioListenerModeHead</code><br> <code>audioListenerModeCamera</code><br> <code>audioListenerModeCustom</code></td>
         </tr>
         <tr>
           <td class="name"><code>audioListenerModeHead</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 0</td>
           <td class="description last">The audio listening position is at the avatar&apos;s head. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>audioListenerModeCamera</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 1</td>
           <td class="description last">The audio listening position is at the camera. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>audioListenerModeCustom</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 2</td>
           <td class="description last">The audio listening position is at a the position specified by set by the <code>customListenPosition</code> and <code>customListenOrientation</code> property values. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>hasScriptedBlendshapes</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> false</td>
           <td class="description last">Blendshapes will be transmitted over the network if set to true.</td>
         </tr>
         <tr>
           <td class="name"><code>hasProceduralBlinkFaceMovement</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> true</td>
           <td class="description last">procedural blinking will be turned on if set to true.</td>
         </tr>
         <tr>
           <td class="name"><code>hasProceduralEyeFaceMovement</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> true</td>
           <td class="description last">procedural eye movement will be turned on if set to true.</td>
         </tr>
         <tr>
           <td class="name"><code>hasAudioEnabledFaceMovement</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> true</td>
           <td class="description last">If set to true, voice audio will move the mouth Blendshapes while MyAvatar.hasScriptedBlendshapes is enabled.</td>
         </tr>
         <tr>
           <td class="name"><code>customListenPosition</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"> Vec3.ZERO</td>
           <td class="description last">The listening position used when the <code>audioListenerMode</code> property value is <code>audioListenerModeCustom</code>.</td>
         </tr>
         <tr>
           <td class="name"><code>customListenOrientation</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
           <td class="default"> Quat.IDENTITY</td>
           <td class="description last">The listening orientation used when the <code>audioListenerMode</code> property value is <code>audioListenerModeCustom</code>.</td>
         </tr>
         <tr>
           <td class="name"><code>leftHandPosition</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last">The position of the left hand in avatar coordinates if it&apos;s being positioned by controllers, otherwise <a href="/api-reference/namespaces/vec3">Vec3.ZERO</a>. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>rightHandPosition</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last">The position of the right hand in avatar coordinates if it&apos;s being positioned by controllers, otherwise <a href="/api-reference/namespaces/vec3">Vec3.ZERO</a>. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>leftHandTipPosition</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last">The position 30cm offset from the left hand in avatar coordinates if it&apos;s being positioned by controllers, otherwise <a href="/api-reference/namespaces/vec3">Vec3.ZERO</a>. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>rightHandTipPosition</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last">The position 30cm offset from the right hand in avatar coordinates if it&apos;s being positioned by controllers, otherwise <a href="/api-reference/namespaces/vec3">Vec3.ZERO</a>. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>leftHandPose</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Pose">Pose</a></span></td>
           <td class="default"></td>
           <td class="description last">The pose of the left hand as determined by the hand controllers. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>rightHandPose</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Pose">Pose</a></span></td>
           <td class="default"></td>
           <td class="description last">The pose right hand position as determined by the hand controllers. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>leftHandTipPose</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Pose">Pose</a></span></td>
           <td class="default"></td>
           <td class="description last">The pose of the left hand as determined by the hand controllers, with the position by 30cm. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>rightHandTipPose</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Pose">Pose</a></span></td>
           <td class="default"></td>
           <td class="description last">The pose of the right hand as determined by the hand controllers, with the position by 30cm. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>centerOfGravityModelEnabled</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> true</td>
           <td class="description last">If <code>true</code> then the avatar hips are placed according to the center of gravity model that balance the center of gravity over the base of support of the feet. Setting the value <code>false</code> will result in the default behaviour where the hips are placed under the head.</td>
         </tr>
         <tr>
           <td class="name"><code>hmdLeanRecenterEnabled</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> true</td>
           <td class="description last">If <code>true</code> then the avatar is re-centered to be under the head&apos;s position. In room-scale VR, this behavior is what causes your avatar to follow your HMD as you walk around the room. Setting the value <code>false</code> is useful if you want to pin the avatar to a fixed position.</td>
         </tr>
         <tr>
           <td class="name"><code>collisionsEnabled</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"></td>
           <td class="description last">Set to <code>true</code> to enable collisions for the avatar, <code>false</code> to disable collisions. May return <code>true</code> even though the value was set <code>false</code> because the zone may disallow collisionless avatars.</td>
         </tr>
         <tr>
           <td class="name"><code>characterControllerEnabled</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"></td>
           <td class="description last">Synonym of <code>collisionsEnabled</code>. <strong>Deprecated:</strong> Use <code>collisionsEnabled</code> instead.</td>
         </tr>
         <tr>
           <td class="name"><code>useAdvancedMovementControls</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"></td>
           <td class="description last">Returns and sets the value of the Interface setting, Settings &gt; Walking and teleporting. Note: Setting the value has no effect unless Interface is restarted.</td>
         </tr>
         <tr>
           <td class="name"><code>showPlayArea</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"></td>
           <td class="description last">Returns and sets the value of the Interface setting, Settings &gt; Show room boundaries while teleporting. Note: Setting the value has no effect unless Interface is restarted.</td>
         </tr>
         <tr>
           <td class="name"><code>yawSpeed</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 75</td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>pitchSpeed</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 50</td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>hmdRollControlEnabled</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"> true</td>
           <td class="description last">If <code>true</code>, the roll angle of your HMD turns your avatar while flying.</td>
         </tr>
         <tr>
           <td class="name"><code>hmdRollControlDeadZone</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 8</td>
           <td class="description last">The amount of HMD roll, in degrees, required before your avatar turns if <code>hmdRollControlEnabled</code> is enabled.</td>
         </tr>
         <tr>
           <td class="name"><code>hmdRollControlRate</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">If hmdRollControlEnabled is true, this value determines the maximum turn rate of your avatar when rolling your HMD in degrees per second.</td>
         </tr>
         <tr>
           <td class="name"><code>userHeight</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 1.75</td>
           <td class="description last">The height of the user in sensor space.</td>
         </tr>
         <tr>
           <td class="name"><code>userEyeHeight</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"> 1.65</td>
           <td class="description last">The estimated height of the user&apos;s eyes in sensor space. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>SELF_ID</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
           <td class="default"></td>
           <td class="description last">UUID representing &quot;my avatar&quot;. Only use for local-only entities and overlays in situations where MyAvatar.sessionUUID is not available (e.g., if not connected to a domain). Note: Likely to be deprecated. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>walkSpeed</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>walkBackwardSpeed</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>sprintSpeed</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>isInSittingState</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>userRecenterModel</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>skeletonOffset</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last">Can be used to apply a translation offset between the avatar&apos;s position and the registration point of the 3D model.</td>
         </tr>
         <tr>
           <td class="name"><code>position</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>scale</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">Returns the clamped scale of the avatar.</td>
         </tr>
         <tr>
           <td class="name"><code>density</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"><em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>handPosition</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>bodyYaw</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">The rotation left or right about an axis running from the head to the feet of the avatar. Yaw is sometimes called &quot;heading&quot;.</td>
         </tr>
         <tr>
           <td class="name"><code>bodyPitch</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">The rotation about an axis running from shoulder to shoulder of the avatar. Pitch is sometimes called &quot;elevation&quot;.</td>
         </tr>
         <tr>
           <td class="name"><code>bodyRoll</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">The rotation about an axis running from the chest to the back of the avatar. Roll is sometimes called &quot;bank&quot;.</td>
         </tr>
         <tr>
           <td class="name"><code>orientation</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>headOrientation</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
           <td class="default"></td>
           <td class="description last">The orientation of the avatar&apos;s head.</td>
         </tr>
         <tr>
           <td class="name"><code>headPitch</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">The rotation about an axis running from ear to ear of the avatar&apos;s head. Pitch is sometimes called &quot;elevation&quot;.</td>
         </tr>
         <tr>
           <td class="name"><code>headYaw</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">The rotation left or right about an axis running from the base to the crown of the avatar&apos;s head. Yaw is sometimes called &quot;heading&quot;.</td>
         </tr>
         <tr>
           <td class="name"><code>headRoll</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last">The rotation about an axis running from the nose to the back of the avatar&apos;s head. Roll is sometimes called &quot;bank&quot;.</td>
         </tr>
         <tr>
           <td class="name"><code>velocity</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>angularVelocity</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>audioLoudness</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>audioAverageLoudness</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>displayName</code></td>
           <td class="type"> <span class="param-type">string</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>sessionDisplayName</code></td>
           <td class="type"> <span class="param-type">string</span></td>
           <td class="default"></td>
           <td class="description last">Sanitized, defaulted version displayName that is defined by the AvatarMixer rather than by Interface clients. The result is unique among all avatars present at the time.</td>
         </tr>
         <tr>
           <td class="name"><code>lookAtSnappingEnabled</code></td>
           <td class="type"> <span class="param-type">boolean</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>skeletonModelURL</code></td>
           <td class="type"> <span class="param-type">string</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>attachmentData</code></td>
           <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#AttachmentData">AttachmentData</a>&gt;</span></td>
           <td class="default"></td>
           <td class="description last"></td>
         </tr>
         <tr>
           <td class="name"><code>jointNames</code></td>
           <td class="type"> <span class="param-type">Array.&lt;string&gt;</span></td>
           <td class="default"></td>
           <td class="description last">The list of joints in the current avatar model. <em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>sessionUUID</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
           <td class="default"></td>
           <td class="description last"><em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>sensorToWorldMatrix</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/mat4">Mat4</a></span></td>
           <td class="default"></td>
           <td class="description last"><em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>controllerLeftHandMatrix</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/mat4">Mat4</a></span></td>
           <td class="default"></td>
           <td class="description last"><em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>controllerRightHandMatrix</code></td>
           <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/mat4">Mat4</a></span></td>
           <td class="default"></td>
           <td class="description last"><em>Read-only.</em></td>
         </tr>
         <tr>
           <td class="name"><code>sensorToWorldScale</code></td>
           <td class="type"> <span class="param-type">number</span></td>
           <td class="default"></td>
           <td class="description last"><em>Read-only.</em></td>
         </tr>
       </tbody>
     </table>
   </div>
   <h4 class="subsection-title">Methods</h4>
   <h5 class="name" id=".addThrust"> addThrust<span class="signature">(thrust)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>thrust</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".animGraphLoaded"> animGraphLoaded<span class="signature">()</span><span class="type-signature"></span></h5>
   <h5 class="name" id=".attach"> attach<span class="signature">(modelURL, jointName<span class="signature-attributes">opt</span>, translation<span class="signature-attributes">opt</span>, rotation<span class="signature-attributes">opt</span>, scale<span class="signature-attributes">opt</span>, isSoft<span class="signature-attributes">opt</span>, allowDuplicates<span class="signature-attributes">opt</span>, useSaved<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h5>
   <div class="description"> Attach a model to your avatar. For example, you can give your avatar a hat to wear, a guitar to hold, or a surfboard to stand on.<p>Note: Attached models are models only; they are not entities and can not be manipulated using the <a href="/api-reference/namespaces/entities">Entities</a> API. Nor can you use this function to attach an entity (such as a sphere or a box) to your avatar.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>modelURL</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The URL of the model to attach. Models can be .FBX or .OBJ format.</td>
       </tr>
       <tr>
         <td class="name"><code>jointName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last">The name of the avatar joint (see <a href="/api-reference/namespaces/myavatar#.getJointNames">MyAvatar.getJointNames</a> or <a href="/api-reference/namespaces/avatar#.getJointNames">Avatar.getJointNames</a>) to attach the model to.</td>
       </tr>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> Vec3.ZERO</td>
         <td class="description last">The offset to apply to the model relative to the joint position.</td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> Quat.IDENTITY</td>
         <td class="description last">The rotation to apply to the model relative to the joint orientation.</td>
       </tr>
       <tr>
         <td class="name"><code>scale</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> 1.0</td>
         <td class="description last">The scale to apply to the model.</td>
       </tr>
       <tr>
         <td class="name"><code>isSoft</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> false</td>
         <td class="description last">If the model has a skeleton, set this to <code>true</code> so that the bones of the attached model&apos;s skeleton are be rotated to fit the avatar&apos;s current pose. <code>isSoft</code> is used, for example, to have clothing that moves with the avatar.<br> If <code>true</code>, the <code>translation</code>, <code>rotation</code>, and <code>scale</code> parameters are ignored.</td>
       </tr>
       <tr>
         <td class="name"><code>allowDuplicates</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> false</td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>useSaved</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> true</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Attach a cowboy hat to your avatar&apos;s head.</p><pre><code>var attachment = {
   modelURL: &quot;https://s3.amazonaws.com/hifi-public/tony/cowboy-hat.fbx&quot;,
   jointName: &quot;Head&quot;,
   translation: {&quot;x&quot;: 0, &quot;y&quot;: 0.25, &quot;z&quot;: 0},
   rotation: {&quot;x&quot;: 0, &quot;y&quot;: 0, &quot;z&quot;: 0, &quot;w&quot;: 1},
   scale: 1,
   isSoft: false
};

MyAvatar.attach(attachment.modelURL,
                attachment.jointName,
                attachment.translation,
                attachment.rotation,
                attachment.scale,
                attachment.isSoft);</code></pre>
   <h5 class="name" id=".centerBody"> centerBody<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Moves and orients the avatar, such that it is directly underneath the HMD, with toes pointed forward.</div>
   <h5 class="name" id=".clearAvatarEntity"> clearAvatarEntity<span class="signature">(entityID)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>entityID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".clearIKJointLimitHistory"> clearIKJointLimitHistory<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> The internal inverse-kinematics system maintains a record of which joints are &quot;locked&quot;. Sometimes it is useful to forget this history, to prevent contorted joints.</div>
   <h5 class="name" id=".clearJointData"> clearJointData<span class="signature">(index)</span><span class="type-signature"></span></h5>
   <div class="description"> Clear joint translations and rotations set by script for a specific joint. This restores all motion from the default animation system including inverse kinematics for that joint.<p>Note: This is slightly faster than the function variation that specifies the joint name.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The index of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".clearJointData"> clearJointData<span class="signature">(name)</span><span class="type-signature"></span></h5>
   <div class="description"> Clear joint translations and rotations set by script for a specific joint. This restores all motion from the default animation system including inverse kinematics for that joint.<p>Note: This is slightly slower than the function variation that specifies the joint index.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Offset and restore the position of your avatar&apos;s head.</p><pre><code>// Move your avatar&apos;s head up by 25cm from where it should be.
MyAvatar.setJointTranslation(&quot;Neck&quot;, { x: 0, y: 0.25, z: 0 });

// Restore your avatar&apos;s head to its default position after 5s.
Script.setTimeout(function () {
   MyAvatar.clearJointData(&quot;Neck&quot;);
}, 5000);</code></pre>
   <h5 class="name" id=".clearJointsData"> clearJointsData<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Clear all joint translations and rotations that have been set by script. This restores all motion from the default animation system including inverse kinematics for all joints.</div>
   <h5>Example</h5>
   <p class="code-caption">Set your avatar to it&apos;s default T-pose for a while.</p><pre><code>// Set all joint translations and rotations to defaults.
var i, length, rotation, translation;
for (i = 0, length = MyAvatar.getJointNames().length; i &lt; length; i++) {
   rotation = MyAvatar.getDefaultJointRotation(i);
   translation = MyAvatar.getDefaultJointTranslation(i);
   MyAvatar.setJointData(i, rotation, translation);
}

// Restore your avatar&apos;s motion after 5s.
Script.setTimeout(function () {
   MyAvatar.clearJointsData();
}, 5000);</code></pre>
   <h5 class="name" id=".clearPinOnJoint"> clearPinOnJoint<span class="signature">(index)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".clearScaleRestriction"> clearScaleRestriction<span class="signature">()</span><span class="type-signature"></span></h5>
   <h5 class="name" id=".decreaseSize"> decreaseSize<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Decrease the avatar&apos;s scale by five percent, down to a minimum scale of <code>0.25</code>.</div>
   <h5>Example</h5>
   <p class="code-caption">Reset your avatar&apos;s size to default then shrink it 5 times.</p><pre><code>MyAvatar.resetSize();

for (var i = 0; i &lt; 5; i++){
   print (&quot;Shrinking by 5 percent&quot;);
   MyAvatar.decreaseSize();
}</code></pre>
   <h5 class="name" id=".detachAll"> detachAll<span class="signature">(modelURL, jointName<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h5>
   <div class="description"> Detach all instances of a particular model from either a specific joint or all joints.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>modelURL</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The URL of the model to detach.</td>
       </tr>
       <tr>
         <td class="name"><code>jointName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last">The name of the joint to detach the model from. If <code>&quot;&quot;</code>, then the model is detached from all joints.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".detachOne"> detachOne<span class="signature">(modelURL, jointName<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h5>
   <div class="description"> Detach the most recently attached instance of a particular model from either a specific joint or any joint.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>modelURL</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The URL of the model to detach.</td>
       </tr>
       <tr>
         <td class="name"><code>jointName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last">The name of the joint to detach the model from. If <code>&quot;&quot;</code>, then the most recently attached model is removed from which ever joint it was attached to.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".disableDriveKey"> disableDriveKey<span class="signature">(key)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>key</code></td>
         <td class="type"> <span class="param-type">DriveKeys</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".disableHandTouchForID"> disableHandTouchForID<span class="signature">(entityID)</span><span class="type-signature"></span></h5>
   <div class="description"> Disables hand touch effect on a specific entity</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>entityID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">ID of the entity that will disable hand touch effect</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".enableDriveKey"> enableDriveKey<span class="signature">(key)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>key</code></td>
         <td class="type"> <span class="param-type">DriveKeys</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".enableHandTouchForID"> enableHandTouchForID<span class="signature">(entityID)</span><span class="type-signature"></span></h5>
   <div class="description"> Enables hand touch effect on a specific entity</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>entityID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">ID of the entity that will enable hand touch effect</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".getAbsoluteDefaultJointRotationInObjectFrame"> getAbsoluteDefaultJointRotationInObjectFrame<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <div class="description"> Provides read only access to the default joint rotations in avatar coordinates. The default pose of the avatar is defined by the position and orientation of all bones in the avatar&apos;s model file. Typically this is a T-pose.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">index number</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The rotation of this joint in avatar coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5 class="name" id=".getAbsoluteDefaultJointTranslationInObjectFrame"> getAbsoluteDefaultJointTranslationInObjectFrame<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Provides read only access to the default joint translations in avatar coordinates. The default pose of the avatar is defined by the position and orientation of all bones in the avatar&apos;s model file. Typically this is a T-pose.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">index number</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of this joint in avatar coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getAbsoluteJointRotationInObjectFrame"> getAbsoluteJointRotationInObjectFrame<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5 class="name" id=".getAbsoluteJointTranslationInObjectFrame"> getAbsoluteJointTranslationInObjectFrame<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getAcceleration"> getAcceleration<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getAnimationRoles"> getAnimationRoles<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;string&gt;}</span></h5>
   <div class="description"> Each avatar has an avatar-animation.json file that defines which animations are used and how they are blended together with procedural data (such as look at vectors, hand sensors etc.). Each animation specified in the avatar-animation.json file is known as an animation role. Animation roles map to easily understandable actions that the avatar can perform, such as &quot;idleStand&quot;, &quot;idleTalk&quot;, or &quot;walkFwd.&quot; getAnimationRoles() is used get the list of animation roles defined in the avatar-animation.json.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> Array of role strings.</div>
   <dl><dt> Type: Array.&lt;string&gt;</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Print the list of animation roles defined in the avatar&apos;s avatar-animation.json file to the debug log.</p><pre><code>var roles = MyAvatar.getAnimationRoles();
print(&quot;Animation Roles:&quot;);
for (var i = 0; i &lt; roles.length; i++) {
   print(roles[i]);
}</code></pre>
   <h5 class="name" id=".getAnimGraphOverrideUrl"> getAnimGraphOverrideUrl<span class="signature">()</span> <span class="type-signature">&#x2192; {string}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: string</dt></dl>
   <h5 class="name" id=".getAnimGraphUrl"> getAnimGraphUrl<span class="signature">()</span> <span class="type-signature">&#x2192; {string}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: string</dt></dl>
   <h5 class="name" id=".getAttachmentData"> getAttachmentData<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;<a href="/api-reference/globals#AttachmentData">AttachmentData</a>&gt;}</span></h5>
   <div class="description"> Get information about all models currently attached to your avatar.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> Information about all models attached to your avatar.</div>
   <dl><dt> Type: Array.&lt;<a href="/api-reference/globals#AttachmentData">AttachmentData</a>&gt;</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the URLs of all current attachments.</p><pre><code>var attachments = MyAvatar.getaAttachmentData();
for (var i = 0; i &lt; attachments.length; i++) {
   print (attachments[i].modelURL);
}</code></pre>
   <h5 class="name" id=".getAttachmentsVariant"> getAttachmentsVariant<span class="signature">()</span> <span class="type-signature">&#x2192; {object}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: object</dt></dl>
   <h5 class="name" id=".getAvatarEntitiesVariant()"> getAvatarEntitiesVariant()<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;object&gt;}</span></h5>
   <div class="description"> Function returns list of avatar entities</div>
   <h6>Returns:</h6>
   <dl><dt> Type: Array.&lt;object&gt;</dt></dl>
   <h5 class="name" id=".getAvatarEntityData"> getAvatarEntityData<span class="signature">()</span> <span class="type-signature">&#x2192; {object}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: object</dt></dl>
   <h5 class="name" id=".getAvatarScale"> getAvatarScale<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getCenterOfGravityModelEnabled"> getCenterOfGravityModelEnabled<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getCharacterControllerEnabled"> getCharacterControllerEnabled<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <dl class="details"><dt class="important tag-deprecated">Deprecated:</dt>
     <dd class="yes-def tag-deprecated">
       <ul class="dummy">
         <li>Yes</li>
       </ul>
     </dd>
   </dl>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getCollisionCapsule"> getCollisionCapsule<span class="signature">()</span> <span class="type-signature">&#x2192; {object}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: object</dt></dl>
   <h5 class="name" id=".getCollisionsEnabled"> getCollisionsEnabled<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getControllerLeftHandMatrix"> getControllerLeftHandMatrix<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/mat4">Mat4</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/namespaces/mat4">Mat4</a></dt></dl>
   <h5 class="name" id=".getControllerRightHandMatrix"> getControllerRightHandMatrix<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/mat4">Mat4</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/namespaces/mat4">Mat4</a></dt></dl>
   <h5 class="name" id=".getDataRate"> getDataRate<span class="signature">(rateName<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>rateName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getDefaultEyePosition"> getDefaultEyePosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position in world coordinates of the point directly between your avatar&apos;s eyes assuming your avatar was in its default pose. This is a reference position; it does not change as your avatar&apos;s head moves relative to the avatar position.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> Default position between your avatar&apos;s eyes in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report your avatar&apos;s default eye position.</p><pre><code>var defaultEyePosition = MyAvatar.getDefaultEyePosition();
print(JSON.stringify(defaultEyePosition));</code></pre>
   <h5 class="name" id=".getDefaultJointRotation"> getDefaultJointRotation<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5 class="name" id=".getDefaultJointTranslation"> getDefaultJointTranslation<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getDomainMaxScale"> getDomainMaxScale<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <div class="description"> Returns the maximum scale allowed for this avatar in the current domain. This value can change as the user changes avatars or when changing domains.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> maximum scale allowed for this avatar in the current domain.</div>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getDomainMinScale"> getDomainMinScale<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <div class="description"> Returns the minimum scale allowed for this avatar in the current domain. This value can change as the user changes avatars or when changing domains.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> minimum scale allowed for this avatar in the current domain.</div>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getDominantHand"> getDominantHand<span class="signature">()</span> <span class="type-signature">&#x2192; {string}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: string</dt></dl>
   <h5 class="name" id=".getEnableMeshVisible"> getEnableMeshVisible<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <div class="description"> Get whether or not your avatar mesh is visible.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> <code>true</code> if your avatar&apos;s mesh is visible, otherwise <code>false</code>.</div>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getEyeHeight"> getEyeHeight<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <div class="description"> Provides read only access to the current eye height of the avatar. This height is only an estimate and might be incorrect for avatars that are missing standard joints.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> Eye height of avatar in meters.</div>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getEyePosition"> getEyePosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the current position of the point directly between the avatar&apos;s eyes.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The current position of the point directly between the avatar&apos;s eyes.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report your avatar&apos;s current eye position.</p><pre><code>var eyePosition = MyAvatar.getEyePosition();
print(JSON.stringify(eyePosition));</code></pre>
   <h5 class="name" id=".getFlyingDesktopPref"> getFlyingDesktopPref<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <div class="description"> Get your preference for flying in desktop display mode. Note that your ability to fly also depends on whether the domain you&apos;re in allows you to fly.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> <code>true</code> if your preference is to enable flying in desktop display mode, otherwise <code>false</code>.</div>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getFlyingEnabled"> getFlyingEnabled<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <div class="description"> Get your preference for flying in your current desktop or HMD display mode. Note that your ability to fly also depends on whether the domain you&apos;re in allows you to fly.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> <code>true</code> if your preference is to enable flying in your current desktop or HMD display mode, otherwise <code>false</code>.</div>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getFlyingHMDPref"> getFlyingHMDPref<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <div class="description"> Get your preference for flying in HMD display mode. Note that your ability to fly also depends on whether the domain you&apos;re in allows you to fly.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> <code>true</code> if your preference is to enable flying in HMD display mode, otherwise <code>false</code>.</div>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getFullAvatarModelName"> getFullAvatarModelName<span class="signature">()</span> <span class="type-signature">&#x2192; {string}</span></h5>
   <div class="description"> Get the full avatar model name for the current avatar.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The full avatar model name.</div>
   <dl><dt> Type: string</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the current full avatar model name.</p><pre><code>print(MyAvatar.getFullAvatarModelName());</code></pre>
   <h5 class="name" id=".getFullAvatarURLFromPreferences"> getFullAvatarURLFromPreferences<span class="signature">()</span> <span class="type-signature">&#x2192; {string}</span></h5>
   <div class="description"> Get the complete URL for the current avatar.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The full avatar model name.</div>
   <dl><dt> Type: string</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the URL for the current avatar.</p><pre><code>print(MyAvatar.getFullAvatarURLFromPreferences());</code></pre>
   <h5 class="name" id=".getGravity"> getGravity<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getHandState"> getHandState<span class="signature">()</span> <span class="type-signature">&#x2192; {string}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: string</dt></dl>
   <h5 class="name" id=".getHeadDeltaPitch"> getHeadDeltaPitch<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getHeadFinalPitch"> getHeadFinalPitch<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getHeadFinalRoll"> getHeadFinalRoll<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getHeadFinalYaw"> getHeadFinalYaw<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getHeadPosition"> getHeadPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the current position of the avatar&apos;s &quot;Head&quot; joint.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The current position of the avatar&apos;s &quot;Head&quot; joint.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the current position of your avatar&apos;s head.</p><pre><code>print(JSON.stringify(MyAvatar.getHeadPosition()));</code></pre>
   <h5 class="name" id=".getHeight"> getHeight<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <div class="description"> Provides read only access to the current height of the avatar. This height is only an estimate and might be incorrect for avatars that are missing standard joints.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> Height of avatar in meters.</div>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getHMDLeanRecenterEnabled"> getHMDLeanRecenterEnabled<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getIKErrorOnLastSolve"> getIKErrorOnLastSolve<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getJointIndex"> getJointIndex<span class="signature">(name)</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <div class="description"> Get the joint index for a named joint. The joint index value is the position of the joint in the array returned by <a href="/api-reference/namespaces/myavatar#.getJointNames">MyAvatar.getJointNames</a> or <a href="/api-reference/namespaces/avatar#.getJointNames">Avatar.getJointNames</a>.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The index of the joint.</div>
   <dl><dt> Type: number</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the index of your avatar&apos;s left arm joint.</p><pre><code>print(JSON.stringify(MyAvatar.getJointIndex(&quot;LeftArm&quot;));</code></pre>
   <h5 class="name" id=".getJointIndex"> getJointIndex<span class="signature">(name)</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <div class="description"> Get the joint index for a named joint. The joint index value is the position of the joint in the array returned by <a href="/api-reference/namespaces/myavatar#.getJointNames">MyAvatar.getJointNames</a> or <a href="/api-reference/namespaces/avatar#.getJointNames">Avatar.getJointNames</a>.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The index of the joint.</div>
   <dl><dt> Type: number</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the index of your avatar&apos;s left arm joint.</p><pre><code>print(JSON.stringify(MyAvatar.getJointIndex(&quot;LeftArm&quot;));</code></pre>
   <h5 class="name" id=".getJointNames"> getJointNames<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;string&gt;}</span></h5>
   <div class="description"> Get the names of all the joints in the current avatar.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The joint names.</div>
   <dl><dt> Type: Array.&lt;string&gt;</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the names of all the joints in your current avatar.</p><pre><code>print(JSON.stringify(MyAvatar.getJointNames()));</code></pre>
   <h5 class="name" id=".getJointNames"> getJointNames<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;string&gt;}</span></h5>
   <div class="description"> Get the names of all the joints in the current avatar.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The joint names.</div>
   <dl><dt> Type: Array.&lt;string&gt;</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the names of all the joints in your current avatar.</p><pre><code>print(JSON.stringify(MyAvatar.getJointNames()));</code></pre>
   <h5 class="name" id=".getJointPosition"> getJointPosition<span class="signature">(name)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of a joint in the current avatar.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the joint in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the position of your avatar&apos;s hips.</p><pre><code>print(JSON.stringify(MyAvatar.getJointPosition(&quot;Hips&quot;)));</code></pre>
   <h5 class="name" id=".getJointPosition"> getJointPosition<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of a joint in the current avatar.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The index of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the joint in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getJointRotation"> getJointRotation<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <div class="description"> Get the rotation of a joint relative to its parent. For information on the joint hierarchy used, see <a href="https://docs.highfidelity.com/create-and-explore/avatars/avatar-standards">Avatar Standards</a>.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The index of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The rotation of the joint relative to its parent.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5 class="name" id=".getJointRotation"> getJointRotation<span class="signature">(name)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <div class="description"> Get the rotation of a joint relative to its parent. For information on the joint hierarchy used, see <a href="https://docs.highfidelity.com/create-and-explore/avatars/avatar-standards">Avatar Standards</a>.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The rotation of the joint relative to its parent.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the rotation of your avatar&apos;s hips joint.</p><pre><code>print(JSON.stringify(MyAvatar.getJointRotation(&quot;Hips&quot;)));</code></pre>
   <h5 class="name" id=".getJointRotations"> getJointRotations<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;<a href="/api-reference/globals#Quat">Quat</a>&gt;}</span></h5>
   <div class="description"> Get the rotations of all joints in the current avatar. Each joint&apos;s rotation is relative to its parent joint.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The rotations of all joints relative to each&apos;s parent. The values are in the same order as the array returned by <a href="/api-reference/namespaces/myavatar#.getJointNames">MyAvatar.getJointNames</a> or <a href="/api-reference/namespaces/avatar#.getJointNames">Avatar.getJointNames</a>.</div>
   <dl><dt> Type: Array.&lt;<a href="/api-reference/globals#Quat">Quat</a>&gt;</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the rotations of all your avatar&apos;s joints.</p><pre><code>print(JSON.stringify(MyAvatar.getJointRotations()));</code></pre>
   <h5 class="name" id=".getJointTranslation"> getJointTranslation<span class="signature">(name)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the translation of a joint relative to its parent. For information on the joint hierarchy used, see <a href="https://docs.highfidelity.com/create-and-explore/avatars/avatar-standards">Avatar Standards</a>.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The translation of the joint relative to its parent.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the translation of your avatar&apos;s hips joint.</p><pre><code>print(JSON.stringify(MyAvatar.getJointRotation(&quot;Hips&quot;)));</code></pre>
   <h5 class="name" id=".getJointTranslation"> getJointTranslation<span class="signature">(index)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the translation of a joint relative to its parent. For information on the joint hierarchy used, see <a href="https://docs.highfidelity.com/create-and-explore/avatars/avatar-standards">Avatar Standards</a>.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The index of the joint.</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> The translation of the joint relative to its parent.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getJointTranslations"> getJointTranslations<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;<a href="/api-reference/globals#Vec3">Vec3</a>&gt;}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Array.&lt;<a href="/api-reference/globals#Vec3">Vec3</a>&gt;</dt></dl>
   <h5 class="name" id=".getLeftHandPose"> getLeftHandPose<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Pose">Pose</a>}</span></h5>
   <div class="description"> Get the pose (position, rotation, velocity, and angular velocity) of the avatar&apos;s left hand as positioned by a hand controller (e.g., Oculus Touch or Vive).<br>
     <p>Note: The Leap Motion isn&apos;t part of the hand controller input system. (Instead, it manipulates the avatar&apos;s joints for hand animation.) If you are using the Leap Motion, the return value&apos;s <code>valid</code> property will be <code>false</code> and any pose values returned will not be meaningful.</p>
   </div>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Pose">Pose</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the pose of your avatar&apos;s left hand.</p><pre><code>print(JSON.stringify(MyAvatar.getLeftHandPose()));</code></pre>
   <h5 class="name" id=".getLeftHandPosition"> getLeftHandPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of the avatar&apos;s left hand as positioned by a hand controller (e.g., Oculus Touch or Vive).<br>
     <p>Note: The Leap Motion isn&apos;t part of the hand controller input system. (Instead, it manipulates the avatar&apos;s joints for hand animation.)</p>
   </div>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the left hand in avatar coordinates if positioned by a hand controller, otherwise <code><a href="/api-reference/namespaces/vec3">Vec3.ZERO</a></code>.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the position of your left hand relative to your avatar.</p><pre><code>print(JSON.stringify(MyAvatar.getLeftHandPosition()));</code></pre>
   <h5 class="name" id=".getLeftHandTipPose"> getLeftHandTipPose<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Pose">Pose</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Pose">Pose</a></dt></dl>
   <h5 class="name" id=".getLeftHandTipPosition"> getLeftHandTipPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getLeftPalmPosition"> getLeftPalmPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of the left palm in world coordinates.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the left palm in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the position of your avatar&apos;s left palm.</p><pre><code>print(JSON.stringify(MyAvatar.getLeftPalmPosition()));</code></pre>
   <h5 class="name" id=".getLeftPalmRotation"> getLeftPalmRotation<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <div class="description"> Get the rotation of the left palm in world coordinates.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The rotation of the left palm in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the rotation of your avatar&apos;s left palm.</p><pre><code>print(JSON.stringify(MyAvatar.getLeftPalmRotation()));</code></pre>
   <h5 class="name" id=".getNeckPosition"> getNeckPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of the current avatar&apos;s neck in world coordinates.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the neck in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the position of your avatar&apos;s neck.</p><pre><code>print(JSON.stringify(MyAvatar.getNeckPosition()));</code></pre>
   <h5 class="name" id=".getOrientationForAudio"> getOrientationForAudio<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5 class="name" id=".getOrientationVar"> getOrientationVar<span class="signature">()</span> <span class="type-signature">&#x2192; {object}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: object</dt></dl>
   <h5 class="name" id=".getOtherAvatarsCollisionsEnabled"> getOtherAvatarsCollisionsEnabled<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getParentID"> getParentID<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/uuid">Uuid</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/namespaces/uuid">Uuid</a></dt></dl>
   <h5 class="name" id=".getParentJointIndex"> getParentJointIndex<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getPositionForAudio"> getPositionForAudio<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getRawDriveKey"> getRawDriveKey<span class="signature">(key)</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>key</code></td>
         <td class="type"> <span class="param-type">DriveKeys</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getRightHandPose"> getRightHandPose<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Pose">Pose</a>}</span></h5>
   <div class="description"> Get the pose (position, rotation, velocity, and angular velocity) of the avatar&apos;s left hand as positioned by a hand controller (e.g., Oculus Touch or Vive).<br>
     <p>Note: The Leap Motion isn&apos;t part of the hand controller input system. (Instead, it manipulates the avatar&apos;s joints for hand animation.) If you are using the Leap Motion, the return value&apos;s <code>valid</code> property will be <code>false</code> and any pose values returned will not be meaningful.</p>
   </div>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Pose">Pose</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the pose of your avatar&apos;s right hand.</p><pre><code>print(JSON.stringify(MyAvatar.getRightHandPose()));</code></pre>
   <h5 class="name" id=".getRightHandPosition"> getRightHandPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of the avatar&apos;s right hand as positioned by a hand controller (e.g., Oculus Touch or Vive).<br>
     <p>Note: The Leap Motion isn&apos;t part of the hand controller input system. (Instead, it manipulates the avatar&apos;s joints for hand animation.)</p>
   </div>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the right hand in avatar coordinates if positioned by a hand controller, otherwise <code><a href="/api-reference/namespaces/vec3">Vec3.ZERO</a></code>.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the position of your right hand relative to your avatar.</p><pre><code>print(JSON.stringify(MyAvatar.getLeftHandPosition()));</code></pre>
   <h5 class="name" id=".getRightHandTipPose"> getRightHandTipPose<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Pose">Pose</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Pose">Pose</a></dt></dl>
   <h5 class="name" id=".getRightHandTipPosition"> getRightHandTipPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".getRightPalmPosition"> getRightPalmPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of the right palm in world coordinates.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the right palm in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the position of your avatar&apos;s right palm.</p><pre><code>print(JSON.stringify(MyAvatar.getRightPalmPosition()));</code></pre>
   <h5 class="name" id=".getRightPalmRotation"> getRightPalmRotation<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <div class="description"> Get the rotation of the right palm in world coordinates.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The rotation of the right palm in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the rotation of your avatar&apos;s right palm.</p><pre><code>print(JSON.stringify(MyAvatar.getRightPalmRotation()));</code></pre>
   <h5 class="name" id=".getSensorToWorldMatrix"> getSensorToWorldMatrix<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/mat4">Mat4</a>}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/namespaces/mat4">Mat4</a></dt></dl>
   <h5 class="name" id=".getSensorToWorldScale"> getSensorToWorldScale<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getSimulationRate"> getSimulationRate<span class="signature">(rateName<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>rateName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getSkeleton"> getSkeleton<span class="signature">()</span> <span class="type-signature">&#x2192; {Array.&lt;<a href="/api-reference/namespaces/myavatar#.SkeletonJoint">MyAvatar.SkeletonJoint</a>&gt;}</span></h5>
   <div class="description"> Returns an array of joints, where each joint is an object containing name, index, and parentIndex fields.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> A list of information about each joint in this avatar&apos;s skeleton.</div>
   <dl><dt> Type: Array.&lt;<a href="/api-reference/namespaces/myavatar#.SkeletonJoint">MyAvatar.SkeletonJoint</a>&gt;</dt></dl>
   <h5 class="name" id=".getSkeletonOffset"> getSkeletonOffset<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the offset applied to the current avatar. The offset adjusts the position that the avatar is rendered. For example, with an offset of <code>{ x: 0, y: 0.1, z: 0 }</code>, your avatar will appear to be raised off the ground slightly.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The current skeleton offset.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report your avatar&apos;s current skeleton offset.</p><pre><code>print(JSON.stringify(MyAvatar.getSkeletonOffset());</code></pre>
   <h5 class="name" id=".getSnapTurn"> getSnapTurn<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".getTargetAvatar"> getTargetAvatar<span class="signature">()</span> <span class="type-signature">&#x2192; {AvatarData}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: AvatarData</dt></dl>
   <h5 class="name" id=".getTargetAvatarPosition"> getTargetAvatarPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the avatar you&apos;re currently looking at.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report the position of the avatar you&apos;re currently looking at.</p><pre><code>print(JSON.stringify(MyAvatar.getTargetAvatarPosition()));</code></pre>
   <h5 class="name" id=".getTargetScale"> getTargetScale<span class="signature">()</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getThrust"> getThrust<span class="signature">()</span> <span class="type-signature">&#x2192; {vec3}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: vec3</dt></dl>
   <h5 class="name" id=".getUpdateRate"> getUpdateRate<span class="signature">(rateName<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {number}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>rateName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: number</dt></dl>
   <h5 class="name" id=".getWorldFeetPosition"> getWorldFeetPosition<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <div class="description"> Get the position of the current avatar&apos;s feet (or rather, bottom of its collision capsule) in world coordinates.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> The position of the avatar&apos;s feet in world coordinates.</div>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".goToFeetLocation"> goToFeetLocation<span class="signature">(position, hasOrientation<span class="signature-attributes">opt</span>, orientation<span class="signature-attributes">opt</span>, shouldFaceLocation<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h5>
   <div class="description"> Move the avatar to a new position and/or orientation in the domain, while taking into account Avatar leg-length.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The new position for the avatar, in world coordinates.</td>
       </tr>
       <tr>
         <td class="name"><code>hasOrientation</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> false</td>
         <td class="description last">Set to <code>true</code> to set the orientation of the avatar.</td>
       </tr>
       <tr>
         <td class="name"><code>orientation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> Quat.IDENTITY</td>
         <td class="description last">The new orientation for the avatar.</td>
       </tr>
       <tr>
         <td class="name"><code>shouldFaceLocation</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> false</td>
         <td class="description last">Set to <code>true</code> to position the avatar a short distance away from the new position and orientate the avatar to face the position.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".goToLocation"> goToLocation<span class="signature">(properties)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>properties</code></td>
         <td class="type"> <span class="param-type">object</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".goToLocation"> goToLocation<span class="signature">(position, hasOrientation<span class="signature-attributes">opt</span>, orientation<span class="signature-attributes">opt</span>, shouldFaceLocation<span class="signature-attributes">opt</span>, withSafeLanding<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h5>
   <div class="description"> Move the avatar to a new position and/or orientation in the domain.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last">The new position for the avatar, in world coordinates.</td>
       </tr>
       <tr>
         <td class="name"><code>hasOrientation</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> false</td>
         <td class="description last">Set to <code>true</code> to set the orientation of the avatar.</td>
       </tr>
       <tr>
         <td class="name"><code>orientation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> Quat.IDENTITY</td>
         <td class="description last">The new orientation for the avatar.</td>
       </tr>
       <tr>
         <td class="name"><code>shouldFaceLocation</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> false</td>
         <td class="description last">Set to <code>true</code> to position the avatar a short distance away from</td>
       </tr>
       <tr>
         <td class="name"><code>withSafeLanding</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> true</td>
         <td class="description last">Set to <code>false</code> MyAvatar::safeLanding will not be called (used when teleporting). the new position and orientate the avatar to face the position.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".goToLocationAndEnableCollisions"> goToLocationAndEnableCollisions<span class="signature">(position)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".grab"> grab<span class="signature">(targetID, parentJointIndex, offset, rotationalOffset)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/namespaces/uuid">Uuid</a>}</span></h5>
   <div class="description"> Create a new grab.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>targetID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">id of grabbed thing</td>
       </tr>
       <tr>
         <td class="name"><code>parentJointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">avatar joint being used to grab</td>
       </tr>
       <tr>
         <td class="name"><code>offset</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">target&apos;s positional offset from joint</td>
       </tr>
       <tr>
         <td class="name"><code>rotationalOffset</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">target&apos;s rotational offset from joint</td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <div class="param-desc"> id of the new grab</div>
   <dl><dt> Type: <a href="/api-reference/namespaces/uuid">Uuid</a></dt></dl>
   <h5 class="name" id=".increaseSize"> increaseSize<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Increase the avatar&apos;s scale by five percent, up to a minimum scale of <code>1000</code>.</div>
   <h5>Example</h5>
   <p class="code-caption">Reset your avatar&apos;s size to default then grow it 5 times.</p><pre><code>MyAvatar.resetSize();

for (var i = 0; i &lt; 5; i++){
   print (&quot;Growing by 5 percent&quot;);
   MyAvatar.increaseSize();
}</code></pre>
   <h5 class="name" id=".isDown"> isDown<span class="signature">(direction)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>direction</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".isDriveKeyDisabled"> isDriveKeyDisabled<span class="signature">(key)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>key</code></td>
         <td class="type"> <span class="param-type">DriveKeys</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".isFlying"> isFlying<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <div class="description"> Check whether your avatar is flying or not.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> <code>true</code> if your avatar is flying and not taking off or falling, otherwise <code>false</code>.</div>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".isInAir"> isInAir<span class="signature">()</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <div class="description"> Check whether your avatar is in the air or not.</div>
   <h6>Returns:</h6>
   <div class="param-desc"> <code>true</code> if your avatar is taking off, flying, or falling, otherwise <code>false</code> because your avatar is on the ground.</div>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".isJointDataValid"> isJointDataValid<span class="signature">(name)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".isJointDataValid"> isJointDataValid<span class="signature">(index)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".isRecenteringHorizontally"> isRecenteringHorizontally<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> The isRecenteringHorizontally function returns true if MyAvatar is translating the root of the Avatar to keep the center of gravity under the head. isActive(Horizontal) is returned.</div>
   <h5 class="name" id=".isUp"> isUp<span class="signature">(direction)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>direction</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".jointToWorldDirection"> jointToWorldDirection<span class="signature">(direction, jointIndex<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>direction</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>jointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> -1</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".jointToWorldPoint"> jointToWorldPoint<span class="signature">(position, jointIndex<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type">vec3</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>jointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> -1</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".jointToWorldRotation"> jointToWorldRotation<span class="signature">(rotation, jointIndex<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>jointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> -1</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h5 class="name" id=".overrideAnimation"> overrideAnimation<span class="signature">(url, fps, loop, firstFrame, lastFrame)</span><span class="type-signature"></span></h5>
   <div class="description"> The avatar animation system includes a set of default animations along with rules for how those animations are blended together with procedural data (such as look at vectors, hand sensors etc.). overrideAnimation() is used to completely override all motion from the default animation system (including inverse kinematics for hand and head controllers) and play a set of specified animations. To end these animations and restore the default animations, use <a href="/api-reference/namespaces/myavatar#.restoreAnimation">MyAvatar.restoreAnimation</a>.<br>
     <p>Note: When using pre-built animation data, it&apos;s critical that the joint orientation of the source animation and target rig are equivalent, since the animation data applies absolute values onto the joints. If the orientations are different, the avatar will move in unpredictable ways. For more information about avatar joint orientation standards, see <a href="https://docs.highfidelity.com/create-and-explore/avatars/avatar-standards">Avatar Standards</a>.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>url</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The URL to the animation file. Animation files need to be .FBX format, but only need to contain the avatar skeleton and animation data.</td>
       </tr>
       <tr>
         <td class="name"><code>fps</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The frames per second (FPS) rate for the animation playback. 30 FPS is normal speed.</td>
       </tr>
       <tr>
         <td class="name"><code>loop</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">Set to true if the animation should loop.</td>
       </tr>
       <tr>
         <td class="name"><code>firstFrame</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The frame the animation should start at.</td>
       </tr>
       <tr>
         <td class="name"><code>lastFrame</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The frame the animation should end at.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption"> Play a clapping animation on your avatar for three seconds.</p><pre><code>// Clap your hands for 3 seconds then restore animation back to the avatar.
var ANIM_URL = &quot;https://s3.amazonaws.com/hifi-public/animations/ClapAnimations/ClapHands_Standing.fbx&quot;;
MyAvatar.overrideAnimation(ANIM_URL, 30, true, 0, 53);
Script.setTimeout(function () {
   MyAvatar.restoreAnimation();
}, 3000);</code></pre>
   <h5 class="name" id=".overrideRoleAnimation"> overrideRoleAnimation<span class="signature">(role, url, fps, loop, firstFrame, lastFrame)</span><span class="type-signature"></span></h5>
   <div class="description"> Each avatar has an avatar-animation.json file that defines a set of animation roles. Animation roles map to easily understandable actions that the avatar can perform, such as &quot;idleStand&quot;, &quot;idleTalk&quot;, or &quot;walkFwd&quot;. To get the full list of roles, use getAnimationRoles(). For each role, the avatar-animation.json defines when the animation is used, the animation clip (.FBX) used, and how animations are blended together with procedural data (such as look at vectors, hand sensors etc.). overrideRoleAnimation() is used to change the animation clip (.FBX) associated with a specified animation role. To end the animations and restore the default animations, use <a href="/api-reference/namespaces/myavatar#.restoreRoleAnimation">MyAvatar.restoreRoleAnimation</a>.<br>
     <p>Note: Hand roles only affect the hand. Other &apos;main&apos; roles, like &apos;idleStand&apos;, &apos;idleTalk&apos;, &apos;takeoffStand&apos; are full body.</p>
     <p>Note: When using pre-built animation data, it&apos;s critical that the joint orientation of the source animation and target rig are equivalent, since the animation data applies absolute values onto the joints. If the orientations are different, the avatar will move in unpredictable ways. For more information about avatar joint orientation standards, see <a href="https://docs.highfidelity.com/create-and-explore/avatars/avatar-standards">Avatar Standards</a>.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>role</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The animation role to override</td>
       </tr>
       <tr>
         <td class="name"><code>url</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The URL to the animation file. Animation files need to be .FBX format, but only need to contain the avatar skeleton and animation data.</td>
       </tr>
       <tr>
         <td class="name"><code>fps</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The frames per second (FPS) rate for the animation playback. 30 FPS is normal speed.</td>
       </tr>
       <tr>
         <td class="name"><code>loop</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">Set to true if the animation should loop</td>
       </tr>
       <tr>
         <td class="name"><code>firstFrame</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The frame the animation should start at</td>
       </tr>
       <tr>
         <td class="name"><code>lastFrame</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The frame the animation should end at</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">The default avatar-animation.json defines an &quot;idleStand&quot; animation role. This role specifies that when the avatar is not moving, an animation clip of the avatar idling with hands hanging at its side will be used. It also specifies that when the avatar moves, the animation will smoothly blend to the walking animation used by the &quot;walkFwd&quot; animation role. In this example, the &quot;idleStand&quot; role animation clip has been replaced with a clapping animation clip. Now instead of standing with its arms hanging at its sides when it is not moving, the avatar will stand and clap its hands. Note that just as it did before, as soon as the avatar starts to move, the animation will smoothly blend into the walk animation used by the &quot;walkFwd&quot; animation role.</p><pre><code>// An animation of the avatar clapping its hands while standing. Restore default after 30s.
var ANIM_URL = &quot;https://s3.amazonaws.com/hifi-public/animations/ClapAnimations/ClapHands_Standing.fbx&quot;;
MyAvatar.overrideRoleAnimation(&quot;idleStand&quot;, ANIM_URL, 30, true, 0, 53);
Script.setTimeout(function () {
   MyAvatar.restoreRoleAnimation();
}, 30000);</code></pre>
   <h5 class="name" id=".pinJoint"> pinJoint<span class="signature">(index, position, orientation)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>orientation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".releaseGrab"> releaseGrab<span class="signature">(grabID)</span><span class="type-signature"></span></h5>
   <div class="description"> Release (delete) a grab.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>grabID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">id of grabbed thing</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".removeAnimationStateHandler"> removeAnimationStateHandler<span class="signature">(handler)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>handler</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".requestDisableHandTouch"> requestDisableHandTouch<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Request to disable hand touch effect globally</div>
   <h5 class="name" id=".requestEnableHandTouch"> requestEnableHandTouch<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Request to enable hand touch effect globally</div>
   <h5 class="name" id=".resetLastSent"> resetLastSent<span class="signature">()</span><span class="type-signature"></span></h5>
   <h5 class="name" id=".resetSensorsAndBody"> resetSensorsAndBody<span class="signature">()</span><span class="type-signature"></span></h5>
   <h5 class="name" id=".resetSize"> resetSize<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Reset the avatar&apos;s scale back to the default scale of <code>1.0</code>.</div>
   <h5 class="name" id=".restoreAnimation"> restoreAnimation<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> The avatar animation system includes a set of default animations along with rules for how those animations are blended together with procedural data (such as look at vectors, hand sensors etc.). Playing your own custom animations will override the default animations. restoreAnimation() is used to restore all motion from the default animation system including inverse kinematics for hand and head controllers. If you aren&apos;t currently playing an override animation, this function will have no effect.</div>
   <h5>Example</h5>
   <p class="code-caption"> Play a clapping animation on your avatar for three seconds.</p><pre><code>// Clap your hands for 3 seconds then restore animation back to the avatar.
var ANIM_URL = &quot;https://s3.amazonaws.com/hifi-public/animations/ClapAnimations/ClapHands_Standing.fbx&quot;;
MyAvatar.overrideAnimation(ANIM_URL, 30, true, 0, 53);
Script.setTimeout(function () {
   MyAvatar.restoreAnimation();
}, 3000);</code></pre>
   <h5 class="name" id=".restoreRoleAnimation"> restoreRoleAnimation<span class="signature">(role)</span><span class="type-signature"></span></h5>
   <div class="description"> Each avatar has an avatar-animation.json file that defines a set of animation roles. Animation roles map to easily understandable actions that the avatar can perform, such as &quot;idleStand&quot;, &quot;idleTalk&quot;, or &quot;walkFwd&quot;. To get the full list of roles, use getAnimationRoles(). For each role, the avatar-animation.json defines when the animation is used, the animation clip (.FBX) used, and how animations are blended together with procedural data (such as look at vectors, hand sensors etc.). You can change the animation clip (.FBX) associated with a specified animation role using overrideRoleAnimation(). restoreRoleAnimation() is used to restore a specified animation role&apos;s default animation clip. If you have not specified an override animation for the specified role, this function will have no effect.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>role</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The animation role clip to restore.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".restrictScaleFromDomainSettings"> restrictScaleFromDomainSettings<span class="signature">(domainSettingsObject)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>domainSettingsObject</code></td>
         <td class="type"> <span class="param-type">objecct</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".safeLanding"> safeLanding<span class="signature">(position)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".sendAvatarDataPacket"> sendAvatarDataPacket<span class="signature">(sendAll<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>sendAll</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> false</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".sendIdentityPacket"> sendIdentityPacket<span class="signature">()</span><span class="type-signature"></span></h5>
   <h5 class="name" id=".setAbsoluteJointRotationInObjectFrame"> setAbsoluteJointRotationInObjectFrame<span class="signature">(index, rotation)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".setAbsoluteJointTranslationInObjectFrame"> setAbsoluteJointTranslationInObjectFrame<span class="signature">(index, translation)</span> <span class="type-signature">&#x2192; {boolean}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: boolean</dt></dl>
   <h5 class="name" id=".setAnimGraphOverrideUrl"> setAnimGraphOverrideUrl<span class="signature">(url)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>url</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setAnimGraphUrl"> setAnimGraphUrl<span class="signature">(url)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>url</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setAttachmentData"> setAttachmentData<span class="signature">(attachmentData)</span><span class="type-signature"></span></h5>
   <div class="description"> Set all models currently attached to your avatar. For example, if you retrieve attachment data using <a href="/api-reference/namespaces/myavatar#.getAttachmentData">MyAvatar.getAttachmentData</a> or <a href="/api-reference/namespaces/avatar#.getAttachmentData">Avatar.getAttachmentData</a>, make changes to it, and then want to update your avatar&apos;s attachments per the changed data. You can also remove all attachments by using setting <code>attachmentData</code> to <code>null</code>.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>attachmentData</code></td>
         <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#AttachmentData">AttachmentData</a>&gt;</span></td>
         <td class="description last">The attachment data defining the models to have attached to your avatar. Use <code>null</code> to remove all attachments.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Remove a hat attachment if your avatar is wearing it.</p><pre><code>var hatURL = &quot;https://s3.amazonaws.com/hifi-public/tony/cowboy-hat.fbx&quot;;
var attachments = MyAvatar.getAttachmentData();

for (var i = 0; i &lt; attachments.length; i++) {
   if (attachments[i].modelURL === hatURL) {
       attachments.splice(i, 1);
       MyAvatar.setAttachmentData(attachments);
       break;
   }
}</code></pre>
   <h5 class="name" id=".setAttachmentsVariant"> setAttachmentsVariant<span class="signature">(variant)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>variant</code></td>
         <td class="type"> <span class="param-type">object</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setAvatarEntityData"> setAvatarEntityData<span class="signature">(avatarEntityData)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>avatarEntityData</code></td>
         <td class="type"> <span class="param-type">object</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setAvatarEntityData"> setAvatarEntityData<span class="signature">(avatarEntityData)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>avatarEntityData</code></td>
         <td class="type"> <span class="param-type">object</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setAvatarScale"> setAvatarScale<span class="signature">(scale)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>scale</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setBlendshape"> setBlendshape<span class="signature">(name, value)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>value</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setCenterOfGravityModelEnabled"> setCenterOfGravityModelEnabled<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setCharacterControllerEnabled"> setCharacterControllerEnabled<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <dl class="details"><dt class="important tag-deprecated">Deprecated:</dt>
     <dd class="yes-def tag-deprecated">
       <ul class="dummy">
         <li>Yes</li>
       </ul>
     </dd>
   </dl>
   <h5 class="name" id=".setCollisionsEnabled"> setCollisionsEnabled<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setDominantHand"> setDominantHand<span class="signature">(hand)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>hand</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawAnimPose"> setEnableDebugDrawAnimPose<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawBaseOfSupport"> setEnableDebugDrawBaseOfSupport<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawDefaultPose"> setEnableDebugDrawDefaultPose<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawDetailedCollision"> setEnableDebugDrawDetailedCollision<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawHandControllers"> setEnableDebugDrawHandControllers<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawIKChains"> setEnableDebugDrawIKChains<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawIKConstraints"> setEnableDebugDrawIKConstraints<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawIKTargets"> setEnableDebugDrawIKTargets<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawPosition"> setEnableDebugDrawPosition<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableDebugDrawSensorToWorldMatrix"> setEnableDebugDrawSensorToWorldMatrix<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableInverseKinematics"> setEnableInverseKinematics<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setEnableMeshVisible"> setEnableMeshVisible<span class="signature">(visible)</span><span class="type-signature"></span></h5>
   <div class="description"> Set whether or not your avatar mesh is visible.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>visible</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"><code>true</code> to set your avatar mesh visible; <code>false</code> to set it invisible.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Make your avatar invisible for 10s.</p><pre><code>MyAvatar.setEnableMeshVisible(false);
Script.setTimeout(function () {
   MyAvatar.setEnableMeshVisible(true);
}, 10000);</code></pre>
   <h5 class="name" id=".setFlyingDesktopPref"> setFlyingDesktopPref<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <div class="description"> Set your preference for flying in desktop display mode. Note that your ability to fly also depends on whether the domain you&apos;re in allows you to fly.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">Set <code>true</code> if you want to enable flying in desktop display mode, otherwise set <code>false</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setFlyingEnabled"> setFlyingEnabled<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <div class="description"> Set your preference for flying in your current desktop or HMD display mode. Note that your ability to fly also depends on whether the domain you&apos;re in allows you to fly.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">Set <code>true</code> if you want to enable flying in your current desktop or HMD display mode, otherwise set <code>false</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setFlyingHMDPref"> setFlyingHMDPref<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <div class="description"> Set your preference for flying in HMD display mode. Note that your ability to fly also depends on whether the domain you&apos;re in allows you to fly.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last">Set <code>true</code> if you want to enable flying in HMD display mode, otherwise set <code>false</code>.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setForceFaceTrackerConnected"> setForceFaceTrackerConnected<span class="signature">(connected)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>connected</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setGravity"> setGravity<span class="signature">(gravity)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>gravity</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setHandState"> setHandState<span class="signature">(state)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>state</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setHMDLeanRecenterEnabled"> setHMDLeanRecenterEnabled<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setJointData"> setJointData<span class="signature">(index, rotation, translation)</span><span class="type-signature"></span></h5>
   <div class="description"> Set a specific joint&apos;s rotation and position relative to its parent.<p>Setting joint data completely overrides/replaces all motion from the default animation system including inverse kinematics, but just for the specified joint. So for example, if you were to procedurally manipulate the finger joints, the avatar&apos;s hand and head would still do inverse kinematics properly. However, as soon as you start to manipulate joints in the inverse kinematics chain, the inverse kinematics might not function as you expect. For example, if you set the rotation of the elbow, the hand inverse kinematics position won&apos;t end up in the right place.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The index of the joint.</td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">The rotation of the joint relative to its parent.</td>
       </tr>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The translation of the joint relative to its parent.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Set your avatar to it&apos;s default T-pose for a while.<br> <img alt="Avatar in T-pose" src="https://docs.highfidelity.com/images/t-pose.png"></p><pre><code>// Set all joint translations and rotations to defaults.
var i, length, rotation, translation;
for (i = 0, length = MyAvatar.getJointNames().length; i &lt; length; i++) {
   rotation = MyAvatar.getDefaultJointRotation(i);
   translation = MyAvatar.getDefaultJointTranslation(i);
   MyAvatar.setJointData(i, rotation, translation);
}

// Restore your avatar&apos;s motion after 5s.
Script.setTimeout(function () {
   MyAvatar.clearJointsData();
}, 5000);</code></pre>
   <h5 class="name" id=".setJointData"> setJointData<span class="signature">(name, rotation, translation)</span><span class="type-signature"></span></h5>
   <div class="description"> Set a specific joint&apos;s rotation and position relative to its parent.<p>Setting joint data completely overrides/replaces all motion from the default animation system including inverse kinematics, but just for the specified joint. So for example, if you were to procedurally manipulate the finger joints, the avatar&apos;s hand and head would still do inverse kinematics properly. However, as soon as you start to manipulate joints in the inverse kinematics chain, the inverse kinematics might not function as you expect. For example, if you set the rotation of the elbow, the hand inverse kinematics position won&apos;t end up in the right place.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">The rotation of the joint relative to its parent.</td>
       </tr>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The translation of the joint relative to its parent.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setJointMappingsFromNetworkReply"> setJointMappingsFromNetworkReply<span class="signature">()</span><span class="type-signature"></span></h5>
   <h5 class="name" id=".setJointRotation"> setJointRotation<span class="signature">(name, rotation)</span><span class="type-signature"></span></h5>
   <div class="description"> Set a specific joint&apos;s rotation relative to its parent.<p>Setting joint data completely overrides/replaces all motion from the default animation system including inverse kinematics, but just for the specified joint. So for example, if you were to procedurally manipulate the finger joints, the avatar&apos;s hand and head would still do inverse kinematics properly. However, as soon as you start to manipulate joints in the inverse kinematics chain, the inverse kinematics might not function as you expect. For example, if you set the rotation of the elbow, the hand inverse kinematics position won&apos;t end up in the right place.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">The rotation of the joint relative to its parent.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Set your avatar to its default T-pose then rotate its right arm.<br> <img alt="Avatar in T-pose with arm rotated" src="https://docs.highfidelity.com/images/armpose.png"></p><pre><code>// Set all joint translations and rotations to defaults.
var i, length, rotation, translation;
for (i = 0, length = MyAvatar.getJointNames().length; i &lt; length; i++) {
   rotation = MyAvatar.getDefaultJointRotation(i);
   translation = MyAvatar.getDefaultJointTranslation(i);
   MyAvatar.setJointData(i, rotation, translation);
}

// Rotate the right arm.
var newArmRotation = { x: 0.47, y: 0.22, z: -0.02, w: 0.87 };
MyAvatar.setJointRotation(&quot;RightArm&quot;, newArmRotation);

// Restore your avatar&apos;s motion after 5s.
Script.setTimeout(function () {
   MyAvatar.clearJointsData();
}, 5000);</code></pre>
   <h5 class="name" id=".setJointRotation"> setJointRotation<span class="signature">(index, rotation)</span><span class="type-signature"></span></h5>
   <div class="description"> Set a specific joint&apos;s rotation relative to its parent.<p>Setting joint data completely overrides/replaces all motion from the default animation system including inverse kinematics, but just for the specified joint. So for example, if you were to procedurally manipulate the finger joints, the avatar&apos;s hand and head would still do inverse kinematics properly. However, as soon as you start to manipulate joints in the inverse kinematics chain, the inverse kinematics might not function as you expect. For example, if you set the rotation of the elbow, the hand inverse kinematics position won&apos;t end up in the right place.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The index of the joint.</td>
       </tr>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="description last">The rotation of the joint relative to its parent.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setJointRotations"> setJointRotations<span class="signature">(jointRotations)</span><span class="type-signature"></span></h5>
   <div class="description"> Set the rotations of all joints in the current avatar. Each joint&apos;s rotation is relative to its parent joint.<p>Setting joint data completely overrides/replaces all motion from the default animation system including inverse kinematics, but just for the specified joint. So for example, if you were to procedurally manipulate the finger joints, the avatar&apos;s hand and head would still do inverse kinematics properly. However, as soon as you start to manipulate joints in the inverse kinematics chain, the inverse kinematics might not function as you expect. For example, if you set the rotation of the elbow, the hand inverse kinematics position won&apos;t end up in the right place.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>jointRotations</code></td>
         <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#Quat">Quat</a>&gt;</span></td>
         <td class="description last">The rotations for all joints in the avatar. The values are in the same order as the array returned by <a href="/api-reference/namespaces/myavatar#.getJointNames">MyAvatar.getJointNames</a> or <a href="/api-reference/namespaces/avatar#.getJointNames">Avatar.getJointNames</a>.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Set your avatar to its default T-pose then rotate its right arm.<br> <img alt="Avatar in T-pose" src="https://docs.highfidelity.com/images/armpose.png"></p><pre><code>// Set all joint translations and rotations to defaults.
var i, length, rotation, translation;
for (i = 0, length = MyAvatar.getJointNames().length; i &lt; length; i++) {
   rotation = MyAvatar.getDefaultJointRotation(i);
   translation = MyAvatar.getDefaultJointTranslation(i);
   MyAvatar.setJointData(i, rotation, translation);
}

// Get all join rotations.
var jointRotations = MyAvatar.getJointRotations(); 

// Update the rotation of the right arm in the array.
jointRotations[MyAvatar.getJointIndex(&quot;RightArm&quot;)] = { x: 0.47, y: 0.22, z: -0.02, w: 0.87 };

// Update all joint rotations.
MyAvatar.setJointRotations(jointRotations);

// Restore your avatar&apos;s motion after 5s.
Script.setTimeout(function () {
   MyAvatar.clearJointsData();
}, 5000);</code></pre>
   <h5 class="name" id=".setJointTranslation"> setJointTranslation<span class="signature">(name, translation)</span><span class="type-signature"></span></h5>
   <div class="description"> Set a specific joint&apos;s translation relative to its parent.<p>Setting joint data completely overrides/replaces all motion from the default animation system including inverse kinematics, but just for the specified joint. So for example, if you were to procedurally manipulate the finger joints, the avatar&apos;s hand and head would still do inverse kinematics properly. However, as soon as you start to manipulate joints in the inverse kinematics chain, the inverse kinematics might not function as you expect. For example, if you set the rotation of the elbow, the hand inverse kinematics position won&apos;t end up in the right place.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">The name of the joint.</td>
       </tr>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The translation of the joint relative to its parent.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Stretch your avatar&apos;s neck. Depending on the avatar you are using, you will either see a gap between the head and body or you will see the neck stretched.<br> <img alt="Avatar with neck stretched" src="https://docs.highfidelity.com/images/stretched-neck.png"></p><pre><code>// Stretch your avatar&apos;s neck.
MyAvatar.setJointTranslation(&quot;Neck&quot;, { x: 0, y: 25, z: 0 });

// Restore your avatar&apos;s neck after 5s.
Script.setTimeout(function () {
   MyAvatar.clearJointData(&quot;Neck&quot;);
}, 5000);</code></pre>
   <h5 class="name" id=".setJointTranslation"> setJointTranslation<span class="signature">(index, translation)</span><span class="type-signature"></span></h5>
   <div class="description"> Set a specific joint&apos;s translation relative to its parent.<p>Setting joint data completely overrides/replaces all motion from the default animation system including inverse kinematics, but just for the specified joint. So for example, if you were to procedurally manipulate the finger joints, the avatar&apos;s hand and head would still do inverse kinematics properly. However, as soon as you start to manipulate joints in the inverse kinematics chain, the inverse kinematics might not function as you expect. For example, if you set the rotation of the elbow, the hand inverse kinematics position won&apos;t end up in the right place.</p>
   </div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">The index of the joint.</td>
       </tr>
       <tr>
         <td class="name"><code>translation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The translation of the joint relative to its parent.</td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setJointTranslations"> setJointTranslations<span class="signature">(translations)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>translations</code></td>
         <td class="type"> <span class="param-type">Array.&lt;<a href="/api-reference/globals#Vec3">Vec3</a>&gt;</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setModelScale"> setModelScale<span class="signature">(scale)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>scale</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setOrientationVar"> setOrientationVar<span class="signature">(newOrientationVar)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>newOrientationVar</code></td>
         <td class="type"> <span class="param-type">object</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setOtherAvatarsCollisionsEnabled"> setOtherAvatarsCollisionsEnabled<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setParentID"> setParentID<span class="signature">(parentID)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>parentID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setParentJointIndex"> setParentJointIndex<span class="signature">(parentJointIndex)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>parentJointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setRawJointData"> setRawJointData<span class="signature">(data)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>data</code></td>
         <td class="type"> <span class="param-type">Array.&lt;JointData&gt;</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setSessionUUID"> setSessionUUID<span class="signature">(sessionUUID)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>sessionUUID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setSkeletonOffset"> setSkeletonOffset<span class="signature">(offset)</span><span class="type-signature"></span></h5>
   <div class="description"> Set the offset applied to the current avatar. The offset adjusts the position that the avatar is rendered. For example, with an offset of <code>{ x: 0, y: 0.1, z: 0 }</code>, your avatar will appear to be raised off the ground slightly.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>offset</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last">The skeleton offset to set.</td>
       </tr>
     </tbody>
   </table>
   <h5>Example</h5>
   <p class="code-caption">Raise your avatar off the ground a little.</p><pre><code>// Raise your avatar off the ground a little.
MyAvatar.setSkeletonOffset({ x: 0, y: 0.1: z: 0 });

// Restore its offset after 5s.
Script.setTimeout(function () {
   MyAvatar.setSkeletonOffset(Vec3.ZERO);
}, 5000);</code></pre>
   <h5 class="name" id=".setSnapTurn"> setSnapTurn<span class="signature">(on)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>on</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setThrust"> setThrust<span class="signature">(thrust)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>thrust</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".setToggleHips"> setToggleHips<span class="signature">(enabled)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".triggerRotationRecenter"> triggerRotationRecenter<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Recenter the avatar&apos;s rotation, if <code><a href="/api-reference/namespaces/myavatar">MyAvatar.hmdLeanRecenterEnabled</a></code> is <code>false</code>.</div>
   <h5 class="name" id=".triggerVerticalRecenter"> triggerVerticalRecenter<span class="signature">()</span><span class="type-signature"></span></h5>
   <div class="description"> Recenter the avatar in the vertical direction, if <code><a href="/api-reference/namespaces/myavatar">MyAvatar.hmdLeanRecenterEnabled</a></code> is <code>false</code>.</div>
   <h5 class="name" id=".updateAvatarEntity"> updateAvatarEntity<span class="signature">(entityID, entityData)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>entityID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>entityData</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".updateAvatarEntity"> updateAvatarEntity<span class="signature">(entityID, entityData)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>entityID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>entityData</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".updateMotionBehaviorFromMenu"> updateMotionBehaviorFromMenu<span class="signature">()</span><span class="type-signature"></span></h5>
   <h5 class="name" id=".useFullAvatarURL"> useFullAvatarURL<span class="signature">(fullAvatarURL, modelName<span class="signature-attributes">opt</span>)</span><span class="type-signature"></span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>fullAvatarURL</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>modelName</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> &quot;&quot;</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h5 class="name" id=".worldToJointDirection"> worldToJointDirection<span class="signature">(direction, jointIndex<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>direction</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>jointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> -1</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".worldToJointPoint"> worldToJointPoint<span class="signature">(position, jointIndex<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Vec3">Vec3</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>position</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>jointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> -1</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Vec3">Vec3</a></dt></dl>
   <h5 class="name" id=".worldToJointRotation"> worldToJointRotation<span class="signature">(rotation, jointIndex<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/globals#Quat">Quat</a>}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th>Attributes</th>
         <th>Default</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>rotation</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
         <td class="attributes"></td>
         <td class="default"></td>
         <td class="description last"></td>
       </tr>
       <tr>
         <td class="name"><code>jointIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="attributes"> &lt;optional&gt;<br></td>
         <td class="default"> -1</td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: <a href="/api-reference/globals#Quat">Quat</a></dt></dl>
   <h4 class="subsection-title">Signals</h4>
   <h5 class="name" id=".animGraphUrlChanged"> animGraphUrlChanged<span class="signature">(url)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <div class="description"> Triggered when avatar&apos;s animation url changes</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>url</code></td>
         <td class="type"> <span class="param-type">url</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".attachmentsChanged"> attachmentsChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".audioListenerModeChanged"> audioListenerModeChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".collisionsEnabledChanged"> collisionsEnabledChanged<span class="signature">(enabled)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <div class="description"> Triggered when collisions with avatar enabled or disabled</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".collisionWithEntity"> collisionWithEntity<span class="signature">(collision)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <div class="description"> Triggered when the avatar collides with an entity.</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>collision</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/globals#Collision">Collision</a></span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5>Example</h5>
   <p class="code-caption">Report each time your avatar collides with an entity.</p><pre><code>MyAvatar.collisionWithEntity.connect(function (collision) {
   print(&quot;Your avatar collided with an entity.&quot;);
});</code></pre>
   <h5 class="name" id=".disableHandTouchForIDChanged"> disableHandTouchForIDChanged<span class="signature">(entityID, disable)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <div class="description"> Triggered when hand touch is enabled or disabled for an specific entity</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>entityID</code></td>
         <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/uuid">Uuid</a></span></td>
         <td class="description last">ID of the entity that will enable hand touch effect</td>
       </tr>
       <tr>
         <td class="name"><code>disable</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".displayNameChanged"> displayNameChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".dominantHandChanged"> dominantHandChanged<span class="signature">(hand)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>hand</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".energyChanged"> energyChanged<span class="signature">(energy)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>energy</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".lookAtSnappingChanged"> lookAtSnappingChanged<span class="signature">(enabled)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".newCollisionSoundURL"> newCollisionSoundURL<span class="signature">(url)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>url</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".onLoadComplete"> onLoadComplete<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".otherAvatarsCollisionsEnabledChanged"> otherAvatarsCollisionsEnabledChanged<span class="signature">(enabled)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <div class="description"> Triggered when collisions with other avatars enabled or disabled</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>enabled</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".positionGoneTo"> positionGoneTo<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".rigReady"> rigReady<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".rigReset"> rigReset<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".scaleChanged"> scaleChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".sensorToWorldScaleChanged"> sensorToWorldScaleChanged<span class="signature">(scale)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>scale</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".sessionDisplayNameChanged"> sessionDisplayNameChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".sessionUUIDChanged"> sessionUUIDChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".shouldDisableHandTouchChanged"> shouldDisableHandTouchChanged<span class="signature">(shouldDisable)</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <div class="description"> Triggered when hand touch is globally enabled or disabled</div>
   <h5>Parameters:</h5>
   <table class="params">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>shouldDisable</code></td>
         <td class="type"> <span class="param-type">boolean</span></td>
         <td class="description last"></td>
       </tr>
     </tbody>
   </table>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".skeletonChanged"> skeletonChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".skeletonModelURLChanged"> skeletonModelURLChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".transformChanged"> transformChanged<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".wentActive"> wentActive<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h5 class="name" id=".wentAway"> wentAway<span class="signature">()</span> <span class="type-signature">&#x2192; {Signal}</span></h5>
   <h6>Returns:</h6>
   <dl><dt> Type: Signal</dt></dl>
   <h4 class="subsection-title">Type Definitions</h4>
   <h5 class="name" id=".SkeletonJoint">SkeletonJoint</h5>
   <div class="description"> Information about a single joint in an Avatar&apos;s skeleton hierarchy.</div>
   <dl><dt>Type: <span class="param-type">object</span></dl></dt>
   <h5 class="subsection-title">Properties:</h5>
   <table class="props">
     <thead>
       <tr>
         <th>Name</th>
         <th>Type</th>
         <th class="last">Description</th>
       </tr>
     </thead>
     <tbody>
       <tr>
         <td class="name"><code>name</code></td>
         <td class="type"> <span class="param-type">string</span></td>
         <td class="description last">Joint name.</td>
       </tr>
       <tr>
         <td class="name"><code>index</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Joint index.</td>
       </tr>
       <tr>
         <td class="name"><code>parentIndex</code></td>
         <td class="type"> <span class="param-type">number</span></td>
         <td class="description last">Index of this joint&apos;s parent (-1 if no parent).</td>
       </tr>
     </tbody>
   </table>
 </article>
</section>
               </div>
           </div>
       {% endblock %}