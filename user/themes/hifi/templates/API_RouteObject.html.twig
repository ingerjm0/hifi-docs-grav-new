      {% extends 'partials/base_noGit.html.twig' %}
      {% set tags = page.taxonomy.tag %}
      {% if tags %}
          {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs', 'tag': tags}},'order': {'by': 'default', 'dir': 'asc'}}) %}
      {% else %}
          {% set progress = page.collection({'items':{'@taxonomy':{'category': 'docs'}},'order': {'by': 'default', 'dir': 'asc'}}) %}
      {% endif %}
      
      {% block navigation %}
          <div id="navigation">
          {% if not progress.isFirst(page.path) %}
              <a class="nav nav-prev" href="{{ progress.nextSibling(page.path).url }}"> <img src="{{ url('theme://images/left-arrow.png') }}"></a>
          {% endif %}
      
          {% if not progress.isLast(page.path) %}
              <a class="nav nav-next" href="{{ progress.prevSibling(page.path).url }}"><img src="{{ url('theme://images/right-arrow.png') }}"></a>
          {% endif %}
          </div>
      {% endblock %}
      
      {% block content %}
          <div id="api-specific">
              <div id="body-inner">
                  <h1>{{ page.title }}</h1>
                  <section>
<article>
  <div class="container-overview">
    
    <div class="description">
      <table>
        <tbody>
          <tr>
            <th>Available in:</th>
            <td>Interface Scripts</td>
            <td>Client Entity Scripts</td>
          </tr>
        </tbody>
      </table><br>
      <p>A route in a <a href="/api-reference/objects/mappingobject">MappingObject</a> used by the <a href="/api-reference/namespaces/controller">Controller</a> API.</p>
      <p>Create a route using <a href="/api-reference/objects/mappingobject">MappingObject</a> methods and apply this object&apos;s methods to process it, terminating with <a href="/api-reference/objects/routeobject#to">RouteObject#to</a> to apply it to a <code>Standard</code> control, action, or script function. Note: Loops are not permitted.</p>
      <p>Some methods apply to routes with number data, some apply routes with <a href="/api-reference/globals#Pose">Pose</a> data, and some apply to both route types.</p>
      <p></p>
    </div>
    <div>
      <h5>Methods</h5>
    </div>
    <div><a href="#clamp">clamp</a></div>
    <div><a href="#constrainToInteger">constrainToInteger</a></div>
    <div><a href="#constrainToPositiveInteger">constrainToPositiveInteger</a></div>
    <div><a href="#deadZone">deadZone</a></div>
    <div><a href="#debug">debug</a></div>
    <div><a href="#exponentialSmoothing">exponentialSmoothing</a></div>
    <div><a href="#hysteresis">hysteresis</a></div>
    <div><a href="#invert">invert</a></div>
    <div><a href="#logicalNot">logicalNot</a></div>
    <div><a href="#lowVelocity">lowVelocity</a></div>
    <div><a href="#peek">peek</a></div>
    <div><a href="#postTransform">postTransform</a></div>
    <div><a href="#pulse">pulse</a></div>
    <div><a href="#rotate">rotate</a></div>
    <div><a href="#scale">scale</a></div>
    <div><a href="#to">to</a></div>
    <div><a href="#toQml">toQml</a></div>
    <div><a href="#transform">transform</a></div>
    <div><a href="#translate">translate</a></div>
    <div><a href="#when">when</a></div>
    <div><a href="#whenQml">whenQml</a></div><br>
  </div>
  <h4 class="subsection-title">Methods</h4>
  <h5 class="name" id="clamp"><span class="type-signature"></span>clamp<span class="signature">(min, max)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric route values to lie between two values; values outside this range are not passed on through the route.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>min</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The minimum value to pass through.</td>
      </tr>
      <tr>
        <td class="name"><code>max</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The maximum value to pass through.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The route object with the clamp filter added.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Clamp right trigger values to between 0.3 and 0.7.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.RT).clamp(0.3, 0.7).to(function (value) {
  print(&quot;Value: &quot; + value);
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="constrainToInteger"><span class="type-signature"></span>constrainToInteger<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric route values such that they are rounded to <code>-1</code>, <code>0</code>, or <code>1</code>. For example, this enables you to use an analog input as if it were a toggle or, in the case of a bidirectional axis, a tri-state switch.</div>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Round the right joystick forward/back values to <code>-1</code>, <code>0</code>, or <code>1</code>.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.RY).constrainToInteger().to(function (value) {
  print(&quot;Value: &quot; + value);  // -1, 0, or 1
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="constrainToPositiveInteger"><span class="type-signature"></span>constrainToPositiveInteger<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric route values such that they are rounded to <code>0</code> or <code>1</code>. For example, this enables you to use an analog input as if it were a toggle.</div>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Round the right joystick forward/back values to <code>0</code> or <code>1</code>.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.RY).constrainToPositiveInteger().to(function (value) {
  print(&quot;Value: &quot; + value);  // 0, or 1
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="deadZone"><span class="type-signature"></span>deadZone<span class="signature">(min)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric route values such that they&apos;re sent only when the input value is outside a dead-zone. When the input passes the dead-zone value, output is sent starting at <code>0.0</code> and catching up with the input value. As the input returns toward the dead-zone value, output values reduce to <code>0.0</code> at the dead-zone value.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>min</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The minimum input value at which to start sending output. For negative input values, the negative of this value is used.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Apply a dead-zone to the right joystick forward/back values.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.RY).deadZone(0.2).to(function (value) {
  print(&quot;Value: &quot; + value);  // 0.0 - 1.0 values once outside the dead-zone.
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="debug"><span class="type-signature"></span>debug<span class="signature">(enable<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Enable and disabling writing debug information for a route to the program log.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Attributes</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>enable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="attributes"> &lt;optional&gt;<br></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code> then writing debug information is enabled for the route, otherwise it is disabled.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with debug output enabled or disabled.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Write debug information to the program log for a right trigger mapping.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);

mapping.from(Controller.Standard.RT).debug().to(function (value) {
  print(&quot;Value: &quot; + value);
});

// Information similar to the following is written each frame:
[DEBUG] [hifi.controllers] Beginning mapping frame
[DEBUG] [hifi.controllers] Processing device routes
[DEBUG] [hifi.controllers] Processing standard routes
[DEBUG] [hifi.controllers] Applying route  &quot;&quot;
[DEBUG] [hifi.controllers] Value was  5.96046e-07
[DEBUG] [hifi.controllers] Filtered value was  5.96046e-07

Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="exponentialSmoothing"><span class="type-signature"></span>exponentialSmoothing<span class="signature">(rotationConstant, translationConstant)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter <a href="/api-reference/globals#Pose">Pose</a> route values to be smoothed by an exponential decay filter. The filter&apos;s rotation and translation values are calculated as: <code>filterConstant * currentValue + (1 - filterConstant) * previousValue</code>. Values near 1 are less smooth with lower latency; values near 0 are more smooth with higher latency.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>rotationConstant</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">Rotation filter constant, <code>0.0&#x2013;1.0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>translationConstant</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">Translation filter constant, <code>0.0&#x2013;1.0</code>.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> smoothed by an exponential filter.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5 class="name" id="hysteresis"><span class="type-signature"></span>hysteresis<span class="signature">(min, max)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric route values such that they are rounded to <code>0</code> or <code>1</code> without output values flickering when the input value hovers around <code>0.5</code>. For example, this enables you to use an analog input as if it were a toggle.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>min</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">When the input value drops below this value the output value changes to <code>0</code>.</td>
      </tr>
      <tr>
        <td class="name"><code>max</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">When the input value rises above this value the output value changes to <code>1</code>.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Round the right joystick forward/back values to 0 or 1 with hysteresis.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.RY).peek().to(function (value) {
  print(&quot;Raw value: &quot; + value);  // 0.0 - 1.0.
});
mapping.from(Controller.Standard.RY).hysteresis(0.3, 0.7).to(function (value) {
  print(&quot;Hysteresis value: &quot; + value);  // 0 or 1.
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="invert"><span class="type-signature"></span>invert<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric and <a href="/api-reference/globals#Pose">Pose</a> route values to have the opposite sign, e.g., <code>0.5</code> is changed to <code>-0.5</code>.</div>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Invert the value of the right joystick forward/back values.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.LY).to(function (value) {
  print(&quot;L value: &quot; + value);  // -1.0 to 1.0 values, forward to back.
});
mapping.from(Controller.Standard.RY).invert().to(function (value) {
  print(&quot;R value: &quot; + value);  // 1.0 to -1.0 values, forward to back.
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="logicalNot"><span class="type-signature"></span>logicalNot<span class="signature">()</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric route values such that a value of <code>0.0</code> is changed to <code>1.0</code>, and other values are changed to <code>0.0</code>.</div>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Logical NOT of LSTouch value.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);

mapping.from(Controller.Standard.RSTouch).peek().to(function (value) {
  print(&quot;RSTouch: &quot; + value);
});
mapping.from(Controller.Standard.RSTouch).logicalNot().to(function (value) {
  print(&quot;localNot of RSTouch: &quot; + value);
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});
       </code></pre>
  <h5 class="name" id="lowVelocity"><span class="type-signature"></span>lowVelocity<span class="signature">(rotationConstant, translationConstant)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter <a href="/api-reference/globals#Pose">Pose</a> route values to be smoothed by a low velocity filter. The filter&apos;s rotation and translation values are calculated as: <code>(1 - f) * currentValue + f * previousValue</code> where <code>f = currentVelocity / filterConstant</code>. At low velocities, the filter value is largely the previous value; at high velocities the value is wholly the current controller value.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>rotationConstant</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The rotational velocity, in rad/s, at which the filter value is wholly the latest controller value.</td>
      </tr>
      <tr>
        <td class="name"><code>translationConstant</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The linear velocity, in m/s, at which the filter value is wholly the latest controller value.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> smoothed by low velocity filtering.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5 class="name" id="peek"><span class="type-signature"></span>peek<span class="signature">(enable<span class="signature-attributes">opt</span>)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Process the route without marking the controller output as having been read, so that other routes from the same controller output can also process.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Attributes</th>
        <th>Default</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>enable</code></td>
        <td class="type"> <span class="param-type">boolean</span></td>
        <td class="attributes"> &lt;optional&gt;<br></td>
        <td class="default"> true</td>
        <td class="description last">If <code>true</code> then the route is processed without marking the route&apos;s controller source as having been read.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the peek feature enabled.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5 class="name" id="postTransform"><span class="type-signature"></span>postTransform<span class="signature">(transform)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter <a href="/api-reference/globals#Pose">Pose</a> route values to have a post-transform applied.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>transform</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/mat4">Mat4</a></span></td>
        <td class="description last">The post-transform to apply.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the post-transform applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5 class="name" id="pulse"><span class="type-signature"></span>pulse<span class="signature">(interval)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric route values to send at a specified interval.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>interval</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The interval between sending values, in seconds.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Send right trigger values every half second.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.RT).pulse(0.5).to(function (value) {
  print(&quot;Value: &quot; + value);
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="rotate"><span class="type-signature"></span>rotate<span class="signature">(rotation)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter <a href="/api-reference/globals#Pose">Pose</a> route values to have a pre-rotation applied.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>rotation</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Quat">Quat</a></span></td>
        <td class="description last">The pre-rotation to add to the pose.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the pre-rotation applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5 class="name" id="scale"><span class="type-signature"></span>scale<span class="signature">(multiplier)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter numeric and <a href="/api-reference/globals#Pose">Pose</a> route values to be scaled by a constant amount.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>multiplier</code></td>
        <td class="type"> <span class="param-type">number</span></td>
        <td class="description last">The scale to multiply the value by.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the filter applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Scale the value of the right joystick forward/back values by 10.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);
mapping.from(Controller.Standard.LY).to(function (value) {
  print(&quot;L value: &quot; + value);  // -1.0 to 1.0 values.
});
mapping.from(Controller.Standard.RY).scale(10.0).to(function (value) {
  print(&quot;R value: &quot; + value);  // -10.0 to -10.0 values.
});
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="to"><span class="type-signature"></span>to<span class="signature">(destination)</span><span class="type-signature"></span></h5>
  <div class="description"> Terminate the route with a standard control, an action, or a script function. The output value from the route is sent to the specified destination.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>destination</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/controller#.Standard">Controller.Standard</a></span> | <span class="param-type"><a href="/api-reference/namespaces/controller#.Actions">Controller.Actions</a></span> | <span class="param-type">function</span></td>
        <td class="description last">The standard control, action, or JavaScript function that the route output is mapped to. For a function, the parameter can be either the name of the function or an in-line function definition.</td>
      </tr>
    </tbody>
  </table>
  <h5>Examples</h5>
  <p class="code-caption">Make the right trigger move your avatar up.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);

mapping.from(Controller.Standard.RT).to(Controller.Actions.TranslateY);
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <p class="code-caption">Make the right trigger call a function.</p><pre><code>function onRightTrigger(value) {
  print(&quot;Trigger value: &quot; + value);
}

var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);

mapping.from(Controller.Standard.RT).to(onRightTrigger);
Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="toQml"><span class="type-signature"></span>toQml<span class="signature">(destination)</span><span class="type-signature"></span></h5>
  <div class="description"> Terminate the route with a standard control, an action, or a script function. The output value from the route is sent to the specified destination.<br> This is a QML-specific version of to: use this version in QML files.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>destination</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/controller#.Standard">Controller.Standard</a></span> | <span class="param-type"><a href="/api-reference/namespaces/controller#.Actions">Controller.Actions</a></span> | <span class="param-type">function</span></td>
        <td class="description last">The standard control, action, or JavaScript function that the route output is mapped to. For a function, the parameter can be either the name of the function or an in-line function definition.</td>
      </tr>
    </tbody>
  </table>
  <h5 class="name" id="transform"><span class="type-signature"></span>transform<span class="signature">(transform)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter <a href="/api-reference/globals#Pose">Pose</a> route values to have a pre-transform applied.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>transform</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/namespaces/mat4">Mat4</a></span></td>
        <td class="description last">The pre-transform to apply.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the pre-transform applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5 class="name" id="translate"><span class="type-signature"></span>translate<span class="signature">(translate)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Filter <a href="/api-reference/globals#Pose">Pose</a> route values to have a pre-translation applied.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>translate</code></td>
        <td class="type"> <span class="param-type"><a href="/api-reference/globals#Vec3">Vec3</a></span></td>
        <td class="description last">The pre-translation to add to the pose.</td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the pre-translation applied.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5 class="name" id="when"><span class="type-signature"></span>when<span class="signature">(expression)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Process the route only if a condition is satisfied. The condition is evaluated before the route input is read, and the input is read only if the condition is <code>true</code>. Thus, if the condition is not met then subsequent routes using the same input are processed.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>expression</code></td>
        <td class="type"> <span class="param-type">condition</span> | <span class="param-type">Array.&lt;condition&gt;</span></td>
        <td class="description last">
          <p>A <code>condition</code> may be a:</p>
          <ul>
            <li>A numeric <a href="/api-reference/namespaces/controller#.Hardware">Controller.Hardware</a> property, which is evaluated as a boolean.</li>
            <li><code>!</code> followed by a <a href="/api-reference/namespaces/controller#.Hardware">Controller.Hardware</a> property to use the logical NOT of the property value.</li>
            <li>A script function returning a boolean value. This can be either the name of the function or an in-line definition.</li>
          </ul>
          <p>If an array of conditions is provided, their values are ANDed together.</p>
        </td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the condition added.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
  <h5>Example</h5>
  <p class="code-caption">Process the right trigger differently in HMD and desktop modes.</p><pre><code>var MAPPING_NAME = &quot;com.highfidelity.controllers.example.newMapping&quot;;
var mapping = Controller.newMapping(MAPPING_NAME);

// Processed only if in HMD mode.
mapping.from(Controller.Standard.RT)
  .when(Controller.Hardware.Application.InHMD)
  .to(function () { print(&quot;Trigger pressed in HMD mode.&quot;); });

// Processed only if previous route not processed.
mapping.from(Controller.Standard.RT)
  .to(function () { print(&quot;Trigger pressed in desktop mode.&quot;); });

Controller.enableMapping(MAPPING_NAME);

Script.scriptEnding.connect(function () {
  Controller.disableMapping(MAPPING_NAME);
});</code></pre>
  <h5 class="name" id="whenQml"><span class="type-signature"></span>whenQml<span class="signature">(expression)</span> <span class="type-signature">&#x2192; {<a href="/api-reference/objects/routeobject">RouteObject</a>}</span></h5>
  <div class="description"> Process the route only if a condition is satisfied. The condition is evaluated before the route input is read, and the input is read only if the condition is <code>true</code>. Thus, if the condition is not met then subsequent routes using the same input are processed.<br> This is a QML-specific version of to: use this version in QML files.</div>
  <h5>Parameters:</h5>
  <table class="params">
    <thead>
      <tr>
        <th>Name</th>
        <th>Type</th>
        <th class="last">Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td class="name"><code>expression</code></td>
        <td class="type"> <span class="param-type">condition</span> | <span class="param-type">Array.&lt;condition&gt;</span></td>
        <td class="description last">
          <p>A <code>condition</code> may be a:</p>
          <ul>
            <li>A boolean or numeric <a href="/api-reference/namespaces/controller#.Hardware">Controller.Hardware</a> property, which is evaluated as a boolean.</li>
            <li><code>!</code> followed by a <a href="/api-reference/namespaces/controller#.Hardware">Controller.Hardware</a> property, indicating the logical NOT should be used.</li>
            <li>A script function returning a boolean value. This can be either the name of the function or an in-line definition.</li>
          </ul>
          <p>If an array of conditions is provided, their values are ANDed together.</p>
        </td>
      </tr>
    </tbody>
  </table>
  <h6>Returns:</h6>
  <div class="param-desc"> The <code>RouteObject</code> with the condition added.</div>
  <dl><dt> Type: <a href="/api-reference/objects/routeobject">RouteObject</a></dt></dl>
</article>
</section>
              </div>
          </div>
      {% endblock %}